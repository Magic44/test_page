<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>阿里云嵩山版Java开发手册</title><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 .s1 { color: #525252; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 24pt; }
 .s2 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s3 { color: #C00000; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s4 { color: #FFC000; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s5 { color: #76923B; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s9 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s10 { color: #365F91; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 24pt; }
 .s11 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .a { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s12 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s13 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s14 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s15 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 22.5pt; }
 .s16 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s17 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s18 { color: #FF4500; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s19 { color: #C6244E; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s21 { color: #967B00; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s23 { color: #FF4500; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s24 { color: #009757; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .p, p { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; margin:0pt; }
 .s25 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s26 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s27 { color: #967B00; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s28 { color: #07A; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s29 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s30 { color: #999; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s31 { color: #6F8090; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s32 { color: #DD4968; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s33 { color: #A67E58; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s35 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s36 { color: #C00000; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s37 { color: #FFC000; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s40 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s41 { color: #C6244E; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s42 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s43 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s45 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s46 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s47 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s48 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s50 { color: #23292D; font-family:"Segoe UI", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s51 { color: #23292D; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s52 { color: #23292D; font-family:"Segoe UI", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s53 { color: #00F; font-family:"Segoe UI", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s54 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s55 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s56 { color: #FF4500; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s57 { color: #F00; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s58 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s60 { color: #967B00; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s61 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt; }
 .s62 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s63 { color: black; font-family:宋体; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s64 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s66 { color: #999; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s69 { color: #23292D; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s70 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s71 { color: #333; font-family:微软雅黑, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s72 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s73 { color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 .s74 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 h2 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10.5pt; }
 .s75 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s76 { color: #525252; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s77 { color: #BEBEBE; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s78 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt; }
 .s79 { color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 9pt; }
 .s80 { color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s81 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s82 { color: #008000; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s83 { color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s84 { color: #03C; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l1 {padding-left: 0pt;counter-reset: c1 1; }
 #l1> li>*:first-child:before {counter-increment: c1; content: counter(c1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l1> li:first-child>*:first-child:before {counter-increment: c1 0;  }
 #l2 {padding-left: 0pt;counter-reset: c2 1; }
 #l2> li>*:first-child:before {counter-increment: c2; content: counter(c2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: c2 0;  }
 li {display: block; }
 #l3 {padding-left: 0pt;counter-reset: d1 1; }
 #l3> li>*:first-child:before {counter-increment: d1; content: counter(d1, upper-latin)") "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l4 {padding-left: 0pt;counter-reset: d2 1; }
 #l4> li>*:first-child:before {counter-increment: d2; content: counter(d2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l5 {padding-left: 0pt;counter-reset: d2 1; }
 #l5> li>*:first-child:before {counter-increment: d2; content: counter(d2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 li {display: block; }
 #l6 {padding-left: 0pt;counter-reset: e1 1; }
 #l6> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l7 {padding-left: 0pt;counter-reset: e2 1; }
 #l7> li>*:first-child:before {counter-increment: e2; content: counter(e2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 li {display: block; }
 #l8 {padding-left: 0pt;counter-reset: f1 1; }
 #l8> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l9 {padding-left: 0pt;counter-reset: f2 1; }
 #l9> li>*:first-child:before {counter-increment: f2; content: counter(f2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: f2 0;  }
 #l10 {padding-left: 0pt;counter-reset: f2 1; }
 #l10> li>*:first-child:before {counter-increment: f2; content: counter(f2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: f2 0;  }
 li {display: block; }
 #l11 {padding-left: 0pt;counter-reset: g1 1; }
 #l11> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l12 {padding-left: 0pt;counter-reset: g2 1; }
 #l12> li>*:first-child:before {counter-increment: g2; content: "("counter(g2, decimal)") "; color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l13 {padding-left: 0pt;counter-reset: h1 1; }
 #l13> li>*:first-child:before {counter-increment: h1; content: counter(h1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: h1 0;  }
 #l14 {padding-left: 0pt;counter-reset: i1 1; }
 #l14> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l14> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 li {display: block; }
 #l15 {padding-left: 0pt;counter-reset: j1 1; }
 #l15> li>*:first-child:before {counter-increment: j1; content: counter(j1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: j1 0;  }
 #l16 {padding-left: 0pt;counter-reset: k1 7; }
 #l16> li>*:first-child:before {counter-increment: k1; content: counter(k1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: k1 0;  }
 #l17 {padding-left: 0pt;counter-reset: l1 1; }
 #l17> li>*:first-child:before {counter-increment: l1; content: counter(l1, decimal)". "; color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: l1 0;  }
 #l18 {padding-left: 0pt;counter-reset: l2 1; }
 #l18> li>*:first-child:before {counter-increment: l2; content: counter(l2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l18> li:first-child>*:first-child:before {counter-increment: l2 0;  }
 #l19 {padding-left: 0pt;counter-reset: m1 1; }
 #l19> li>*:first-child:before {counter-increment: m1; content: counter(m1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l19> li:first-child>*:first-child:before {counter-increment: m1 0;  }
 #l20 {padding-left: 0pt;counter-reset: m2 1; }
 #l20> li>*:first-child:before {counter-increment: m2; content: counter(m2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: m2 0;  }
 #l21 {padding-left: 0pt;counter-reset: j2 2; }
 #l21> li>*:first-child:before {counter-increment: j2; content: counter(j2, decimal)"） "; color: #23292D; font-family:"Segoe UI", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l21> li:first-child>*:first-child:before {counter-increment: j2 0;  }
 li {display: block; }
 #l22 {padding-left: 0pt;counter-reset: m1 10; }
 #l22> li>*:first-child:before {counter-increment: m1; content: counter(m1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l22> li:first-child>*:first-child:before {counter-increment: m1 0;  }
 #l23 {padding-left: 0pt;counter-reset: m2 1; }
 #l23> li>*:first-child:before {counter-increment: m2; content: counter(m2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l23> li:first-child>*:first-child:before {counter-increment: m2 0;  }
 li {display: block; }
 #l24 {padding-left: 0pt;counter-reset: n1 1; }
 #l24> li>*:first-child:before {counter-increment: n1; content: counter(n1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l24> li:first-child>*:first-child:before {counter-increment: n1 0;  }
 li {display: block; }
 #l25 {padding-left: 0pt;counter-reset: o1 1; }
 #l25> li>*:first-child:before {counter-increment: o1; content: counter(o1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l25> li:first-child>*:first-child:before {counter-increment: o1 0;  }
 #l26 {padding-left: 0pt;counter-reset: o2 1; }
 #l26> li>*:first-child:before {counter-increment: o2; content: counter(o2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l26> li:first-child>*:first-child:before {counter-increment: o2 0;  }
 #l27 {padding-left: 0pt;counter-reset: o2 1; }
 #l27> li>*:first-child:before {counter-increment: o2; content: counter(o2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l27> li:first-child>*:first-child:before {counter-increment: o2 0;  }
 #l28 {padding-left: 0pt;counter-reset: o2 1; }
 #l28> li>*:first-child:before {counter-increment: o2; content: counter(o2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l28> li:first-child>*:first-child:before {counter-increment: o2 0;  }
 li {display: block; }
 #l29 {padding-left: 0pt;counter-reset: p1 1; }
 #l29> li>*:first-child:before {counter-increment: p1; content: counter(p1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l29> li:first-child>*:first-child:before {counter-increment: p1 0;  }
 #l30 {padding-left: 0pt; }
 #l30> li>*:first-child:before {content: "* "; color: #6F8090; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l31 {padding-left: 0pt;counter-reset: p2 1; }
 #l31> li>*:first-child:before {counter-increment: p2; content: counter(p2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l31> li:first-child>*:first-child:before {counter-increment: p2 0;  }
 li {display: block; }
 #l32 {padding-left: 0pt;counter-reset: r1 1; }
 #l32> li>*:first-child:before {counter-increment: r1; content: counter(r1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l32> li:first-child>*:first-child:before {counter-increment: r1 0;  }
 #l33 {padding-left: 0pt;counter-reset: r2 1; }
 #l33> li>*:first-child:before {counter-increment: r2; content: counter(r2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l33> li:first-child>*:first-child:before {counter-increment: r2 0;  }
 #l34 {padding-left: 0pt;counter-reset: r3 1; }
 #l34> li>*:first-child:before {counter-increment: r3; content: counter(r3, lower-latin)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l34> li:first-child>*:first-child:before {counter-increment: r3 0;  }
 #l35 {padding-left: 0pt;counter-reset: r3 1; }
 #l35> li>*:first-child:before {counter-increment: r3; content: counter(r3, lower-latin)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l35> li:first-child>*:first-child:before {counter-increment: r3 0;  }
 #l36 {padding-left: 0pt;counter-reset: r2 1; }
 #l36> li>*:first-child:before {counter-increment: r2; content: counter(r2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l36> li:first-child>*:first-child:before {counter-increment: r2 0;  }
 li {display: block; }
 #l37 {padding-left: 0pt;counter-reset: s1 1; }
 #l37> li>*:first-child:before {counter-increment: s1; content: counter(s1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l37> li:first-child>*:first-child:before {counter-increment: s1 0;  }
 li {display: block; }
 #l38 {padding-left: 0pt;counter-reset: t1 1; }
 #l38> li>*:first-child:before {counter-increment: t1; content: counter(t1, decimal)". "; color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l38> li:first-child>*:first-child:before {counter-increment: t1 0;  }
 li {display: block; }
 #l39 {padding-left: 0pt;counter-reset: u1 1; }
 #l39> li>*:first-child:before {counter-increment: u1; content: counter(u1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l39> li:first-child>*:first-child:before {counter-increment: u1 0;  }
 #l40 {padding-left: 0pt;counter-reset: u2 1; }
 #l40> li>*:first-child:before {counter-increment: u2; content: counter(u2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l40> li:first-child>*:first-child:before {counter-increment: u2 0;  }
 #l41 {padding-left: 0pt;counter-reset: v1 5; }
 #l41> li>*:first-child:before {counter-increment: v1; content: counter(v1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l41> li:first-child>*:first-child:before {counter-increment: v1 0;  }
 #l42 {padding-left: 0pt;counter-reset: u2 1; }
 #l42> li>*:first-child:before {counter-increment: u2; content: counter(u2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l42> li:first-child>*:first-child:before {counter-increment: u2 0;  }
 li {display: block; }
 #l43 {padding-left: 0pt;counter-reset: w1 1; }
 #l43> li>*:first-child:before {counter-increment: w1; content: counter(w1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l43> li:first-child>*:first-child:before {counter-increment: w1 0;  }
 li {display: block; }
 #l44 {padding-left: 0pt;counter-reset: x1 1; }
 #l44> li>*:first-child:before {counter-increment: x1; content: counter(x1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l44> li:first-child>*:first-child:before {counter-increment: x1 0;  }
 #l45 {padding-left: 0pt; }
 #l45> li>*:first-child:before {content: " "; color: #333; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l46 {padding-left: 0pt; }
 #l46> li>*:first-child:before {content: " "; color: #333; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l47 {padding-left: 0pt; }
 #l47> li>*:first-child:before {content: " "; color: #333; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l48 {padding-left: 0pt; }
 #l48> li>*:first-child:before {content: " "; color: #333; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 li {display: block; }
 #l49 {padding-left: 0pt;counter-reset: y1 1; }
 #l49> li>*:first-child:before {counter-increment: y1; content: counter(y1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l49> li:first-child>*:first-child:before {counter-increment: y1 0;  }
 #l50 {padding-left: 0pt; }
 #l50> li>*:first-child:before {content: " "; color: #333; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 li {display: block; }
 #l51 {padding-left: 0pt;counter-reset: z1 1; }
 #l51> li>*:first-child:before {counter-increment: z1; content: counter(z1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l51> li:first-child>*:first-child:before {counter-increment: z1 0;  }
 #l52 {padding-left: 0pt;counter-reset: z2 1; }
 #l52> li>*:first-child:before {counter-increment: z2; content: counter(z2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l52> li:first-child>*:first-child:before {counter-increment: z2 0;  }
 li {display: block; }
 #l53 {padding-left: 0pt;counter-reset: c1 1; }
 #l53> li>*:first-child:before {counter-increment: c1; content: counter(c1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l53> li:first-child>*:first-child:before {counter-increment: c1 0;  }
 #l54 {padding-left: 0pt;counter-reset: c2 1; }
 #l54> li>*:first-child:before {counter-increment: c2; content: counter(c2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l54> li:first-child>*:first-child:before {counter-increment: c2 0;  }
 #l55 {padding-left: 0pt;counter-reset: c2 1; }
 #l55> li>*:first-child:before {counter-increment: c2; content: counter(c2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l55> li:first-child>*:first-child:before {counter-increment: c2 0;  }
 li {display: block; }
 #l56 {padding-left: 0pt;counter-reset: d1 1; }
 #l56> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l56> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l57 {padding-left: 0pt;counter-reset: d2 1; }
 #l57> li>*:first-child:before {counter-increment: d2; content: counter(d2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l57> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 li {display: block; }
 #l58 {padding-left: 0pt;counter-reset: e1 1; }
 #l58> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l58> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 li {display: block; }
 #l59 {padding-left: 0pt;counter-reset: f1 1; }
 #l59> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l59> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l60 {padding-left: 0pt; }
 #l60> li>*:first-child:before {content: " "; color: #333; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l61 {padding-left: 0pt;counter-reset: f3 1; }
 #l61> li>*:first-child:before {counter-increment: f3; content: counter(f3, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l61> li:first-child>*:first-child:before {counter-increment: f3 0;  }
 #l62 {padding-left: 0pt; }
 #l62> li>*:first-child:before {content: " "; color: #333; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 li {display: block; }
 #l63 {padding-left: 0pt;counter-reset: g1 1; }
 #l63> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l63> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l64 {padding-left: 0pt;counter-reset: g2 1; }
 #l64> li>*:first-child:before {counter-increment: g2; content: counter(g2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l64> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l65 {padding-left: 0pt;counter-reset: g2 1; }
 #l65> li>*:first-child:before {counter-increment: g2; content: counter(g2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l65> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l66 {padding-left: 0pt;counter-reset: g2 1; }
 #l66> li>*:first-child:before {counter-increment: g2; content: counter(g2, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 #l66> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 li {display: block; }
 #l67 {padding-left: 0pt;counter-reset: h1 1; }
 #l67> li>*:first-child:before {counter-increment: h1; content: counter(h1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l67> li:first-child>*:first-child:before {counter-increment: h1 0;  }
 li {display: block; }
 #l68 {padding-left: 0pt;counter-reset: i1 1; }
 #l68> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)". "; color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l68> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 #l69 {padding-left: 0pt; }
 #l69> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; }
 #l70 {padding-left: 0pt; }
 #l70> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; }
 li {display: block; }
 #l71 {padding-left: 0pt;counter-reset: j1 1; }
 #l71> li>*:first-child:before {counter-increment: j1; content: counter(j1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l71> li:first-child>*:first-child:before {counter-increment: j1 0;  }
 li {display: block; }
 #l72 {padding-left: 0pt;counter-reset: k1 1; }
 #l72> li>*:first-child:before {counter-increment: k1; content: counter(k1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l72> li:first-child>*:first-child:before {counter-increment: k1 0;  }
 li {display: block; }
 #l73 {padding-left: 0pt;counter-reset: l1 1; }
 #l73> li>*:first-child:before {counter-increment: l1; content: counter(l1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l73> li:first-child>*:first-child:before {counter-increment: l1 0;  }
 li {display: block; }
 #l74 {padding-left: 0pt;counter-reset: m1 1; }
 #l74> li>*:first-child:before {counter-increment: m1; content: counter(m1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l74> li:first-child>*:first-child:before {counter-increment: m1 0;  }
 li {display: block; }
 #l75 {padding-left: 0pt;counter-reset: n1 1; }
 #l75> li>*:first-child:before {counter-increment: n1; content: counter(n1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l75> li:first-child>*:first-child:before {counter-increment: n1 0;  }
 li {display: block; }
 #l76 {padding-left: 0pt;counter-reset: o1 1; }
 #l76> li>*:first-child:before {counter-increment: o1; content: counter(o1, decimal)"） "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 #l76> li:first-child>*:first-child:before {counter-increment: o1 0;  }
 li {display: block; }
 #l77 {padding-left: 0pt;counter-reset: p1 1; }
 #l77> li>*:first-child:before {counter-increment: p1; content: counter(p1, decimal)". "; color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l77> li:first-child>*:first-child:before {counter-increment: p1 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span><img width="699" height="1027" alt="image" src="Image_001.jpg"/></span></p><p style="padding-left: 39pt;text-indent: 0pt;line-height: 42pt;text-align: center;"><a name="bookmark0"><span class="s1" style=" background-color: #FBFBFB;">前言</span></a></p><p class="s2" style="padding-top: 5pt;padding-left: 6pt;text-indent: 30pt;line-height: 127%;text-align: left;">《Java 开发手册》是阿里巴巴集团技术团队的集体智慧结晶和经验总结，经历了多次大规模一线实战的检验及不断完善，公开到业界后，众多社区开发者踊跃参与，共同打磨完善，系统化地整理成册，当前的版本是<b>嵩山版</b>。现代软件行业的高速发展对开发者的综合素质要求越来越高，因为不仅是编程知识点，其它维度的知识点也会影响到软件的最终交付质量。比如：五花八门的错误码人为地增加排查问题的难度；数据库的表结构和索引设计缺陷带来的系统架构缺陷或性能风险；工程结构混乱导致后续项目维护艰难；没有鉴权的漏洞代码易被黑客攻击等等。所以本手册以 Java 开发者为中心视角，划分为编程规约、异常日志、单元测试、安全规约、MySQL 数据库、工程结构、设计规约七个维度，再根据内容特征，细分成若干二级子目录。另外，依据约束力强弱及故障敏感性，规约依次分为<span style=" color: #C00000;">【强制】</span>、<span style=" color: #FFC000;">【推荐】</span>、<span style=" color: #76923B;">【参考】</span>三大类。在延伸信息中，“<span style=" color: #FFC000;">说明</span>”对规约做了适当扩展和解释； “<span style=" color: #00AF50;">正例</span>”提倡什么样的编码和实现方式；“<span style=" color: #F00;">反例</span>”说明需要提防的雷区，以及真实的错误案例。</p><p class="s2" style="padding-top: 9pt;padding-left: 6pt;text-indent: 28pt;line-height: 127%;text-align: justify;">手册的愿景是<b>码出高效，码出质量</b>。现代软件架构的复杂性需要协同开发完成，如何高效地协同呢？无规矩不成方圆，无规范难以协同，比如，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全，试想如果没有限速，没有红绿灯，谁还敢上路行驶？对软件来说，适当的规范和标准绝不是消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的统一方式一起做事，提升协作效率，降低沟通成本。代码的字里行间流淌的是软件系统的血液，质量的提升是尽可能少踩坑，杜绝踩重复的坑，切实提升系统稳定性，码出质量。</p><p class="s9" style="padding-top: 10pt;padding-left: 6pt;text-indent: 28pt;line-height: 127%;text-align: justify;"><a href="https://github.com/alibaba/p3c" class="s11" target="_blank">我们已经在 2017 杭州云栖大会上发布了配套的 </a><span style=" color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 12pt;">Java 开发规约 IDE 插件</span>，下载量达到 162 万人次，<span style=" color: #000;">阿里云效也集成了代码规约扫描引擎。次年，发布 36 万字的配套详解图书</span>《码出高效》，本书秉持“图胜于表，表胜于言”的理念，深入浅出地将计算机基础、面向对象思想、JVM 探源、数据结构与集合、并发与多线程、单元测试等知识客观、立体地呈现出来。紧扣学以致用、学以精进的目标，结合阿里巴巴实践经验和故障案例，与底层源码解析融会贯通，娓娓道来。《码出高效》和《Java开发手册》稿费所得收入均捐赠公益事情，希望用技术情怀帮助更多的人。</p><p class="s10" style="padding-left: 41pt;text-indent: 0pt;line-height: 42pt;text-align: center;"><a name="bookmark1">目录</a></p><p style="padding-top: 19pt;padding-left: 6pt;text-indent: 0pt;line-height: 22pt;text-align: left;"><a href="#bookmark14" class="s11">一、编程规约</a><a href="#bookmark14" class="a">                                                    </a><a href="#bookmark14" class="s11">1</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark15" class="s11">(一) 命名风格</a><a href="#bookmark15" class="a">                                                </a><a href="#bookmark15" class="s11">1</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark16" class="s11">(二) 常量定义</a><a href="#bookmark16" class="a">                                                </a><a href="#bookmark16" class="s11">4</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark17" class="s11">(三) 代码格式</a><a href="#bookmark17" class="a">                                                </a><a href="#bookmark17" class="s11">5</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark18" class="s11">(四) OOP 规约</a><a href="#bookmark18" class="a">                                                </a><a href="#bookmark18" class="s11">7</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark19" class="s11">(五) 日期时间</a><a href="#bookmark19" class="a">                                               </a><a href="#bookmark19" class="s11">11</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark20" class="s11">(六) 集合处理</a><a href="#bookmark20" class="a">                                               </a><a href="#bookmark20" class="s11">12</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark21" class="s11">(七) 并发处理</a><a href="#bookmark21" class="a">                                               </a><a href="#bookmark21" class="s11">17</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark22" class="s11">(八) 控制语句</a><a href="#bookmark22" class="a">                                               </a><a href="#bookmark22" class="s11">20</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark23" class="s11">(九) 注释规约</a><a href="#bookmark23" class="a">                                               </a><a href="#bookmark23" class="s11">24</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark24" class="s11">(十) 前后端规约</a><a href="#bookmark24" class="a">                                              </a><a href="#bookmark24" class="s11">25</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark25" class="s11">(十一) 其他</a><a href="#bookmark25" class="a">                                                 </a><a href="#bookmark25" class="s11">27</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark30" class="s11">二、异常日志</a><a href="#bookmark30" class="a">                                                   </a><a href="#bookmark30" class="s11">29</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark31" class="s11">(一) 错误码</a><a href="#bookmark31" class="a">                                                 </a><a href="#bookmark31" class="s11">29</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark32" class="s11">(二) 异常处理</a><a href="#bookmark32" class="a">                                               </a><a href="#bookmark32" class="s11">30</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark33" class="s11">(三) 日志规约</a><a href="#bookmark33" class="a">                                               </a><a href="#bookmark33" class="s11">32</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark35" class="s11">三、单元测试</a><a href="#bookmark35" class="a">                                                   </a><a href="#bookmark35" class="s11">35</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark37" class="s11">四、安全规约</a><a href="#bookmark37" class="a">                                                   </a><a href="#bookmark37" class="s11">37</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark43" class="s11">五、MySQL 数据库</a><a href="#bookmark43" class="a">                                               </a><a href="#bookmark43" class="s11">38</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark44" class="s11">(一) 建表规约</a><a href="#bookmark44" class="a">                                               </a><a href="#bookmark44" class="s11">38</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark45" class="s11">(二) 索引规约</a><a href="#bookmark45" class="a">                                               </a><a href="#bookmark45" class="s11">39</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark46" class="s11">(三) SQL 语句</a><a href="#bookmark46" class="a">                                               </a><a href="#bookmark46" class="s11">41</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark47" class="s11">(四) ORM 映射</a><a href="#bookmark47" class="a">                                              </a><a href="#bookmark47" class="s11">42</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark52" class="s11">六、工程结构</a><a href="#bookmark52" class="a">                                                   </a><a href="#bookmark52" class="s11">44</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark53" class="s11">(一) 应用分层</a><a href="#bookmark53" class="a">                                               </a><a href="#bookmark53" class="s11">44</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark54" class="s11">(二) 二方库依赖</a><a href="#bookmark54" class="a">                                              </a><a href="#bookmark54" class="s11">45</a></p><p style="padding-left: 30pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark55" class="s11">(三) 服务器</a><a href="#bookmark55" class="a">                                                 </a><a href="#bookmark55" class="s11">46</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark57" class="s11">七、设计规约</a><a href="#bookmark57" class="a">                                                   </a><a href="#bookmark57" class="s11">48</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark59" class="s11">附 1：版本历史</a><a href="#bookmark59" class="a">                                                  </a><a href="#bookmark59" class="s11">51</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a href="#bookmark61" class="s11">附 2：专有名词解释</a><a href="#bookmark61" class="a">                                               </a><a href="#bookmark61" class="s11">53</a></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 22pt;text-align: left;"><a href="#bookmark63" class="s11">附 3：错误码列表</a><a href="#bookmark63" class="a">                                                </a><a href="#bookmark63" class="s11">54</a></p><p class="s2" style="padding-top: 20pt;padding-left: 41pt;text-indent: 0pt;text-align: center;">（注：浏览时请使用 <span class="s12">PDF </span>左侧导航栏）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:40.65pt" cellspacing="0"><tr style="height:31pt"><td style="width:60pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 15pt;padding-right: 15pt;text-indent: 0pt;text-align: center;">版本号</p></td><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">制定团队</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 10pt;padding-right: 9pt;text-indent: 0pt;text-align: center;">更新日期</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 80pt;padding-right: 79pt;text-indent: 0pt;text-align: center;">备注</p></td></tr><tr style="height:30pt"><td style="width:60pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 15pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1.7.0</p></td><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;padding-right: 7pt;text-indent: 0pt;text-align: center;">阿里巴巴与全球Java 社区开发者</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 6pt;padding-left: 10pt;padding-right: 9pt;text-indent: 0pt;text-align: center;">2020.08.03</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">嵩山版，首次发布前后端规约</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark2">一、 编程规约</a><a name="bookmark14">&zwnj;</a></p><p class="s16" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark3">(一) 命名风格</a><a name="bookmark15">&zwnj;</a></p><ol id="l1"><li data-list-text="1."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>代码中的命名均不能以<span style=" color: #00F;">下划线或美元符号</span>开始，也不能以<span style=" color: #00F;">下划线或美元符号</span>结束。</p><p class="s19" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #FF4500;">反例：</span>_name / <u>&nbsp;</u>name / $name / name_ / name$ / name<u>  </u></p></li><li data-list-text="2."><p class="s12" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 107%;text-align: left;"><span class="s3">【强制】</span><span class="s9">所有编程相关的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。</span><span style=" color: #967B00;">说明：</span>正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，纯拼音命名方式更要避免采用。 <span style=" color: #009757;">正例：</span>ali / alibaba / taobao / cainiao/ aliyun/ youku / hangzhou 等国际通用的名称，可视同英文。 <span style=" color: #FF4500;">反例：</span>DaZhePromotion [打折] / getPingfenByName() [评分] / String fw[福娃] / int 某变量 = 3</p></li><li data-list-text="3."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">代码和注释中都要避免使用任何语言的种族歧视性词语。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">日本人 / 印度人 / blockList / allowList / secondary</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">RIBENGUIZI / Asan / blackList / whiteList / slave</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">类名使用 UpperCamelCase 风格，但以下情形例外：DO / BO / DTO / VO / AO / PO / UID 等。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">ForceCode  /  UserDO  /  HtmlDTO  /  XmlService  /  TcpUdpDeal  /  TaPromotion</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">forcecode  /  UserDo  /  HTMLDto  /  XMLService  /  TCPUDPDeal  /  TAPromotion</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例： <span style=" color: #333;">localValue / getHttpMessage() / inputUserId</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">MAX_STOCK_COUNT / CACHE_EXPIRED_TIME</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">MAX_COUNT / EXPIRED_TIME</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">抽象类命名使用 Abstract 或 Base 开头；异常类命名使用 Exception 结尾；测试类命名以它要测试的类的名称开始，以 Test 结尾。</span></p></li><li data-list-text="8."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">类型与中括号紧挨相连来表示数组。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">定义整形数组 int[] arrayDemo。</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #23292D;">在 main 参数中，使用 String args[]来定义。</span></p></li><li data-list-text="9."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。</span></p><p class="s27" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">在本文 MySQL 规约中的建表约定第一条，表达是与否的变量采用 is_xxx 的命名方式，所以，需要在&lt;resultMap&gt;设置从 is_xxx 到 xxx 的映射关系。</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #FF4500;">反例：</span>定<span style=" color: #23292D;">义为基本数据类型 Boolean isDeleted 的属性，它的方法也是 isDeleted()，框架在反向解析的时候，“误以为</span>”对应的属性名称是 deleted，导致属性获取不到，进而抛出异常。</p></li><li data-list-text="10."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用<span style=" color: #00F;">单数</span>形式，但是类名如果有复数含义，类名可以使用复数形式。</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #009757;">正例：</span>应<span style=" color: #23292D;">用工具类包名为 </span>com.alibaba.ei.kunlun.aap.util、类名为 MessageUtils（此规则参考 spring 的框架结构）</p></li><li data-list-text="11."><p class="s3" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #23292D;">避免在子父类的成员变量之间、或者不同代码块的局部变量之间采用完全相同的命名，使可理解性降低。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #23292D;">子类、父类成员变量名相同，即使是 public 类型的变量也能够通过编译，另外，局部变量在同一方法内的不同代码块中同名也是合法的，这些情况都要避免。对于非 setter/getter 的参数名称也要避免与成员变量名称相同。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s28" style="padding-top: 1pt;padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;">public class <span style=" color: #000;">ConfusingName </span><span style=" color: #999;">{ </span>public int <span style=" color: #000;">stock</span><span style=" color: #999;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 非 setter/getter 的参数名称，不允许与本类成员变量同名</p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public void </span><span style=" color: #DD4968;">get</span>(<span style=" color: #000;">String alibaba</span>) { <span style=" color: #07A;">if </span>(<span style=" color: #000;">condition</span>) {</p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">final int <span style=" color: #000;">money </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">666</span><span style=" color: #999;">;</span></p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// ...</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">for </span>(<span style=" color: #07A;">int </span><span style=" color: #000;">i </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">0</span>; <span style=" color: #000;">i </span><span style=" color: #A67E58;">&lt; </span><span style=" color: #976800;">10</span>; <span style=" color: #000;">i</span><span style=" color: #A67E58;">++</span>) {</p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 在同一方法体中，不允许与其它代码块中的 money 命名相同</p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">final int <span style=" color: #000;">money </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">15978</span><span style=" color: #999;">;</span></p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// ...</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s28" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">class <span style=" color: #000;">Son </span>extends <span style=" color: #000;">ConfusingName </span><span style=" color: #999;">{</span></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 不允许与父类的成员变量名称相同</p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">public int <span style=" color: #000;">stock</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="12."><p class="s3" style="padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">杜绝完全不规范的缩写，避免望文不知义。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">AbstractClass“缩写”成 AbsClass；condition“缩写”成 condi；Function 缩写”成 Fu，此类随意缩写严重降低了代码的可阅读性。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词组合来表达。</span></p><p class="s26" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #009757;">正例：</span>对某个对象引用的 volatile 字段进行原子更新的类名为 AtomicReferenceFieldUpdater。<span style=" color: #FF4500;">反例：</span>常见的方法内变量为 int a;的定义方式。</p></li><li data-list-text="14."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #23292D;">在常量与变量的命名时，表示类型的名词放在词尾，以提升辨识度。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">startTime / workQueue / nameList / TERMINATED_THREAD_COUNT</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #23292D;">startedAt / QueueOfWork / listName / COUNT_TERMINATED_THREAD</span></p></li><li data-list-text="15."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #23292D;">将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。</span><span style=" color: #009757;">正例： </span><span style=" color: #333;">public class OrderFactory;</span></p><p style="padding-left: 79pt;text-indent: 0pt;text-align: justify;">public class LoginProxy;</p><p style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: justify;">public class ResourceObserver;</p></li><li data-list-text="16."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，确定与接口方法相关，并且是整个应用的基础常量。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">正例：<span style=" color: #333;">接口方法签名 void commit();</span></p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: justify;">接口基础常量 String COMPANY = &quot;alibaba&quot;;</p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: justify;"><span style=" color: #FF4500;">反例：</span>接口方法定义 <span style=" color: #000;">public abstract </span>void f();</p><p class="s27" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">JDK8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默认实现。</span></p></li><li data-list-text="17."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">接口和实现类的命名有两套规则：</p><ol id="l2"><li data-list-text="1）"><p class="s36" style="padding-left: 64pt;text-indent: -16pt;text-align: left;">【强制】<span style=" color: #333;">对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部的实现类用</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">Impl 的后缀与接口区别。</p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">CacheServiceImpl 实现 CacheService 接口。</span></p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 109%;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>如果是形容能力的接口名称，取对应的形容词为接口名（通常是–able 的形容词）。<span style=" color: #009757;">正例：</span>AbstractTranslator 实现 Translatable 接口。</p></li></ol></li><li data-list-text="18."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">枚举类名带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">枚举其实就是特殊的常量类，且构造方法被默认强制是私有。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKNOWN_REASON。</span></p></li><li data-list-text="19."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">各层命名规约：</span></p></li></ol><ol id="l3"><li data-list-text="A)"><p style="padding-left: 56pt;text-indent: -14pt;text-align: left;">Service/DAO 层方法命名规约</p><ol id="l4"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">获取单个对象的方法用 get 做前缀。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">获取多个对象的方法用 list 做前缀，复数结尾，如：listObjects。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;line-height: 109%;text-align: left;">获取统计值的方法用 count 做前缀。 4） 插入的方法用 save/insert 做前缀。 5） 删除的方法用 remove/delete 做前缀。 6） 修改的方法用 update 做前缀。</p></li></ol></li><li data-list-text="B)"><p style="padding-left: 57pt;text-indent: -15pt;text-align: left;">领域模型命名规约</p><ol id="l5"><li data-list-text="1）"><p style="padding-top: 4pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">数据对象：xxxDO，xxx 即为数据表名。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">数据传输对象：xxxDTO，xxx 为业务领域相关的名称。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">展示对象：xxxVO，xxx 一般为网页名称。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。</p></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark4">(二) 常量定义</a><a name="bookmark16">&zwnj;</a></p><ol id="l6"><li data-list-text="1."><p class="s9" style="padding-left: 42pt;text-indent: -18pt;line-height: 19pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>不允许任何魔法值<span class="s12">（</span>即未经预先定义的常量<span class="s12">）</span>直接出现在代码中。</p><p class="s18" style="padding-left: 47pt;text-indent: 0pt;line-height: 15pt;text-align: left;">反例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">// 本例中，开发者 A 定义了缓存的 key，然后开发者 B 使用缓存时少了下划线，即 key 是&quot;Id#taobao&quot;+tradeId，导致出现故障</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">String key <span style=" color: #A67E58;">= </span><span style=" color: #50A04F;">&quot;Id#taobao_&quot; </span><span style=" color: #A67E58;">+ </span>tradeId<span style=" color: #999;">; </span>cache<span style=" color: #999;">.</span><span style=" color: #DD4968;">put</span><span style=" color: #999;">(</span>key<span style=" color: #999;">, </span>value<span style=" color: #999;">);</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在 long 或者Long 赋值时，数值后使用大写字母 L，不能是小写字母 l，小写容易跟数字混淆，造成误解。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">Long a = 2l; 写的是数字的 21，还是Long 型的 2？</span></p></li><li data-list-text="3."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>大而全的常量类，杂乱无章，使用查找功能才能定位到修改的常量，不利于理解，也不利于维护。<span style=" color: #009757;">正例：</span>缓存相关常量放在类 CacheConsts 下；系统配置相关常量放在类 SystemConfigConsts 下。</p></li><li data-list-text="4."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">常量的复用层次有五层：跨应用共享常量、应用内共享常量、子工程内共享常量、包内共享常量、类内共享常量。</span></p><ol id="l7"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">跨应用共享常量：放置在二方库中，通常是 client.jar 中的 constant 目录下。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">应用内共享常量：放置在一方库中，通常是子模块中的 constant 目录下。</p><p class="s18" style="padding-top: 1pt;padding-left: 63pt;text-indent: -15pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">易懂变量也要统一定义成应用内共享常量，两位工程师在两个类中分别定义了“YES”的变量：类 A 中：public static final String YES = &quot;yes&quot;;</span></p><p style="padding-left: 63pt;text-indent: 0pt;line-height: 110%;text-align: left;">类 B 中：public static final String YES = &quot;y&quot;;   A.YES.equals(B.YES)，预期是 true，但实际返回为 false，导致线上问题。</p></li><li data-list-text="3）"><p style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">子工程内部共享常量：即在当前子工程的 constant 目录下。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">包内共享常量：即在当前包下单独的 constant 目录下。</p></li><li data-list-text="5）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">类内共享常量：直接在类内部 private static final 定义。</p></li></ol></li><li data-list-text="5."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">如果变量值仅在一个固定范围内变化用 enum 类型来定义。</span></p></li></ol><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">如果存在名称之外的延伸属性应使用 enum 类型，下面正例中的数字就是延伸信息，表示一年中的第几个季节。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">public enum <span style=" color: #000;">SeasonEnum </span><span style=" color: #999;">{</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #DD4968;">SPRING</span>(<span style=" color: #990054;">1</span>), <span style=" color: #DD4968;">SUMMER</span>(<span style=" color: #990054;">2</span>), <span style=" color: #DD4968;">AUTUMN</span>(<span style=" color: #990054;">3</span>), <span style=" color: #DD4968;">WINTER</span>(<span style=" color: #990054;">4</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #07A;">private int </span><span style=" color: #000;">seq</span>; <span style=" color: #DD4968;">SeasonEnum</span>(<span style=" color: #07A;">int </span><span style=" color: #000;">seq</span>) {</p><p class="s29" style="padding-top: 2pt;padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">this</span><span style=" color: #999;">.</span>seq <span style=" color: #A67E58;">= </span>seq<span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s28" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;">public int <span style=" color: #DD4968;">getSeq</span><span style=" color: #999;">() { </span>return <span style=" color: #000;">seq</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark5">(三) 代码格式</a><a name="bookmark17">&zwnj;</a></p><ol id="l8"><li data-list-text="1."><p class="s3" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">如果是大括号内为空，则简洁地写成{}即可，大括号中间无需换行和空格；如果是非空代码块则：</span></p><ol id="l9"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">左大括号前不换行。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">左大括号后换行。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">右大括号前换行。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。</p></li></ol></li><li data-list-text="2."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>左小括号和右边相邻字符之间不出现空格<span class="s12">；</span>右小括号和左边相邻字符之间也不出现空</p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">格；而左大括号前需要加空格。详见第 5 条下方正例提示。</p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span class="s18">反例：</span><span class="p">if (</span><span class="s40" style=" background-color: #C0C0C0;">空格 </span><span class="p">a == b </span><span class="s40" style=" background-color: #C0C0C0;">空格</span><span class="p">)</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">if/for/while/switch/do 等保留字与括号之间都必须加空格。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">任何二目、三目运算符的左右两边都需要加一个空格。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">包括赋值运算符=、逻辑运算符&amp;&amp;、加减乘除符号等。</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">采用 4 个空格缩进，禁止使用 Tab 字符。</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span class="s27">说明：</span><span class="p">如果使用 Tab 缩进，必须设置 1 个 Tab 为 4 个空格。IDEA 设置 Tab 为 4 个空格时，请勿勾选 </span><span class="s19">Use tab character</span><span class="p">；而在 Eclipse 中，必须勾选 </span><span class="s41" style=" background-color: #F8F1F4;">insert spaces for tabs</span><span class="p">。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例： <span style=" color: #333;">（涉及 1-5 点）</span></p><p class="s30" style="padding-top: 7pt;padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">public static void </span><span style=" color: #DD4968;">main</span>(<span style=" color: #000;">String</span>[] <span style=" color: #000;">args</span>) {</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 缩进 4 个空格</p><p class="s29" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">String say <span style=" color: #A67E58;">= </span><span style=" color: #50A04F;">&quot;hello&quot;</span><span style=" color: #999;">;</span></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 运算符的左右必须有一个空格</p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">int <span style=" color: #000;">flag </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">0</span><span style=" color: #999;">;</span></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 关键词 if 与括号之间必须有一个空格，括号内的 f 与左括号，0 与右括号不需要空格</p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">flag </span><span style=" color: #A67E58;">== </span><span style=" color: #976800;">0</span>) { <span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #000;">say</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 左大括号前加空格且不换行；左大括号后换行</p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 85%;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">flag </span><span style=" color: #A67E58;">== </span><span style=" color: #976800;">1</span>) { <span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;world&quot;</span>);</p><p class="s31" style="padding-left: 90pt;text-indent: 0pt;line-height: 13pt;text-align: left;">// 右大括号前换行，右大括号后有 else，不用换行</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">} <span style=" color: #07A;">else </span>{</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;ok&quot;</span>);</p><p class="s31" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 在右大括号后直接结束，则必须换行</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p></li><li data-list-text="6."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">注释的双斜线与注释内容之间有且仅有一个空格。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 17pt;text-align: left;">// 这是示例注释，请注意在双斜线之后有一个空格</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">String commentString <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>String<span style=" color: #999;">();</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在进行类型强制转换时，右括号与强制转换值之间不需要任何空格隔开。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">double </span>first <span style=" color: #A67E58;">= </span>3.2d<span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">int </span><span style=" color: #000;">second </span><span style=" color: #A67E58;">= </span>(<span style=" color: #07A;">int</span>)<span style=" color: #000;">first </span><span style=" color: #A67E58;">+ </span><span style=" color: #990054;">2</span>;</p></li><li data-list-text="8."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">单行字符数限制不超过 120 个，超出需要换行，换行时遵循如下原则：</span></p><ol id="l10"><li data-list-text="1）"><p style="padding-left: 64pt;text-indent: -16pt;text-align: left;">第二行相对第一行缩进 4 个空格，从第三行开始，不再继续缩进，参考示例。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -16pt;text-align: left;">运算符与下文一起换行。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -16pt;text-align: left;">方法调用的点符号与下文一起换行。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -16pt;text-align: left;">方法调用中的多个参数需要换行时，在逗号后进行。</p></li><li data-list-text="5）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 110%;text-align: left;">在括号前不要换行，见<span style=" color: #FF4500;">反例</span>。<span style=" color: #009757;">正例：</span></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 13pt;text-align: left;">StringBuilder sb <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>StringBuilder<span style=" color: #999;">();</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 超过 120 个字符的情况下，换行缩进 4 个空格，并且方法前的点号一起换行</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">sb</span>.<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;yang&quot;</span>).<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;hao&quot;</span>)...</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;">.<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;chen&quot;</span>)...</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;">.<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;chen&quot;</span>)...</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;">.<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;chen&quot;</span>);</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">StringBuilder sb <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>StringBuilder<span style=" color: #999;">();</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 超过 120 个字符的情况下，不要在括号前换行</p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #000;">sb</span>.<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;you&quot;</span>).<span style=" color: #DD4968;">append</span>(<span style=" color: #50A04F;">&quot;are&quot;</span>)...<span style=" color: #000;">append </span>(<span style=" color: #50A04F;">&quot;lucky&quot;</span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 参数很多的方法调用可能超过 120 个字符，逗号后才是换行处</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #DD4968;">method</span>(<span style=" color: #000;">args1</span>, <span style=" color: #000;">args2</span>, <span style=" color: #000;">args3</span>, ...</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;text-align: left;">, <span style=" color: #000;">argsX</span>);</p></li></ol></li><li data-list-text="9."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">方法参数在定义和传入时，多个参数逗号后面必须加空格。</span></p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #009757;">正例：</span>下例中实参的 <span style=" color: #00F;">args1</span>，后边必须要有一个空格。</p><p class="s43" style="padding-left: 78pt;text-indent: 0pt;text-align: left;">method(args1, args2, args3);</p></li><li data-list-text="10."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">IDE 的 text file encoding 设置为 UTF-8; IDE 中文件的换行符使用 Unix 格式，不要使用 Windows 格式。</span></p></li><li data-list-text="11."><p class="s4" style="padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【推荐】<span style=" color: #23292D;">单个方法的总行数不超过 80 行。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">除注释之外的方法签名、左右大括号、方法内代码、空行、回车及任何不可见字符的总行数不超过</span></p><p class="s26" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">80 行。</p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">正例：<span style=" color: #23292D;">代码逻辑分清红花和绿叶，个性和共性，绿叶逻辑单独出来成为额外方法，使主干代码更加清晰；共性逻辑抽取成为共性方法，便于复用和维护。</span></p></li><li data-list-text="12."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">没有必要增加若干空格来使变量的赋值等号与上一行对应位置的等号对齐。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s28" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">int <span style=" color: #000;">one </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">1</span><span style=" color: #999;">; </span>long <span style=" color: #000;">two </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">2L; </span>float <span style=" color: #000;">three </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">3F</span><span style=" color: #999;">;</span></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">StringBuilder sb <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>StringBuilder<span style=" color: #999;">();</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">增加 sb 这个变量，如果需要对齐，则给one、two、three 都要增加几个空格，在变量比较多的情况下，是非常累赘的事情。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。</span></p></li></ol><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #967B00;">说明：</span>任何情形，没有必要插入<span style=" color: #00F;">多个空行</span>进行隔开。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark6">(四) OOP 规约</a><a name="bookmark18">&zwnj;</a></p><ol id="l11"><li data-list-text="1."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用<span style=" color: #00F;">类名</span>来访问即可。</p></li><li data-list-text="2."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>所有的覆写方法，必须加@<span class="s12">Override </span>注解。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">getObject()与 get0bject()的问题。一个是字母的 O，一个是数字的 0，加@Override 可以准确判断是否覆盖成功。另外，如果在抽象类中对方法签名进行修改，其实现类会马上编译报错。</span></p></li><li data-list-text="3."><p class="s9" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>相同参数类型，相同业务含义，才可以使用 <span class="s12">Java </span>的可变参数，避免使用 <span class="s12">Object</span>。</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #967B00;">说明：</span>可变参数必须放置在参数列表的最后。（建议开发者尽量不用可变参数编程）<span style=" color: #009757;">正例：</span>public List&lt;User&gt; listUsers(String type, Long... ids) {...}</p></li><li data-list-text="4."><p class="s9" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>外部正在调用或者二方库依赖的接口，不允许修改方法签名，避免对接口调用方产生影响。接口过时必须加@<span class="s12">Deprecated </span>注解，并清晰地说明采用的新接口或者新服务是什么。</p></li><li data-list-text="5."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">不能使用过时的类或方法。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">java.net.URLDecoder 中的方法 decode(String encodeStr) 这个方法已经过时，应该使用双参数 decode(String source, String encode)。接口提供方既然明确是过时接口，那么有义务同时提供新的接口；作为调用方来说，有义务去考证过时方法的新实现是什么。</span></p></li><li data-list-text="6."><p class="s12" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span>Object <span class="s9">的 </span>equals <span class="s9">方法容易抛空指针异常，应使用常量或确定有值的对象来调用 </span>equals<span class="s9">。</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #009757;">正例：</span>&quot;test&quot;.equals(object);<span style=" color: #FF4500;">反例：</span>object.equals(&quot;test&quot;);</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">推荐使用 JDK7 引入的工具类 java.util.Objects#equals(Object a, Object b)</span></p></li><li data-list-text="7."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>所有整型包装类对象之间<span style=" color: #00F;">值的比较，</span>全部使用 equals 方法比较。</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span style=" color: #967B00;">说明：</span>对于 Integer var = ? 在<span style=" color: #00F;">-128 至 127 </span>之间的赋值，Integer 对象是在 IntegerCache.cache 产生，会复用已有对象，这个区间内的 Integer 值可以直接使用==进行判断，但是这个区间之外的所有数据，都会在堆上产生，并不会复用已有对象，这是一个大坑，推荐使用 equals 方法进行判断。</p></li><li data-list-text="8."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">任何货币金额，均以最小货币单位且整型类型来进行存储。</span></p></li><li data-list-text="9."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">浮点数之间的等值判断，基本数据类型不能用==来比较，包装数据类型不能用 equals</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">来判断。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<a href="https://detail.tmall.com/item.htm?spm=a1z10.3-b.w4011-16861154605.57.37a81b8bGVGoJD&amp;id=575107529181&amp;rn=f1294dc1e36859a5098c36756bafb4a0&amp;abbucket=18" style=" color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt;" target="_blank">浮点数采用“尾数+阶码”的编码方式，类似于科学计数法的“有效数字+指数”的表示方式。二进制无法精确表示大部分的十进制小数，具体原理参考</a><span style=" color: #0366D5; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 10.5pt;">《码出高效》</span><span style=" color: #23292D;">。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s33" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">float </span><span style=" color: #000;">a </span>= <span style=" color: #976800;">1.0F </span>- <span style=" color: #976800;">0.9F</span><span style=" color: #999;">; </span><span style=" color: #07A;">float </span><span style=" color: #000;">b </span>= <span style=" color: #976800;">0.9F </span>- <span style=" color: #976800;">0.8F</span><span style=" color: #999;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">if </span><span style=" color: #999;">(</span>a <span style=" color: #A67E58;">== </span>b<span style=" color: #999;">) {</span></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 预期进入此代码块，执行其它业务逻辑</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 但事实上 a==b 的结果为 false</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: justify;"><span style=" color: #000;">Float x </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">Float</span>.<span style=" color: #DD4968;">valueOf</span>(<span style=" color: #000;">a</span>); <span style=" color: #000;">Float y </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">Float</span>.<span style=" color: #DD4968;">valueOf</span>(<span style=" color: #000;">b</span>); <span style=" color: #07A;">if </span>(<span style=" color: #000;">x</span>.<span style=" color: #DD4968;">equals</span>(<span style=" color: #000;">y</span>)) {</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: justify;">// 预期进入此代码块，执行其它业务逻辑</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: justify;">// 但事实上 equals 的结果为 false</p><p class="s30" style="text-indent: 0pt;line-height: 14pt;text-align: center;">}</p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;line-height: 19pt;text-align: center;">正例：</p><ol id="l12"><li data-list-text="(1)"><p class="s45" style="padding-top: 2pt;padding-left: 15pt;text-indent: -15pt;text-align: center;">指定一个误差范围，两个浮点数的差值在此范围之内，则认为是相等的。</p><p class="s33" style="padding-top: 3pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: justify;"><span style=" color: #07A;">float </span><span style=" color: #000;">a </span>= <span style=" color: #976800;">1.0F </span>- <span style=" color: #976800;">0.9F</span><span style=" color: #999;">; </span><span style=" color: #07A;">float </span><span style=" color: #000;">b </span>= <span style=" color: #976800;">0.9F </span>- <span style=" color: #976800;">0.8F</span><span style=" color: #999;">; </span><span style=" color: #07A;">float </span><span style=" color: #000;">diff </span>= <span style=" color: #976800;">1e-6F</span><span style=" color: #999;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">Math</span>.<span style=" color: #DD4968;">abs</span>(<span style=" color: #000;">a </span><span style=" color: #A67E58;">- </span><span style=" color: #000;">b</span>) <span style=" color: #A67E58;">&lt; </span><span style=" color: #000;">diff</span>) { <span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;true&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p></li><li data-list-text="(2)"><p class="s45" style="padding-left: 62pt;text-indent: -15pt;text-align: left;">使用 BigDecimal 来定义值，再进行浮点数的运算操作。</p><p class="s29" style="padding-top: 3pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: justify;">BigDecimal a <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>BigDecimal<span style=" color: #999;">(</span><span style=" color: #50A04F;">&quot;1.0&quot;</span><span style=" color: #999;">); </span>BigDecimal b <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>BigDecimal<span style=" color: #999;">(</span><span style=" color: #50A04F;">&quot;0.9&quot;</span><span style=" color: #999;">); </span>BigDecimal c <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>BigDecimal<span style=" color: #999;">(</span><span style=" color: #50A04F;">&quot;0.8&quot;</span><span style=" color: #999;">);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">BigDecimal x <span style=" color: #A67E58;">= </span>a<span style=" color: #999;">.</span><span style=" color: #DD4968;">subtract</span><span style=" color: #999;">(</span>b<span style=" color: #999;">); </span>BigDecimal y <span style=" color: #A67E58;">= </span>b<span style=" color: #999;">.</span><span style=" color: #DD4968;">subtract</span><span style=" color: #999;">(</span>c<span style=" color: #999;">);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">x</span>.<span style=" color: #DD4968;">compareTo</span>(<span style=" color: #000;">y</span>) == 0) { <span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;true&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li data-list-text="10."><p class="s3" style="padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">如上所示 BigDecimal 的等值比较应使用 compareTo()方法，而不是 equals()方法。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #967B00;">说明：</span>equals()方法会比较值和精度<span class="s46">（1.0 与 1.00 返回结果为 false）</span>，而 compareTo()则会忽略精度。</p></li><li data-list-text="11."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">定义数据对象 DO 类时，属性类型要与数据库字段类型相匹配。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">数据库字段的 bigint 必须与类属性的 Long 类型相对应。</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">反例：<span style=" color: #23292D;">某个案例的数据库表 id 字段定义类型bigint unsigned，实际类对象属性为 Integer，随着 id 越来越大，超过 Integer 的表示范围而溢出成为负数。</span></p></li><li data-list-text="12."><p class="s25" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: left;"><span style=" color: #C00000;">【强制】</span>禁止使用构造方法 <span class="s47">BigDecimal(double)</span>的方式把 <span style=" color: #000;">double 值</span>转化为 <span class="s47">BigDecimal </span><span style=" color: #000;">对象</span>。<span class="s21">说明：</span><span class="s48">BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">优先推荐入参为 String 的构造方法，或使用 BigDecimal 的 valueOf 方法，此方法内部其实执行了</span></p><p class="s26" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">Double 的 toString，而 Double 的toString 按 double 的实际能表达的精度对尾数进行了截断。</p><p class="s30" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">BigDecimal recommend1 </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">BigDecimal</span>(<span style=" color: #690;">&quot;0.1&quot;</span>); <span style=" color: #000;">BigDecimal recommend2 </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">BigDecimal</span>.<span style=" color: #DD4968;">valueOf</span>(<span style=" color: #990054;">0.1</span>);</p></li><li data-list-text="13."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">关于基本数据类型与包装数据类型的使用标准如下：</p><ol id="l13"><li data-list-text="1）"><p class="s36" style="padding-left: 69pt;text-indent: -22pt;text-align: left;">【强制】<span style=" color: #333;">所有的 POJO 类属性必须使用包装数据类型。</span></p></li><li data-list-text="2）"><p class="s36" style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">【强制】<span style=" color: #333;">RPC 方法的返回值和参数必须使用包装数据类型。</span></p></li><li data-list-text="3）"><p class="s37" style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">【推荐】<span style=" color: #333;">所有的局部变量使用基本数据类型。</span></p></li></ol><p class="s27" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">POJO 类属性没有初值是提醒使用者在需要使用时，必须自己显式地进行赋值，任何 NPE 问题，或者入库检查，都由使用者来保证。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：<span style=" color: #333;">数据库的查询结果可能是 null，因为自动拆箱，用基本数据类型接收有 NPE 风险。</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">反例：<span style=" color: #333;">某业务的交易报表上显示成交总额涨跌情况，即正负 x%，x 为基本数据类型，调用的 RPC 服务，调用不成功时，返回的是默认值，页面显示为 0%，这是不合理的，应该显示成中划线-。所以包装数据类型的 null 值，能够表示额外的信息，如：远程调用失败，异常退出。</span></p></li><li data-list-text="14."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>定义 DO/DTO/VO 等 POJO 类时，不要设定任何属性<span style=" color: #00F;">默认值</span>。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">反例：<span style=" color: #333;">POJO 类的 createTime 默认值为 new Date()，但是这个属性在数据提取时并没有置入具体值，在更新其它字段时又附带更新了此字段，导致创建时间被修改成当前时间。</span></p></li><li data-list-text="15."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">序列化类新增属性时，请不要修改 serialVersionUID 字段，避免反序列失败；如果完全不兼容升级，避免反序列化混乱，那么请修改 serialVersionUID 值。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">注意 serialVersionUID 不一致会抛出序列化运行时异常。</span></p></li><li data-list-text="16."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">构造方法里面禁止加入任何业务逻辑，如果有初始化逻辑，请放在 init 方法中。</span></p></li><li data-list-text="17."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: justify;">【强制】<span style=" color: #333;">POJO 类必须写 toString 方法。使用 IDE 中的工具：source&gt; generate toString</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">时，如果继承了另一个 POJO 类，注意在前面加一下 super.toString。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">在方法执行抛出异常时，可以直接调用 POJO 的 toString()方法打印其属性值，便于排查问题。</span></p></li><li data-list-text="18."><p class="s25" style="padding-top: 7pt;padding-left: 18pt;text-indent: -18pt;text-align: center;"><span style=" color: #C00000;">【强制】</span>禁止在 <span style=" color: #333;">POJO </span>类中，同时存在对应属性 <span style=" color: #333;">xxx </span>的 <span style=" color: #333;">isXxx()</span>和 <span style=" color: #333;">getXxx()</span>方法。</p><p class="s27" style="padding-left: 41pt;text-indent: 0pt;text-align: center;">说明：<span style=" color: #23292D;">框架在调用属性 xxx 的提取方法时，并不能确定哪个方法一定是被优先调用到的。</span></p></li><li data-list-text="19."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">使用索引访问用 String 的 split 方法得到的数组时，需做最后一个分隔符后有无内容的检查，否则会有抛 IndexOutOfBoundsException 的风险。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">String str <span style=" color: #A67E58;">= </span><span style=" color: #50A04F;">&quot;a,b,c,,&quot;</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">String</span>[] <span style=" color: #000;">ary </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">str</span>.<span style=" color: #DD4968;">split</span>(<span style=" color: #50A04F;">&quot;,&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #6F8090;">// 预期大于 3，结果是 3 </span><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #000;">ary</span>.<span style=" color: #000;">length</span>);</p></li><li data-list-text="20."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">当一个类有多个构造方法，或者多个同名方法，这些方法应该按顺序放置在一起，便于阅读，此条规则优先于下一条。</span></p></li><li data-list-text="21."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【推荐】 <span style=" color: #333;">类内方法定义的顺序依次是：公有方法或保护方法 &gt; 私有方法 &gt; getter / setter</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">方法。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明：<span style=" color: #333;">公有方法是类的调用者和维护者最关心的方法，首屏展示最好；保护方法虽然只是子类关心，也可能是“模板设计模式”下的核心方法；而私有方法外部一般不需要特别关心，是一个黑盒实现；因为承载的信息价值较低，所有 Service 和 DAO 的 getter/setter 方法放在类体最后。</span></p></li><li data-list-text="22."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: justify;">【推荐】<span style=" color: #333;">setter 方法中，参数名称与类成员变量名称一致，this.成员名 = 参数名。在</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">getter/setter 方法中，不要增加业务逻辑，增加排查问题的难度。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s30" style="padding-top: 2pt;padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public </span><span style=" color: #000;">Integer getData </span>() { <span style=" color: #07A;">if </span>(<span style=" color: #000;">condition</span>) {</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #07A;">return this</span>.<span style=" color: #000;">data </span><span style=" color: #A67E58;">+ </span><span style=" color: #976800;">100</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">} <span style=" color: #07A;">else </span>{</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">return this</span>.<span style=" color: #000;">data </span><span style=" color: #A67E58;">- </span><span style=" color: #976800;">100</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="23."><p class="s4" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">循环体内，字符串的连接方式，使用 StringBuilder 的 append 方法进行扩展。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">下例中，反编译出的字节码文件显示每次循环都会 new 出一个StringBuilder 对象，然后进行 append</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">操作，最后通过 toString 方法返回 String 对象，造成内存资源浪费。<span style=" color: #FF4500;">反例：</span></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">String str <span style=" color: #A67E58;">= </span><span style=" color: #50A04F;">&quot;start&quot;</span><span style=" color: #999;">;</span></p><p class="s29" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">for </span><span style=" color: #999;">(</span><span style=" color: #07A;">int </span>i <span style=" color: #A67E58;">= </span><span style=" color: #976800;">0</span><span style=" color: #999;">; </span>i <span style=" color: #A67E58;">&lt; </span><span style=" color: #976800;">100</span><span style=" color: #999;">; </span>i<span style=" color: #A67E58;">++</span><span style=" color: #999;">) { </span>str <span style=" color: #A67E58;">= </span>str <span style=" color: #A67E58;">+ </span><span style=" color: #50A04F;">&quot;hello&quot;</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p></li><li data-list-text="24."><p class="s12" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s4">【推荐】</span>final <span class="s9">可以声明类、成员变量、方法、以及本地变量，下列情况使用 </span>final <span class="s9">关键字：</span></p><ol id="l14"><li data-list-text="1）"><p style="padding-left: 70pt;text-indent: -22pt;text-align: left;">不允许被继承的类，如：String 类。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">不允许修改引用的域对象，如：POJO 类的域变量。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">不允许被覆写的方法，如：POJO 类的 setter 方法。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">不允许运行过程中重新赋值的局部变量。</p></li><li data-list-text="5）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -21pt;text-align: left;">避免上下文重复使用一个变量，使用 final 关键字可以强制重新定义一个变量，方便更好地进行重构。</p></li></ol></li><li data-list-text="25."><p class="s9" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>慎用 <span class="s12">Object </span>的 <span class="s12">clone </span>方法来拷贝对象。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">对象 clone 方法默认是浅拷贝，若想实现深拷贝，需覆写 clone 方法实现域对象的深度遍历式拷贝。</span></p></li><li data-list-text="26."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">类成员与方法访问控制从严：</span></p></li></ol><ol id="l15"><li data-list-text="1）"><p style="padding-left: 47pt;text-indent: 0pt;line-height: 110%;text-align: left;">如果不允许外部直接通过 new 来创建对象，那么构造方法必须是 private。 2） 工具类不允许有 public 或 default 构造方法。</p><p style="padding-left: 47pt;text-indent: 0pt;line-height: 110%;text-align: left;">3） 类非 static 成员变量并且与子类共享，必须是 protected。 4） 类非 static 成员变量并且仅在本类使用，必须是private。</p><p style="padding-top: 4pt;padding-left: 47pt;text-indent: 0pt;line-height: 110%;text-align: left;">5） 类 static 成员变量如果仅在本类使用，必须是 private。 6） 若是 static 成员变量，考虑是否为 final。</p><ol id="l16"><li data-list-text="7）"><p style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">类成员方法只供类内部调用，必须是 private。</p></li><li data-list-text="8）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">类成员方法只对继承类公开，那么限制为 protected。</p></li></ol><p class="s27" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">任何类、方法、参数、变量，严控访问范围。过于宽泛的访问范围，不利于模块解耦。思考：如果是一个 private 的方法，想删除就删除，可是一个 public 的 service 成员方法或成员变量，删除一下，不得手心冒点汗吗？变量像自己的小孩，尽量在自己的视线内，变量作用域太大，无限制的到处跑，那么你会担心的。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark7">(五) 日期时间</a><a name="bookmark19">&zwnj;</a></p><ol id="l17"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">日期格式化时，传入 pattern 中表示年份统一使用小写的 y。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">日期格式化时，yyyy 表示当天所在的年，而大写的 YYYY 代表是 week in which year（JDK7 之后引入的概念），意思是当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，返回的 YYYY就是下一年。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">表示日期和时间的格式如下所示：</span></p><p class="s29" style="padding-top: 3pt;padding-left: 78pt;text-indent: 0pt;text-align: left;">new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="2."><p class="s3" style="padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在日期格式中分清楚大写的 M 和小写的 m，大写的 H 和小写的 h 分别指代的意义。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">日期格式中的这两对字母表意如下：</span></p><ol id="l18"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">表示月份是大写的 M；</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">表示分钟则是小写的 m；</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">24 小时制的是大写的H；</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">12 小时制的则是小写的 h。</p></li></ol></li><li data-list-text="3."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: left;">【强制】<span style=" color: #333;">获取当前毫秒数：System.currentTimeMillis(); 而不是 new Date().getTime()。 </span><span class="s21">说明：</span><span class="s12">如果想获取更加精确的纳秒级时间值，使用 System.nanoTime 的方式。在 JDK8 中，针对统计时间等场景，推荐使用 Instant 类。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">不允许在程序任何地方中使用：1）java.sql.Date。 2）java.sql.Time。 3）java.sql.Timestamp。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">第 1 个不记录时间，getHours()抛出异常；第 2 个不记录日期，getYear()抛出异常；第 3 个在构造方法 super((time/1000)*1000)，在 Timestamp 属性 fastTime 和 nanos 分别存储秒和纳秒信息。</span></p><p class="s18" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例： <span style=" color: #333;">java.util.Date.after(Date)进行时间比较时，当入参是 java.sql.Timestamp 时，会触发 JDK BUG(JDK9 已修复)，可能导致比较时的意外结果。</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">不要在程序中写死一年为 365 天，避免在公历闰年时出现日期转换错误或程序逻辑错误。</span></p><p class="s24" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 获取今年的天数</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">int </span><span style=" color: #000;">daysOfThisYear </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">LocalDate</span>.<span style=" color: #DD4968;">now</span>().<span style=" color: #DD4968;">lengthOfYear</span>();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 获取指定某年的天数</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">LocalDate</span>.<span style=" color: #DD4968;">of</span>(<span style=" color: #990054;">2011</span>, <span style=" color: #990054;">1</span>, <span style=" color: #990054;">1</span>).<span style=" color: #DD4968;">lengthOfYear</span>();</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 第一种情况：在闰年 366 天时，出现数组越界异常</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">int</span>[] <span style=" color: #000;">dayArray </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">int</span>[<span style=" color: #990054;">365</span>];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 第二种情况：一年有效期的会员制，今年 1 月 26 日注册，硬编码 365 返回的却是 1 月 25 日</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">Calendar calendar </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">Calendar</span>.<span style=" color: #DD4968;">getInstance</span>(); <span style=" color: #000;">calendar</span>.<span style=" color: #DD4968;">set</span>(<span style=" color: #990054;">2020</span>, <span style=" color: #990054;">1</span>, <span style=" color: #990054;">26</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">calendar</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #000;">Calendar</span>.<span style=" color: #000;">DATE</span>, <span style=" color: #990054;">365</span>);</p></li><li data-list-text="6."><p class="s4" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【推荐】<span style=" color: #333;">避免公历闰年 2 月问题。闰年的 2 月份有 29 天，一年后的那一天不可能是 2 月 29</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">日。</p></li><li data-list-text="7."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【推荐】<span style=" color: #333;">使用枚举值来指代月份。如果使用数字，注意 Date，Calendar 等日期相关类的月份</span></p></li></ol><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">month 取值在 0-11 之间。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">参考 JDK 原生注释，Month value is 0-based. e.g., 0 for January.</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例： <span style=" color: #333;">Calendar.JANUARY，Calendar.FEBRUARY，Calendar.MARCH 等来指代相应月份来进行传参或比较。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark8">(六) 集合处理</a><a name="bookmark20">&zwnj;</a></p><ol id="l19"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">关于 hashCode 和 equals 的处理，遵循如下规则：</span></p><ol id="l20"><li data-list-text="1）"><p style="padding-left: 62pt;text-indent: -19pt;text-align: left;">只要覆写 equals，就必须覆写 hashCode。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">因为 Set 存储的是不重复的对象，依据 hashCode 和 equals 进行判断，所以 Set 存储的对象必须覆写这两种方法。</p></li><li data-list-text="3）"><p style="padding-left: 62pt;text-indent: -19pt;line-height: 19pt;text-align: left;">如果自定义对象作为 Map 的键，那么必须覆写hashCode 和 equals。</p><p class="s27" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">String 因为覆写了 hashCode 和 equals 方法，所以可以愉快地将 String 对象作为 key 来使用。</span></p></li></ol></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">判断所有集合内部的元素是否为空，使用 isEmpty()方法，而不是 size()==0 的方式。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">在某些集合中，前者的时间复杂度为 O(1)，而且可读性更好。</span><span style=" color: #009757;">正例：</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">Map</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Object</span>&gt; <span style=" color: #000;">map </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">HashMap</span><span style=" color: #A67E58;">&lt;&gt;</span>(16);</p><p class="s30" style="padding-top: 4pt;padding-left: 54pt;text-indent: 0pt;text-align: left;"><span style=" color: #07A;">if</span>(<span style=" color: #000;">map</span>.<span style=" color: #DD4968;">isEmpty</span>()) {</p><p class="s30" style="padding-top: 4pt;padding-left: 90pt;text-indent: 0pt;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;no element in this map.&quot;</span>);</p><p class="s30" style="padding-top: 4pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p></li><li data-list-text="3."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">在使用 java.util.stream.Collectors 类的 toMap()方法转为 Map 集合时，一定要使用含有参数类型为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key值时会抛出 IllegalStateException 异常。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">参数 mergeFunction 的作用是当出现 key 重复时，自定义对 value 的处理策略。</span><span style=" color: #009757;">正例：</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">List</span><span style=" color: #A67E58;">&lt;</span><span style=" color: #000;">Pair</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Double</span>&gt;<span style=" color: #A67E58;">&gt; </span><span style=" color: #000;">pairArrayList </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #976800;">3</span>); <span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Pair</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #50A04F;">&quot;version&quot;</span>, <span style=" color: #976800;">12.10</span>));</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Pair</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #50A04F;">&quot;version&quot;</span>, <span style=" color: #976800;">12.19</span>));</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Pair</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #50A04F;">&quot;version&quot;</span>, <span style=" color: #976800;">6.28</span>)); <span style=" color: #000;">Map</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Double</span>&gt; <span style=" color: #000;">map </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">stream</span>().<span style=" color: #DD4968;">collect</span>(</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #6F8090;">// 生成的 map 集合中只有一个键值对：{version=6.28} </span>Collectors<span style=" color: #999;">.</span><span style=" color: #DD4968;">toMap</span><span style=" color: #999;">(</span>Pair<span style=" color: #A67E58;">::</span>getKey<span style=" color: #999;">, </span>Pair<span style=" color: #A67E58;">::</span>getValue<span style=" color: #999;">, (</span>v1<span style=" color: #999;">, </span>v2<span style=" color: #999;">) </span><span style=" color: #A67E58;">-&gt; </span>v2<span style=" color: #999;">));</span></p><p class="s18" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">String</span>[] <span style=" color: #000;">departments </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">String</span>[] {<span style=" color: #50A04F;">&quot;iERP&quot;</span>, <span style=" color: #50A04F;">&quot;iERP&quot;</span>, <span style=" color: #50A04F;">&quot;EIBU&quot;</span>};</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 抛出 IllegalStateException 异常</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">Map</span>&lt;<span style=" color: #DD4968;">Integer</span>, <span style=" color: #DD4968;">String</span>&gt; <span style=" color: #000;">map </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">Arrays</span>.<span style=" color: #DD4968;">stream</span>(<span style=" color: #000;">departments</span>)</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">.<span style=" color: #DD4968;">collect</span>(<span style=" color: #000;">Collectors</span>.<span style=" color: #DD4968;">toMap</span>(<span style=" color: #000;">String</span><span style=" color: #A67E58;">::</span><span style=" color: #000;">hashCode</span>, <span style=" color: #000;">str </span><span style=" color: #A67E58;">-&gt; </span><span style=" color: #000;">str</span>));</p></li><li data-list-text="4."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在使用 java.util.stream.Collectors 类的 toMap()方法转为 Map 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">说明：<span style=" color: #333;">在 java.util.HashMap 的 merge 方法里会进行如下的判断：</span></p><p class="s29" style="padding-left: 72pt;text-indent: -18pt;text-align: left;"><span style=" color: #07A;">if </span><span style=" color: #999;">(</span>value <span style=" color: #A67E58;">== </span>null <span style=" color: #A67E58;">|| </span>remappingFunction <span style=" color: #A67E58;">== </span>null<span style=" color: #999;">) </span><span style=" color: #07A;">throw new </span>NullPointerException<span style=" color: #999;">();</span></p><p class="s18" style="padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s30" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">List</span><span style=" color: #A67E58;">&lt;</span><span style=" color: #000;">Pair</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Double</span>&gt;<span style=" color: #A67E58;">&gt; </span><span style=" color: #000;">pairArrayList </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #976800;">2</span>); <span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Pair</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #50A04F;">&quot;version1&quot;</span>, <span style=" color: #976800;">8.3</span>)); <span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Pair</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #50A04F;">&quot;version2&quot;</span>, <span style=" color: #000;">null</span>));</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">Map</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Double</span>&gt; <span style=" color: #000;">map </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">pairArrayList</span>.<span style=" color: #DD4968;">stream</span>().<span style=" color: #DD4968;">collect</span>(</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 抛出 NullPointerException 异常</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">Collectors<span style=" color: #999;">.</span><span style=" color: #DD4968;">toMap</span><span style=" color: #999;">(</span>Pair<span style=" color: #A67E58;">::</span>getKey<span style=" color: #999;">, </span>Pair<span style=" color: #A67E58;">::</span>getValue<span style=" color: #999;">, (</span>v1<span style=" color: #999;">, </span>v2<span style=" color: #999;">) </span><span style=" color: #A67E58;">-&gt; </span>v2<span style=" color: #999;">));</span></p></li><li data-list-text="5."><p class="s9" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>ArrayList 的 subList 结果不可强转成 ArrayList，否则会抛出 <span class="s12">ClassCastException </span>异常：<span class="s12">java.util.RandomAccessSubList cannot be cast to java.util.ArrayList</span>。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">subList()返回的是 ArrayList 的内部类 SubList，并不是 ArrayList 本身，而是ArrayList 的一个视图，对于 SubList 的所有操作最终会反映到原列表上。</span></p></li><li data-list-text="6."><p class="s50" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span><span class="s25">使用 </span>Map <span class="s25">的方法 </span><span class="s51">keySet()</span>/<span class="s51">values()</span>/<span class="s51">entrySet()</span><span class="s25">返回集合对象时，不可以对其进行添加元素操作，否则会抛出 </span>UnsupportedOperationException <span class="s25">异常。</span></p></li><li data-list-text="7."><p class="s50" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span>Collections <span class="s25">类返回的对象，如：</span><span class="s51">emptyList()</span>/<span class="s51">singletonList()</span><span class="s25">等都是 </span>immutable list<span class="s25">，不可对其进行添加或者删除元素的操作。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #FF4500;">反例：</span>如果查询无结果，返回 <span class="s52">Collections.emptyList()</span>空集合对象，调用方一旦进行了添加元素的操作，就会触发 <span class="s52">UnsupportedOperationException </span>异常。</p></li><li data-list-text="8."><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在 subList 场景中，<span style=" color: #00F;">高度注意</span>对父集合元素的增加或删除，均会导致子列表的遍历、增加、删除产生 <span class="s50">ConcurrentModificationException </span>异常。</p></li><li data-list-text="9."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">使用集合转数组的方法，必须使用集合的 toArray(T[] array)，传入的是类型完全一致、长度为 0 的空数组。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #FF4500;">反例：</span>直接使用 <span class="s52">toArray </span>无参方法存在问题，此方法返回值只能是 <span class="s52">Object[]</span>类，若强转其它类型数组将出现 <span class="s52">ClassCastException </span>错误。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #000;">List</span>&lt;<span style=" color: #DD4968;">String</span>&gt; <span style=" color: #000;">list </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #976800;">2</span>); <span style=" color: #000;">list</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #50A04F;">&quot;guan&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">list</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #50A04F;">&quot;bao&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;"><span style=" color: #000;">String</span>[] <span style=" color: #000;">array </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">list</span>.<span style=" color: #DD4968;">toArray</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">String</span>[<span style=" color: #976800;">0</span>]);</p><p class="s26" style="padding-top: 3pt;padding-left: 69pt;text-indent: -26pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>使用 <span class="s52">toArray </span>带参方法，数组空间大小的 <span class="s52">length</span>： <span class="s52">1</span>） <span style=" color: #00F;">等于 </span><span class="s53">0</span>，动态创建与 <span class="s52">size </span>相同的数组，性能最好。</p><ol id="l21"><li data-list-text="2）"><p class="s26" style="padding-left: 91pt;text-indent: -21pt;text-align: left;"><span style=" color: #00F;">大于 </span><span class="s53">0 </span><span style=" color: #00F;">但小于</span><span class="s53">size</span>，重新创建大小等于 <span class="s52">size </span>的数组，增加 <span class="s52">GC </span>负担。</p></li><li data-list-text="3）"><p class="s26" style="padding-top: 1pt;padding-left: 91pt;text-indent: -21pt;text-align: left;"><span style=" color: #00F;">等于 </span><span class="s53">size</span>，在高并发情况下，数组创建完成之后，<span class="s52">size </span>正在变大的情况下，负面影响与 2 相同。</p></li><li data-list-text="4）"><p class="s26" style="padding-top: 1pt;padding-left: 91pt;text-indent: -21pt;text-align: left;"><span style=" color: #00F;">大于 </span><span class="s53">size</span>，空间浪费，且在 <span class="s52">size </span>处插入 <span class="s52">null </span>值，存在 <span class="s52">NPE </span>隐患。</p></li></ol></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l22"><li data-list-text="10."><p class="s3" style="padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">在使用 Collection 接口任何实现类的 addAll()方法时，都要对输入的集合参数进行 NPE 判断。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">在 ArrayList#addAll 方法的第一行代码即 Object[] a = c.toArray(); 其中 c 为输入集合参数，如果为 null，则直接抛出异常。</span></p></li><li data-list-text="11."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">使用工具类 Arrays.asList()把数组转换成集合时，不能使用其修改集合相关的方法，它的 add/remove/clear 方法会抛出 UnsupportedOperationException 异常。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">asList 的返回对象是一个 Arrays 内部类，并没有实现集合的修改方法。Arrays.asList 体现的是适配器模式，只是转换接口，后台的数据仍是数组。</span></p><p class="s43" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 127%;text-align: left;">String[] str = new String[] { &quot;chen&quot;, &quot;yang&quot;, &quot;hao&quot; }; List list = Arrays.asList(str);</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 18pt;text-align: left;">第一种情况：list.add(&quot;yangguanbao&quot;); 运行时异常。</p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">第二种情况：str[0] = &quot;change&quot;; <span style=" color: #23292D;">也会随之修改，反之亦然。</span></p></li><li data-list-text="12."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>泛型通配符<span class="s54">&lt;? extends T&gt;</span>来接收返回的数据，此写法的泛型集合不能使用 <span class="s54">add </span>方法，而<span class="s54">&lt;? super T&gt;</span>不能使用 <span class="s54">get </span>方法，两者在接口调用赋值的场景中容易出错。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">扩展说一下 PECS(Producer Extends Consumer Super)原则：第一、频繁往外读取内容的，适合用</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">&lt;? extends T&gt;。第二、经常往里插入的，适合用&lt;? super T&gt;</p></li><li data-list-text="13."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #23292D;">在无泛型限制定义的集合赋值给泛型限制的集合时，在使用集合元素时，需要进行</span></p><p class="s25" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">instanceof 判断，避免抛出 ClassCastException 异常。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">毕竟泛型是在 JDK5 后才出现，考虑到向前兼容，编译器是允许非泛型集合与泛型集合互相赋值。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s18" style="padding-top: 2pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s29" style="padding-top: 7pt;padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">List<span style=" color: #A67E58;">&lt;</span>String<span style=" color: #A67E58;">&gt; </span>generics <span style=" color: #A67E58;">= </span>null<span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">List notGenerics </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span>(<span style=" color: #990054;">10</span>); <span style=" color: #000;">notGenerics</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Object</span>()); <span style=" color: #000;">notGenerics</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #07A;">new </span><span style=" color: #000;">Integer</span>(<span style=" color: #990054;">1</span>)); <span style=" color: #000;">generics </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">notGenerics</span>;</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 此处抛出 ClassCastException 异常</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">String string </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">generics</span>.<span style=" color: #DD4968;">get</span>(<span style=" color: #990054;">0</span>);</p></li><li data-list-text="14."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">不要在 foreach 循环里进行元素的 remove/add 操作。remove 元素请使用 Iterator</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">方式，如果并发操作，需要对 Iterator 对象加锁。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s30" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">List</span>&lt;<span style=" color: #DD4968;">String</span>&gt; <span style=" color: #000;">list </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span><span style=" color: #A67E58;">&lt;&gt;</span>(); <span style=" color: #000;">list</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #50A04F;">&quot;1&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">list</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #50A04F;">&quot;2&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">Iterator</span>&lt;<span style=" color: #DD4968;">String</span>&gt; <span style=" color: #000;">iterator </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">list</span>.<span style=" color: #DD4968;">iterator</span>(); <span style=" color: #07A;">while </span>(<span style=" color: #000;">iterator</span>.<span style=" color: #DD4968;">hasNext</span>()) {</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">String item </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">iterator</span>.<span style=" color: #DD4968;">next</span>(); <span style=" color: #07A;">if </span>(<span style=" color: #000;">删除元素的条件</span>) {</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">iterator</span>.<span style=" color: #DD4968;">remove</span>();</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s18" style="padding-left: 43pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">for </span><span style=" color: #999;">(</span>String item <span style=" color: #A67E58;">: </span>list<span style=" color: #999;">) {</span></p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #50A04F;">&quot;1&quot;</span>.<span style=" color: #DD4968;">equals</span>(<span style=" color: #000;">item</span>)) { <span style=" color: #000;">list</span>.<span style=" color: #DD4968;">remove</span>(<span style=" color: #000;">item</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">说明：<span style=" color: #333;">以上代码的执行结果肯定会出乎大家的意料，那么试一下把“1”换成“2”，会是同样的结果吗？</span></p></li><li data-list-text="15."><p class="s9" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在 <span class="s12">JDK</span>7 版本及以上，<span class="s12">Comparator </span>实现类要满足如下三个条件，不然 <span class="s12">Arrays</span>.<span class="s12">sort</span>， <span class="s12">Collections</span>.<span class="s12">sort </span>会抛 <span class="s12">IllegalArgumentException </span>异常。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">三个条件如下</span></p><ol id="l23"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">x，y 的比较结果和 y，x 的比较结果相反。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">x&gt;y，y&gt;z，则 x&gt;z。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">x=y，则 x，z 比较结果和 y，z 比较结果相同。</p><p class="s18" style="padding-top: 1pt;padding-left: 53pt;text-indent: -11pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">下例中没有处理相等的情况，交换两个对象判断结果并不互反，不符合第一个条件，在实际使用中可能会出现异常。</span></p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">new </span><span style=" color: #000;">Comparator</span>&lt;<span style=" color: #DD4968;">Student</span>&gt;() { @Override</p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public int </span><span style=" color: #DD4968;">compare</span>(<span style=" color: #000;">Student o1</span>, <span style=" color: #000;">Student o2</span>) { <span style=" color: #07A;">return </span><span style=" color: #000;">o1</span>.<span style=" color: #DD4968;">getId</span>() <span style=" color: #A67E58;">&gt; </span><span style=" color: #000;">o2</span>.<span style=" color: #DD4968;">getId</span>() <span style=" color: #A67E58;">? </span><span style=" color: #976800;">1 </span><span style=" color: #A67E58;">: -</span><span style=" color: #976800;">1</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li data-list-text="16."><p class="s4" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">集合泛型定义时，在 JDK7 及以上，使用 diamond 语法或全省略。</span></p><p class="s27" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">菱形泛型，即 diamond，直接使用&lt;&gt;来指代前边已经指定的类型。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// diamond 方式，即&lt;&gt;</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">HashMap</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">String</span>&gt; <span style=" color: #000;">userCache </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">HashMap</span><span style=" color: #A67E58;">&lt;&gt;</span>(<span style=" color: #976800;">16</span>);</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 全省略方式</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #000;">ArrayList</span>&lt;<span style=" color: #DD4968;">User</span>&gt; <span style=" color: #000;">users </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ArrayList</span>(<span style=" color: #976800;">10</span>);</p></li><li data-list-text="17."><p class="s4" style="padding-left: 42pt;text-indent: -18pt;line-height: 21pt;text-align: justify;">【推荐】<span style=" color: #333;">集合初始化时，指定集合初始值大小。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">HashMap 使用 HashMap(int initialCapacity) 初始化，如果暂时无法确定集合大小，那么指定默认值（16）即可。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">正例：<span style=" color: #333;">initialCapacity = (需要存储的元素个数 / 负载因子) + 1。注意负载因子（即 loader factor）默认为 0.75，如果暂时无法确定初始值大小，请设置为 16（即默认值）。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">反例： <span style=" color: #333;">HashMap 需要放置 1024 个元素，由于没有设置容量初始大小，随着元素增加而被迫不断扩容， resize()方法总共会调用 8 次，反复重建哈希表和数据迁移。当放置的集合元素个数达千万级时会影响程序性能。</span></p></li><li data-list-text="18."><p class="s9" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #FFC000;">【推荐】</span>使用 <span class="s12">entrySet </span>遍历 <span class="s12">Map </span>类集合 <span class="s12">KV</span>，而不是 <span class="s12">keySet </span>方式进行遍历。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">keySet 其实是遍历了 2 次，一次是转为 Iterator 对象，另一次是从 hashMap 中取出 key 所对应的 value。而 entrySet 只是遍历了一次就把 key 和 value 都放到了 entry 中，效率更高。如果是 JDK8，使用 Map.forEach 方法。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">正例：<span style=" color: #333;">values()返回的是 V 值集合，是一个 list 集合对象；keySet()返回的是K 值集合，是一个 Set 集合对象；entrySet()返回的是 K-V 值组合集合。</span></p></li><li data-list-text="19."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">高度注意 Map 类集合 K/V 能不能存储null 值的情况，如下表格：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:44.9pt" cellspacing="0"><tr style="height:31pt"><td style="width:107pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s55" style="padding-top: 6pt;padding-left: 38pt;padding-right: 36pt;text-indent: 0pt;text-align: center;">集合类</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s55" style="padding-top: 6pt;padding-left: 26pt;padding-right: 25pt;text-indent: 0pt;text-align: center;">Key</p></td><td style="width:72pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s55" style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Value</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s55" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Super</p></td><td style="width:122pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s55" style="padding-top: 6pt;padding-left: 50pt;padding-right: 49pt;text-indent: 0pt;text-align: center;">说明</p></td></tr><tr style="height:30pt"><td style="width:107pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Hashtable</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s56" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不允许为 null</p></td><td style="width:72pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s56" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不允许为 null</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Dictionary</p></td><td style="width:122pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">线程安全</p></td></tr><tr style="height:31pt"><td style="width:107pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">ConcurrentHashMap</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s56" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不允许为 null</p></td><td style="width:72pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s56" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不允许为 null</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">AbstractMap</p></td><td style="width:122pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">锁分段技术（JDK8:CAS）</p></td></tr><tr style="height:31pt"><td style="width:107pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">TreeMap</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s57" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不允许为 null</p></td><td style="width:72pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s58" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">允许为 null</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">AbstractMap</p></td><td style="width:122pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">线程不安全</p></td></tr><tr style="height:30pt"><td style="width:107pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">HashMap</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s58" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">允许为 null</p></td><td style="width:72pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s58" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">允许为 null</p></td><td style="width:73pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">AbstractMap</p></td><td style="width:122pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s14" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">线程不安全</p></td></tr></table><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">由于 HashMap 的干扰，很多人认为 ConcurrentHashMap 是可以置入 null 值，而事实上，存储</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">null 值时会抛出 NPE 异常。</p></li><li data-list-text="20."><p class="s5" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">合理利用好集合的有序性(sort)和稳定性(order)，避免集合的无序性(unsort)和不稳定性(unorder)带来的负面影响。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">有序性是指遍历的结果是按某种比较规则依次排列的。稳定性指集合每次遍历的元素次序是一定的。如：ArrayList 是 order/unsort；HashMap 是 unorder/unsort；TreeSet 是 order/sort。</span></p></li><li data-list-text="21."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【参考】<span style=" color: #333;">利用 Set 元素唯一的特性，可以快速对一个集合进行去重操作，避免使用 List 的</span></p></li></ol><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">contains()进行遍历去重或者判断包含操作。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark9">(七) 并发处理</a><a name="bookmark21">&zwnj;</a></p><ol id="l24"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">获取单例对象需要保证线程安全，其中的方法也要保证线程安全。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">资源驱动类、工具类、单例工厂类都需要注意。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">创建线程或线程池时请指定有意义的线程名称，方便出错时回溯。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">自定义线程工厂，并且根据外部特征进行分组，比如，来自同一机房的调用，把机房编号赋值给</span></p><p class="s26" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">whatFeatureOfGroup</p><p class="s28" style="padding-top: 1pt;padding-left: 72pt;text-indent: -18pt;line-height: 85%;text-align: left;">public class <span style=" color: #000;">UserThreadFactory </span>implements <span style=" color: #000;">ThreadFactory </span><span style=" color: #999;">{ </span>private final <span style=" color: #000;">String namePrefix</span><span style=" color: #999;">;</span></p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">private final <span style=" color: #000;">AtomicInteger nextId </span><span style=" color: #A67E58;">= </span>new <span style=" color: #000;">AtomicInteger</span><span style=" color: #999;">(</span><span style=" color: #976800;">1</span><span style=" color: #999;">);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 定义线程组名称，在利用 jstack 来排查问题时，非常有帮助</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #DD4968;">UserThreadFactory</span>(<span style=" color: #000;">String whatFeatureOfGroup</span>) {</p><p class="s33" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">namePrefix </span>= <span style=" color: #50A04F;">&quot;From UserThreadFactory&#39;s &quot; </span>+ <span style=" color: #000;">whatFeatureOfGroup </span>+ <span style=" color: #50A04F;">&quot;-Worker-&quot;</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">@Override</p><p class="s29" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #07A;">public </span>Thread <span style=" color: #DD4968;">newThread</span><span style=" color: #999;">(</span>Runnable task<span style=" color: #999;">) {</span></p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: justify;"><span style=" color: #000;">String name </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">namePrefix </span><span style=" color: #A67E58;">+ </span><span style=" color: #000;">nextId</span>.<span style=" color: #DD4968;">getAndIncrement</span>(); <span style=" color: #000;">Thread thread </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">Thread</span>(<span style=" color: #000;">null</span>, <span style=" color: #000;">task</span>, <span style=" color: #000;">name</span>, <span style=" color: #976800;">0</span>, <span style=" color: #0084BA;">false</span>); <span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #000;">thread</span>.<span style=" color: #DD4968;">getName</span>());</p><p class="s28" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: justify;">return <span style=" color: #000;">thread</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="3."><p class="s3" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">线程池的好处是减少在创建和销毁线程上所消耗的时间以及系统资源的开销，解决资源不足的问题。如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者“过度切换”的问题。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">Executors 返回的线程池对象的弊端如下：</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">1） <span style=" color: #C6244E;">FixedThreadPool </span>和 <span style=" color: #C6244E;">SingleThreadPool</span>：</p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 10pt;line-height: 110%;text-align: left;">允许的请求队列长度为 Integer.MAX_VALUE，可能会堆积大量的请求，从而导致 OOM。 2） <span style=" color: #C6244E;">CachedThreadPool</span>：</p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 19pt;text-align: left;">允许的创建线程数量为 Integer.MAX_VALUE，可能会创建大量的线程，从而导致 OOM。</p></li><li data-list-text="5."><p class="s12" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span>SimpleDateFormat <span class="s9">是线程不安全的类，一般不要定义为 </span>static <span class="s9">变量，如果定义为 </span>static<span class="s9">，必须加锁，或者使用 </span>DateUtils <span class="s9">工具类。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">注意线程安全，使用 DateUtils。亦推荐如下处理：</span></p><p class="s30" style="padding-top: 2pt;padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">private static final </span><span style=" color: #000;">ThreadLocal</span>&lt;<span style=" color: #DD4968;">DateFormat</span>&gt; <span style=" color: #000;">df </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">ThreadLocal</span>&lt;<span style=" color: #DD4968;">DateFormat</span>&gt;() { @Override</p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">protected <span style=" color: #000;">DateFormat </span><span style=" color: #DD4968;">initialValue</span><span style=" color: #999;">() {</span></p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">return new </span><span style=" color: #000;">SimpleDateFormat</span>(<span style=" color: #50A04F;">&quot;yyyy-MM-dd&quot;</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">};</p><p class="s27" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">如果是 JDK8 的应用，可以使用 Instant 代替 Date，LocalDateTime 代替 Calendar， DateTimeFormatter 代替 SimpleDateFormat，官方给出的解释：simple beautiful strong immutable thread-safe。</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">必须回收自定义的 ThreadLocal 变量，尤其在线程池场景下，线程经常会被复用，如果不清理自定义的 ThreadLocal 变量，可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代理中使用 try-finally 块进行回收。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #000;">objectThreadLocal</span>.<span style=" color: #DD4968;">set</span>(<span style=" color: #000;">userInfo</span>); <span style=" color: #07A;">try </span>{</p><p class="s31" style="text-indent: 0pt;line-height: 13pt;text-align: right;">// ...</p><p class="s30" style="text-indent: 0pt;line-height: 14pt;text-align: right;">} <span style=" color: #07A;">finally </span>{</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">objectThreadLocal</span>.<span style=" color: #DD4968;">remove</span>();</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p></li><li data-list-text="7."><p class="s9" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>高并发时，同步调用应该去考量锁的性能损耗。能用无锁数据结构，就不要用锁<span class="s12">；</span>能锁区块，就不要锁整个方法体<span class="s12">；</span>能用对象锁，就不要用类锁。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">尽可能使加锁的代码块工作量尽可能的小，避免在锁代码块中调用 RPC 方法。</span></p></li><li data-list-text="8."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">对多个资源、数据库表、对象同时加锁时，需要保持一致的加锁顺序，否则可能会造成死锁。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">线程一需要对表 A、B、C 依次全部加锁后才可以进行更新操作，那么线程二的加锁顺序也必须是 A、 B、C，否则可能出现死锁。</span></p></li><li data-list-text="9."><p class="s25" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在使用阻塞等待获取锁的方式中，必须在 <span class="s50">try </span>代码块之外，并且在加锁方法与 <span class="s50">try </span>代码块之间没有任何可能抛出异常的方法调用，避免加锁成功后，在 <span class="s50">finally </span>中无法解锁。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明一：<span style=" color: #23292D;">如果在 lock 方法与 try 代码块之间的方法调用抛出异常，那么无法解锁，造成其它线程无法成功获取锁。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明二：<span style=" color: #23292D;">如果 lock 方法在try 代码块之内，可能由于其它方法抛出异常，导致在 finally 代码块中，unlock对未加锁的对象解锁，它会调用 AQS 的tryRelease 方法（取决于具体实现类），抛出 IllegalMonitorStateException 异常。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明三：<span style=" color: #23292D;">在 Lock 对象的 lock 方法实现中可能抛出 unchecked 异常，产生的后果与说明二相同。</span><span style=" color: #009757;">正例：</span></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 13pt;text-align: left;">Lock lock <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>XxxLock<span style=" color: #999;">();</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// ...</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">lock</span>(); <span style=" color: #07A;">try </span>{</p><p class="s32" style="padding-left: 72pt;text-indent: 0pt;line-height: 85%;text-align: left;">doSomething<span style=" color: #999;">(); </span>doOthers<span style=" color: #999;">();</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 13pt;text-align: left;">} <span style=" color: #07A;">finally </span>{</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">unlock</span>();</p><p class="s30" style="text-indent: 0pt;line-height: 14pt;text-align: center;">}</p><p class="s18" style="padding-left: 41pt;text-indent: 0pt;line-height: 19pt;text-align: center;">反例：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">Lock lock <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>XxxLock<span style=" color: #999;">();</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// ...</p><p class="s28" style="padding-top: 2pt;text-indent: 0pt;text-align: right;">try <span style=" color: #999;">{</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="text-indent: 0pt;line-height: 15pt;text-align: left;">// 如果此处抛出异常，则直接执行 finally 代码块</p><p class="s32" style="text-indent: 0pt;line-height: 14pt;text-align: left;">doSomething<span style=" color: #999;">();</span></p><p class="s31" style="text-indent: 0pt;line-height: 14pt;text-align: left;">// 无论加锁是否成功，finally 代码块都会执行</p><p class="s30" style="text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">lock</span>(); <span style=" color: #DD4968;">doOthers</span>();</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">} <span style=" color: #07A;">finally </span>{</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">unlock</span>();</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p></li><li data-list-text="10."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">在使用尝试机制来获取锁的方式中，进入业务代码块之前，必须先判断当前线程是否持有锁。锁的释放规则与锁的阻塞等待方式相同。</span></p><p class="s52" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span class="s27">说明：</span>Lock <span class="s26">对象的 </span>unlock <span class="s26">方法在执行时，它会调用 </span>AQS <span class="s26">的 </span>tryRelease <span class="s26">方法（取决于具体实现类），如果当前线程不持有锁，则抛出 </span>IllegalMonitorStateException <span class="s26">异常。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">Lock lock <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>XxxLock<span style=" color: #999;">();</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// ...</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">boolean </span><span style=" color: #000;">isLocked </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">tryLock</span>(); <span style=" color: #07A;">if </span>(<span style=" color: #000;">isLocked</span>) {</p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">try <span style=" color: #999;">{</span></p><p class="s32" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;">doSomething<span style=" color: #999;">(); </span>doOthers<span style=" color: #999;">();</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">} <span style=" color: #07A;">finally </span>{</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">lock</span>.<span style=" color: #DD4968;">unlock</span>();</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="11."><p class="s9" style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>并发修改同一记录时，避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存加锁，要么在数据库层使用乐观锁，使用 <span class="s12">version </span>作为更新依据。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明：<span style=" color: #333;">如果每次访问冲突概率小于 20%，推荐使用乐观锁，否则使用悲观锁。乐观锁的重试次数不得小于 3 次。</span></p></li><li data-list-text="12."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>多线程并行处理定时任务时，<span class="s12">Timer </span>运行多个 <span class="s12">TimeTask </span>时，只要其中之一没有捕获抛出的异常，其它任务便会自动终止运行，使用 <span class="s12">ScheduledExecutorService </span>则没有这个问题。</p></li><li data-list-text="13."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #23292D;">资金相关的金融敏感信息，使用悲观锁策略。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #23292D;">乐观锁在获得锁的同时已经完成了更新操作，校验逻辑容易出现漏洞，另外，乐观锁对冲突的解决策略有较复杂的要求，处理不当容易造成系统压力或数据异常，所以资金相关的金融敏感信息不建议使用乐观锁更新。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">悲观锁遵循一锁、二判、三更新、四释放的原则。</span></p></li><li data-list-text="14."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>使用 <span class="s12">CountDownLatch </span>进行异步转同步操作，每个线程退出前必须调用 <span class="s12">countDown </span>方法，线程执行代码注意 <span class="s12">catch </span>异常，确保 <span class="s12">countDown </span>方法被执行到，避免主线程无法执行至 <span class="s12">await </span>方法，直到超时才返回结果。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">注意，子线程抛出异常堆栈，不能在主线程 try-catch 到。</span></p></li><li data-list-text="15."><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>避免 <span class="s12">Random </span>实例被多线程使用，虽然共享该实例是线程安全的，但会因竞争同一 <span class="s12">seed</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">导致的性能下降。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">Random 实例包括 java.util.Random 的实例或者 Math.random()的方式。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">正例：<span style=" color: #333;">在 JDK7 之后，可以直接使用 API ThreadLocalRandom，而在 JDK7 之前，需要编码保证每个线程持有一个单独的 Random 实例。</span></p></li><li data-list-text="16."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #FFC000;">【推荐】</span>通过双重检查锁<span class="s12">（double</span>-<span class="s12">checked locking）（</span>在并发场景下<span class="s12">）</span>存在延迟初始化的优化问题隐患<span class="s12">（</span>可参考 <span class="s12">The </span>&quot;<span class="s12">Double</span>-<span class="s12">Checked Locking is Broken</span>&quot; <span class="s12">Declaration）</span>，推荐解决方案中较为简单一种<span class="s12">（</span>适用于 <span class="s12">JDK</span>5 及以上版本<span class="s12">）</span>，将目标属性声明为 <span class="s12">volatile </span>型，比如将 helper 的属性声明修改为`private volatile Helper helper = null;`<span class="s12">。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">public class <span style=" color: #000;">LazyInitDemo </span><span style=" color: #999;">{</span></p><p class="s29" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">private </span>volatile Helper helper <span style=" color: #A67E58;">= </span>null<span style=" color: #999;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s29" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public </span>Helper <span style=" color: #DD4968;">getHelper</span><span style=" color: #999;">() { </span><span style=" color: #07A;">if </span><span style=" color: #999;">(</span>helper <span style=" color: #A67E58;">== </span>null<span style=" color: #999;">) {</span></p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">synchronized <span style=" color: #999;">(</span>this<span style=" color: #999;">) {</span></p><p class="s29" style="padding-left: 126pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">if </span><span style=" color: #999;">(</span>helper <span style=" color: #A67E58;">== </span>null<span style=" color: #999;">) { </span>helper <span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span>Helper<span style=" color: #999;">(); }</span></p><p class="s30" style="padding-left: 108pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s28" style="padding-left: 90pt;text-indent: 0pt;line-height: 13pt;text-align: left;">return <span style=" color: #000;">helper</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">// other methods and fields...</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="17."><p class="s5" style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span class="s12">volatile </span><span style=" color: #333;">解决多线程内存不可见问题。对于一写多读，是可以解决变量同步问题，但是如果多写，同样无法解决线程安全问题。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">如果是 count++操作，使用如下类实现：AtomicInteger count = new AtomicInteger(); count.addAndGet(1); 如果是JDK8，推荐使用LongAdder 对象，比 AtomicLong 性能更好（减少乐观锁的重试次数）。</span></p></li><li data-list-text="18."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">HashMap 在容量不够进行 resize 时由于高并发可能出现死链，导致 CPU 飙升，在开发过程中注意规避此风险。</span></p></li><li data-list-text="19."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 107%;text-align: left;">【参考】<span style=" color: #333;">ThreadLocal 对象使用 static 修饰，ThreadLocal 无法解决共享对象的更新问题。 </span><span class="s21">说明：</span><span class="s12">这个变量是针对一个线程内所有操作共享的，所以设置为静态变量，所有此类实例共享此静态变量，也就是说在类第一次被使用时装载，只分配一块存储空间，所有此类的对象(只要是这个线程内定义的)都可以操控这个变量。</span></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark10">(八) 控制语句</a><a name="bookmark22">&zwnj;</a></p><ol id="l25"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在一个 switch 块内，每个 case 要么通过 continue/break/return 等来终止，要么注释说明程序将继续执行到哪一个 case 为止；在一个 switch 块内，都必须包含一个 default</span></p><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">语句并且放在最后，即使它什么代码也没有。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">注意 break 是退出 switch 语句块，而 return 是退出方法</span><span style=" color: #23292D;">体。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">当 switch 括号内的变量类型为 String 并且此变量为外部参数时，必须先进行 null</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">判断。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">如下的代码输出是什么？</span></p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">public class <span style=" color: #000;">SwitchString </span><span style=" color: #999;">{</span></p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public static void </span><span style=" color: #DD4968;">main</span>(<span style=" color: #000;">String</span>[] <span style=" color: #000;">args</span>) { <span style=" color: #DD4968;">method</span>(<span style=" color: #000;">null</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public static void </span><span style=" color: #DD4968;">method</span>(<span style=" color: #000;">String param</span>) { <span style=" color: #07A;">switch </span>(<span style=" color: #000;">param</span>) {</p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 肯定不是进入这里</p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">case <span style=" color: #50A04F;">&quot;sth&quot;</span><span style=" color: #A67E58;">:</span></p><p class="s30" style="padding-left: 126pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;it&#39;s sth&quot;</span>); <span style=" color: #07A;">break</span>;</p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 13pt;text-align: left;">// 也不是进入这里</p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">case <span style=" color: #50A04F;">&quot;null&quot;</span><span style=" color: #A67E58;">:</span></p><p class="s30" style="padding-left: 126pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;it&#39;s null&quot;</span>); <span style=" color: #07A;">break</span>;</p><p class="s31" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 也不是进入这里</p><p class="s28" style="padding-left: 108pt;text-indent: 0pt;line-height: 14pt;text-align: left;">default<span style=" color: #A67E58;">:</span></p><p class="s30" style="padding-left: 126pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;default&quot;</span>);</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="3."><p class="s9" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在 <span class="s12">if</span>/<span class="s12">else</span>/<span class="s12">for</span>/<span class="s12">while</span>/<span class="s12">do </span>语句中必须使用大括号。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">即使只有一行代码，也禁止不采用大括号的编码方式：if (condition) statements;</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">三目运算符 condition? 表达式 1 : 表达式 2 中，高度注意表达式 1 和 2 在类型对齐时，可能抛出因自动拆箱导致的 NPE 异常。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">以下两种场景会触发类型对齐的拆箱操作：</span></p><ol id="l26"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -22pt;text-align: left;">表达式 1 或表达式 2 的值只要有一个是原始类型。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">表达式 1 或表达式 2 的值的类型不一致，会强制拆箱升级成表示范围更大的那个类型。<span style=" color: #FF4500;">反例：</span></p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">Integer a <span style=" color: #A67E58;">= </span><span style=" color: #976800;">1</span><span style=" color: #999;">; </span>Integer b <span style=" color: #A67E58;">= </span><span style=" color: #976800;">2</span><span style=" color: #999;">; </span>Integer c <span style=" color: #A67E58;">= </span>null<span style=" color: #999;">; </span>Boolean flag <span style=" color: #A67E58;">= </span><span style=" color: #0084BA;">false</span><span style=" color: #999;">;</span></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// a*b 的结果是 int 类型，那么 c 会强制拆箱成 int 类型，抛出 NPE 异常</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">Integer result<span style=" color: #A67E58;">=</span><span style=" color: #999;">(</span>flag<span style=" color: #A67E58;">? </span>a<span style=" color: #A67E58;">*</span>b <span style=" color: #A67E58;">: </span>c<span style=" color: #999;">);</span></p></li></ol></li><li data-list-text="5."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">在高并发场景中，避免使用”等于”判断作为中断或退出的条件。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">如果并发控制没有处理好，容易产生等值判断被“击穿”的情况，使用大于或小于的区间判断条件来代替。</span></p><p class="s18" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #23292D;">判断剩余奖品数量等于 0 时，终止发放奖品，但因为并发处理错误导致奖品数量瞬间变成了负数，这样的话，活动无法终止。</span></p></li><li data-list-text="6."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">当某个方法的代码总行数超过 10 行时，return / throw 等中断逻辑的右大括号后均需要加一个空行。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">这样做逻辑清晰，有利于代码阅读时重点关注。</span></p></li><li data-list-text="7."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>表达异常的分支时，少用 <span class="s12">if-else 方式</span>，这种方式可以改写成：</p><p class="s30" style="padding-top: 6pt;padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">condition</span>) {</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">...</p><p class="s28" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">return <span style=" color: #000;">obj</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 接着写 else 的业务逻辑代码;</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">说明：<span style=" color: #333;">如果非使用 if()...else if()...else...方式表达逻辑，避免后续代码维护困难，请勿超过 3 层。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例：<span style=" color: #333;">超过 3 层的 if-else 的逻辑判断代码可以使用卫语句、策略模式、状态模式等来实现，其中卫语句示例如下：</span></p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public void </span><span style=" color: #000;">findBoyfriend </span>(<span style=" color: #000;">Man man</span>) { <span style=" color: #07A;">if </span>(<span style=" color: #000;">man</span>.<span style=" color: #DD4968;">isUgly</span>()) {</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;本姑娘是外貌协会的资深会员&quot;</span>); <span style=" color: #07A;">return</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">man</span>.<span style=" color: #DD4968;">isPoor</span>()) {</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;贫贱夫妻百事哀&quot;</span>); <span style=" color: #07A;">return</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">}</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">man</span>.<span style=" color: #DD4968;">isBadTemper</span>()) {</p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;银河有多远，你就给我滚多远&quot;</span>); <span style=" color: #07A;">return</span>;</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s30" style="padding-top: 2pt;padding-left: 72pt;text-indent: 0pt;text-align: left;"><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;可以先交往一段时间看看&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="8."><p class="s9" style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>除常用方法（如 <span class="s12">getXxx/isXxx</span>）等外，不要在条件判断中执行其它复杂的语句，将复杂逻辑判断的结果赋值给一个有意义的布尔变量名，以提高可读性。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">很多 if 语句内的逻辑表达式相当复杂，与、或、取反混合运算，甚至各种方法纵深调用，理解成本非常高。如果赋值一个非常好理解的布尔变量名字，则是件令人爽心悦目的事情。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 伪代码如下</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">final boolean </span><span style=" color: #000;">existed </span><span style=" color: #A67E58;">= </span>(<span style=" color: #000;">file</span>.<span style=" color: #DD4968;">open</span>(<span style=" color: #000;">fileName</span>, <span style=" color: #50A04F;">&quot;w&quot;</span>) <span style=" color: #A67E58;">!= </span><span style=" color: #000;">null</span>) <span style=" color: #A67E58;">&amp;&amp; </span>(...) <span style=" color: #A67E58;">|| </span>(...); <span style=" color: #07A;">if </span>(<span style=" color: #000;">existed</span>) {</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">...</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 12pt;text-align: left;">}</p><p class="s18" style="padding-left: 43pt;text-indent: 0pt;line-height: 15pt;text-align: left;">反例：</p><p class="s30" style="padding-left: 72pt;text-indent: -18pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">public final void </span><span style=" color: #000;">acquire </span>( <span style=" color: #07A;">long </span><span style=" color: #000;">arg</span>) { <span style=" color: #07A;">if </span>(<span style=" color: #A67E58;">!</span><span style=" color: #DD4968;">tryAcquire</span>(<span style=" color: #000;">arg</span>) <span style=" color: #A67E58;">&amp;&amp;</span></p><p class="s30" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #DD4968;">acquireQueued</span>(<span style=" color: #DD4968;">addWaiter</span>(<span style=" color: #000;">Node</span>.<span style=" color: #000;">EXCLUSIVE</span>), <span style=" color: #000;">arg</span>)) { <span style=" color: #DD4968;">selfInterrupt</span>();</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p></li><li data-list-text="9."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">不要在其它表达式（尤其是条件表达式）中，插入赋值语句。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">赋值点类似于人体的穴位，对于代码的理解至关重要，所以赋值语句需要清晰地单独成为一行。</span><span style=" color: #FF4500;">反例：</span></p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;">public <span style=" color: #000;">Lock </span><span style=" color: #DD4968;">getLock</span><span style=" color: #999;">(</span>boolean <span style=" color: #000;">fair</span><span style=" color: #999;">) {</span></p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// 算术表达式中出现赋值操作，容易忽略 count 值已经被改变</p><p class="s29" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">threshold <span style=" color: #A67E58;">= </span><span style=" color: #999;">(</span>count <span style=" color: #A67E58;">= </span>Integer<span style=" color: #999;">.</span>MAX_VALUE<span style=" color: #999;">) </span><span style=" color: #A67E58;">- </span><span style=" color: #976800;">1</span><span style=" color: #999;">;</span></p><p class="s29" style="padding-left: 72pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #6F8090;">// 条件表达式中出现赋值操作，容易误认为是 sync==fair </span><span style=" color: #07A;">return </span><span style=" color: #999;">(</span>sync <span style=" color: #A67E58;">= </span>fair<span style=" color: #999;">) </span><span style=" color: #A67E58;">? </span><span style=" color: #07A;">new </span>FairSync<span style=" color: #999;">() </span><span style=" color: #A67E58;">: </span><span style=" color: #07A;">new </span>NonfairSync<span style=" color: #999;">();</span></p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p></li><li data-list-text="10."><p class="s9" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>循环体中的语句要考量性能，以下操作尽量移至循环体外处理，如定义对象、变量、获取数据库连接，进行不必要的 <span class="s12">try</span>-<span class="s12">catch </span>操作<span class="s12">（</span>这个 <span class="s12">try</span>-<span class="s12">catch </span>是否可以移至循环体外<span class="s12">）</span>。</p></li><li data-list-text="11."><p class="s4" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">避免采用取反逻辑运算符。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #967B00;">说明：</span>取反逻辑不利于快速理解，并且取反逻辑写法一般都存在对应的正向逻辑写法。<span style=" color: #009757;">正例：</span>使用 if (x &lt; 628) 来表达 x 小于 628。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：<span style=" color: #23292D;">使用 if (!(x &gt;= 628)) 来表达 x 小于 628。</span></p></li><li data-list-text="12."><p class="s4" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">公开接口需要进行入参保护，尤其是批量操作的接口。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #23292D;">某业务系统，提供一个用户批量查询的接口，API 文档上有说最多查多少个，但接口实现上没做任何保护，导致调用方传了一个 1000 的用户 id 数组过来后，查询信息后，内存爆了。</span></p></li><li data-list-text="13."><p class="s5" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">下列情形，需要进行参数校验：</span></p><ol id="l27"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">调用频次低的方法。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 110%;text-align: left;">执行时间开销很大的方法。此情形中，参数校验时间几乎可以忽略不计，但如果因为参数错误导致中间执行回退，或者错误，那得不偿失。</p></li><li data-list-text="3）"><p style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">需要极高稳定性和可用性的方法。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">对外提供的开放接口，不管是 RPC/API/HTTP 接口。</p></li><li data-list-text="5）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">敏感权限入口。</p></li></ol></li><li data-list-text="14."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">下列情形，不需要进行参数校验：</span></p><ol id="l28"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">极有可能被循环调用的方法。但在方法说明里必须注明外部参数检查。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 109%;text-align: left;">底层调用频度比较高的方法。毕竟是像纯净水过滤的最后一道，参数错误不太可能到底层才会暴露问题。一般 DAO 层与 Service 层都在同一个应用中，部署在同一台服务器中，所以 DAO 的参数校验，可以省略。</p></li><li data-list-text="3）"><p style="padding-left: 42pt;text-indent: 5pt;line-height: 110%;text-align: left;">被声明成 private 只会被自己代码所调用的方法，如果能够确定调用方法的代码传入参数已经做过检查或者肯定不会有问题，此时可以不校验参数。</p></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark11">(九) 注释规约</a><a name="bookmark23">&zwnj;</a></p><ol id="l29"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">类、类属性、类方法的注释必须使用 Javadoc 规范，使用/**内容*/格式，不得使用</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">// xxx 方式。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">在 IDE 编辑窗口中，Javadoc 方式会提示相关注释，生成 Javadoc 可以正确输出相应注释；在 IDE</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率。</p></li><li data-list-text="2."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>所有的抽象方法<span class="s12">（</span>包括接口中的方法<span class="s12">）</span>必须要用 <span class="s12">Javadoc </span>注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">对子类的实现要求，或者调用注意事项，请一并说明。</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">所有的类都必须添加创建者和创建日期。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">在设置模板时，注意 IDEA 的@author 为`${USER}`，而 eclipse 的@author 为`${user}`，大小写有区别，而日期的设置统一为 yyyy/MM/dd 的格式</span><span style=" color: #333;">。</span></p><p class="s24" style="padding-left: 43pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s31" style="padding-top: 3pt;padding-left: 51pt;text-indent: 0pt;text-align: left;">/**</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l30"><li data-list-text="*"><p class="s31" style="padding-left: 65pt;text-indent: -6pt;text-align: left;">@author yangguanbao</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="*"><p class="s31" style="padding-left: 65pt;text-indent: -6pt;text-align: left;">@date 2016/10/31</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 59pt;text-indent: 0pt;text-align: left;">*/</p></li><li data-list-text="4."><p class="s3" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释，注意与代码对齐。</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">所有的枚举类型字段必须要有注释，说明每个数据项的用途。</span></p></li><li data-list-text="6."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">与其“半吊子”英文来注释，不如用中文注释把问题说清楚。专有名词与关键字保持英文原文即可。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">“TCP 连接超时”解释成“传输控制协议连接超时”，理解反而费脑筋。</span></p></li><li data-list-text="7."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑等的修改。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">代码与注释更新不同步，就像路网与导航软件更新不同步一样，如果导航软件严重滞后，就失去了导航的意义。</span></p></li><li data-list-text="8."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">在类中删除未使用的任何字段、方法、内部类；在方法中删除未使用的任何参数声明与内部变量。</span></p></li><li data-list-text="9."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">谨慎注释掉代码。在上方详细说明，而不是简单地注释掉。如果无用，则删除。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">代码被注释掉有两种可能性：1）后续会恢复此段代码逻辑。2）永久不用。前者如果没有备注信息，难以知晓注释动机。后者建议直接删掉即可，假如需要查阅历史代码，登录代码仓库即可。</span></p></li><li data-list-text="10."><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #76923B;">【参考】</span>对于注释的要求：第一、能够准确反映设计思想和代码逻辑<span class="s12">；</span>第二、能够描述业务含义，使别的程序员能够迅速了解到代码背后的信息。完全没有注释的大段代码对于阅读者形同天书，注释是给自己看的，即使隔很长时间，也能清晰理解当时的思路<span class="s12">；</span>注释也是给继任者看的，使其能够快速接替自己的工作。</p></li><li data-list-text="11."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【参考】<span style=" color: #333;">好的命名、代码结构是自解释的，注释力求精简准确、表达到位。避免出现注释的一个极端：过多过滥的注释，代码的逻辑一旦修改，修改注释又是相当大的负担。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #6F8090;">// put elephant into fridge </span><span style=" color: #DD4968;">put</span>(<span style=" color: #000;">elephant</span>, <span style=" color: #000;">fridge</span>);</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">方法名 put，加上两个有意义的变量名 elephant 和fridge，已经说明了这是在干什么，语义清晰的代码不需要额外的注释。</p></li><li data-list-text="12."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">特殊注释标记，请注明标记人与标记时间。注意及时处理这些标记，通过标记扫描，经常清理此类标记。线上故障有时候就是来源于这些标记处的代码。</span></p><ol id="l31"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">待办事宜（<span style=" color: #00F;">TODO</span>）:（标记人，标记时间，[预计处理时间]）</p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: -16pt;line-height: 110%;text-align: left;">表示需要实现，但目前还未实现的功能。这实际上是一个 Javadoc 的标签，目前的 Javadoc 还没有实现，但已经被广泛使用。只能应用于类，接口和方法（因为它是一个 Javadoc 标签）。</p></li><li data-list-text="2）"><p style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">错误，不能工作（<span style=" color: #00F;">FIXME</span>）:（标记人，标记时间，[预计处理时间]）</p></li></ol></li></ol><p style="padding-top: 1pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">在注释中用 FIXME 标记某代码是错误的，而且不能工作，需要及时纠正的情况。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark12">(十) 前后端规约</a><a name="bookmark24">&zwnj;</a></p><ol id="l32"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">前后端交互的 API，需要明确协议、域名、路径、请求方法、请求内容、状态码、响应体。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：</p><ol id="l33"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -22pt;text-align: left;">协议：生产环境必须使用 HTTPS。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -22pt;text-align: left;">路径：每一个 API 需对应一个路径，表示API 具体的请求地址：</p><ol id="l34"><li data-list-text="a）"><p style="padding-top: 1pt;padding-left: 74pt;text-indent: -21pt;text-align: left;">代表一种资源，只能为名词，推荐使用复数，不能为动词，请求方法已经表达动作意义。</p></li><li data-list-text="b）"><p style="padding-top: 1pt;padding-left: 75pt;text-indent: -22pt;text-align: left;">URL 路径不能使用大写，单词如果需要分隔，统一使用下划线。</p></li><li data-list-text="c）"><p style="padding-top: 1pt;padding-left: 74pt;text-indent: -21pt;text-align: left;">路径禁止携带表示请求内容类型的后缀，比如&quot;.json&quot;,&quot;.xml&quot;，通过 accept 头表达即可。</p></li></ol></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -22pt;text-align: left;">请求方法：对具体操作的定义，常见的请求方法如下：</p><ol id="l35"><li data-list-text="a）"><p style="padding-top: 1pt;padding-left: 74pt;text-indent: -21pt;text-align: left;">GET：从服务器取出资源。</p></li><li data-list-text="b）"><p style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;line-height: 110%;text-align: left;">POST：在服务器新建一个资源。 c） PUT：在服务器更新资源。</p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 19pt;text-align: left;">d） DELETE：从服务器删除资源。</p></li></ol></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">请求内容：URL 带的参数必须无敏感信息或符合安全要求；body 里带参数时必须设置 Content-Type。 5） 响应体：响应体 body 可放置多种数据类型，由 Content-Type 头来确定。</p></li></ol></li><li data-list-text="2."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">前后端数据列表相关的接口返回，如果为空，则返回空数组[]或空集合{}。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明<span class="s60">：</span><span style=" color: #333;">此条约定有利于数据层面上的协作更加高效，减少前端很多琐碎的 null 判断。</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">服务端发生错误时，返回给前端的响应信息必须包含 HTTP 状态码，errorCode、</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">errorMessage、用户提示信息四个部分。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<a href="#bookmark63" style=" color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt;">四个部分的涉众对象分别是浏览器、前端开发、错误排查人员、用户。其中输出给用户的提示信息要求：简短清晰、提示友好，引导用户进行下一步操作或解释错误原因，提示信息可以包括错误原因、上下文环境、推荐操作等。 errorCode：参考</a><span style=" color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">附表 3</span><span style=" color: #333;">。errorMessage：简要描述后端出错原因，便于错误排查人员快速定位问题，注意不要包含敏感数据信息。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">常见的 HTTP 状态码如下</span></p><ol id="l36"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">200 OK: 表明该请求被成功地完成，所请求的资源发送到客户端。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">401 Unauthorized: 请求要求身份验证，常见对于需要登录而用户未登录的情况。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">403 Forbidden：服务器拒绝请求，常见于机密信息或复制其它登录用户链接访问服务器的情况。</p></li><li data-list-text="4）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">404 Not Found: 服务器无法取得所请求的网页，请求资源不存在。</p></li><li data-list-text="5）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">500 Internal Server Error: 服务器内部错误。</p></li></ol></li><li data-list-text="4."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">在前后端交互的 JSON 格式数据中，所有的 key 必须为小写字母开始的</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">lowerCamelCase 风格，符合英文表达习惯，且表意完整。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">errorCode / errorMessage / assetStatus / menuList / orderList / configFlag</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">ERRORCODE / ERROR_CODE / error_message / error-message / errormessage / ErrorMessage / msg</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">errorMessage 是前后端错误追踪机制的体现，可以在前端输出到 type=&quot;hidden&quot;</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">文字类控件中，或者用户端的日志中，帮助我们快速地定位出问题。</p></li><li data-list-text="6."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">对于需要使用超大整数的场景，服务端一律使用 String 字符串类型返回，禁止使用</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">Long 类型。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">Java 服务端如果直接返回 Long 整型数据给前端，JS 会自动转换为 Number 类型（注：此类型为双精度浮点数，表示原理与取值范围等同于 Java 中的 Double）。Long 类型能表示的最大值是 2 的 63 次方</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">-1，在取值范围之内，超过 2 的 53 次方 (9007199254740992)的数值转化为 JS 的 Number 时，有些数 值会有精度损失。扩展说明，在 Long 取值范围内，任何 2 的指数次整数都是绝对不会存在精度损失的，所以说精度损失是一个概率问题。若浮点数尾数位与指数位空间不限，则可以精确表示任何整数，但很不幸，双精度浮点数的尾数位只有 52 位。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">通常在订单号或交易号大于等于 16 位，大概率会出现前后端单据不一致的情况，比如，&quot;orderId&quot;: 362909601374617692，前端拿到的值却是: 362909601374617660。</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">HTTP 请求通过 URL 传递参数时，不能超过 2048 字节。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">不同浏览器对于 URL 的最大长度限制略有不同，并且对超出最大长度的处理逻辑也有差异，2048字节是取所有浏览器的最小值。</span></p><p class="s18" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">某业务将退货的商品 id 列表放在 URL 中作为参数传递，当一次退货商品数量过多时，URL 参数超长，传递到后端的参数被截断，导致部分商品未能正确退货。</span></p></li><li data-list-text="8."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">HTTP 请求通过 body 传递内容时，必须控制长度，超出最大长度后，后端解析会出错。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">nginx 默认限制是 1MB，tomcat 默认限制为 2MB，当确实有业务需要传较大内容时，可以通过调大服务器端的限制。</span></p></li><li data-list-text="9."><p class="s3" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在翻页场景中，用户输入参数的小于 1，则前端返回第一页参数给后端；后端发现用户输入的参数大于总页数，直接返回最后一页。</span></p></li><li data-list-text="10."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">服务器内部重定向必须使用 forward；外部重定向地址必须使用 URL 统一代理模块生成，否则会因线上采用 HTTPS 协议而导致浏览器提示“不安全”，并且还会带来 URL 维护不一致的问题。</span></p></li><li data-list-text="11."><p class="s4" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">服务器返回信息必须被标记是否可以缓存，如果缓存，客户端可能会重用之前的请求结果。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">缓存有利于减少交互次数，减少交互的平均延迟。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">http 1.1 中，s-maxage 告诉服务器进行缓存，时间单位为秒，用法如下，</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">response.setHeader(&quot;Cache-Control&quot;, &quot;s-maxage=&quot; + cacheSeconds);</p></li><li data-list-text="12."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">服务端返回的数据，使用 JSON 格式而非 XML。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">尽管 HTTP 支持使用不同的输出格式，例如纯文本，JSON，CSV，XML，RSS 甚至 HTML。如果我们使用的面向用户的服务，应该选择 JSON 作为通信中使用的标准数据交换格式，包括请求和响应。此外， application/JSON 是一种通用的 MIME 类型，具有实用、精简、易读的特点。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">前后端的时间格式统一为&quot;yyyy-MM-dd HH:mm:ss&quot;，统一为 GMT。</span></p></li><li data-list-text="14."><p class="s5" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">在接口路径中不要加入版本号，版本控制在 HTTP 头信息中体现，有利于向前兼容。</span></p></li></ol><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">当用户在低版本与高版本之间反复切换工作时，会导致迁移复杂度升高，存在数据错乱风险。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark13">(十一) 其他</a><a name="bookmark25">&zwnj;</a></p><ol id="l37"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">不要在方法体内定义：Pattern pattern = Pattern.compile(“规则”);</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">避免用 Apache Beanutils 进行属性的 copy。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">Apache BeanUtils 性能较差，可以使用其他方案比如 Spring BeanUtils, Cglib BeanCopier，注意均是浅拷贝。</span></p></li><li data-list-text="3."><p class="s12" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span>velocity <span class="s9">调用 </span>POJO <span class="s9">类的属性时，直接使用属性名取值即可，模板引擎会自动按规范调用 </span>POJO <span class="s9">的 </span>getXxx()<span class="s9">，如果是 </span>boolean <span class="s9">基本数据类型变量</span>（boolean <span class="s9">命名不需要加 </span>is <span class="s9">前缀</span>）<span class="s9">，会自动调用 </span>isXxx()<span class="s9">方法。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">注意如果是 Boolean 包装类对象，优先调用 getXxx()的方法。</span></p></li><li data-list-text="4."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>后台输送给页面的变量必须加<span class="s12">$!{var}</span>——中间的感叹号。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">如果 var 等于 null 或者不存在，那么${var}会直接显示在页面上。</span></p></li><li data-list-text="5."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>注意 <span class="s12">Math</span>.<span class="s12">random() </span>这个方法返回是 <span class="s12">double </span>类型，注意取值的范围 0≤<span class="s12">x</span>&lt;1<span class="s12">（</span>能够取到<span style=" color: #00F;">零</span>值，注意除零异常<span class="s12">）</span>，如果想获取整数类型的随机数，不要将 <span class="s12">x </span>放大 10 的若干倍然后取整，直接使用 <span class="s12">Random </span>对象的 <span class="s62">nextInt </span><span style=" color: #000;">或者 </span><span class="s62">nextLong </span>方法。</p></li><li data-list-text="6."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">不要在视图模板中加入任何复杂的逻辑。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">根据 MVC 理论，视图的职责是展示，不要抢模型和控制器的活。</span></p></li><li data-list-text="7."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">任何数据结构的构造或初始化，都应指定大小，避免数据结构无限增长吃光内存。</span></p></li><li data-list-text="8."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">及时清理不再使用的代码段或配置信息。</span></p></li></ol><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">对于垃圾代码或过时配置，坚决清理干净，避免程序过度臃肿，代码冗余。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例：<span style=" color: #333;">对于暂时被注释掉，后续可能恢复使用的代码片断，在注释代码上方，统一规定使用三个斜杠(///)来说明注释掉代码的理由。如：</span></p><p class="s28" style="padding-top: 5pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">public static void <span style=" color: #DD4968;">hello</span><span style=" color: #999;">() {</span></p><p class="s31" style="padding-top: 4pt;padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">/// 业务方通知活动暂停</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// Business business = new Business();</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #6F8090;">// business.active(); </span><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;it&#39;s finished&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark26">二、异常日志</a><a name="bookmark30">&zwnj;</a></p><p class="s63" style="padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark27">(一) </a><span class="s16">错误码</span><a name="bookmark31">&zwnj;</a></p><ol id="l38"><li data-list-text="1."><p class="s3" style="padding-top: 16pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #23292D;">错误码的制定原则：快速溯源、沟通标准化。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明： <span style=" color: #23292D;">错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">正例：<span style=" color: #23292D;">错误码回答的问题是谁的错？错在哪？1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。2）错误码必须能够进行清晰地比对（代码中容易equals）。3）错误码有利于团队快速对错误原因达到一致认知。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #23292D;">错误码不体现版本号和错误等级信息。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">错误码以不断追加的方式进行兼容。错误等级由日志和错误码本身的释义来决定。</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">全部正常，但不得不填充错误码时返回五个零：00000。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">错误码为字符串类型，共 5 位，分成两个部分：错误产生来源+四位数字编号。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<a href="#bookmark63" style=" color: #23292D; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt;">错误产生来源分为 A/B/C，A 表示错误来源于用户，比如参数错误，用户安装版本过低，用户支付超时等问题；B 表示错误来源于当前系统，往往是业务逻辑出错，或程序健壮性差等问题；C 表示错误来源于第三方服务，比如 CDN 服务出错，消息投递超时等问题；四位数字编号从 0001 到 9999，大类之间的步长间距预留 100，参考文末</a><a href="#bookmark63" class="s61">附表 </a><span style=" color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">3</span><span style=" color: #23292D;">。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="5."><p class="s3" style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">编号不与公司业务架构，更不与组织架构挂钩，以先到先得的原则在统一平台上进行，审批生效，编号即被永久固定。</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">错误码使用者避免随意定义新的错误码。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">尽可能在原有错误码附表中找到语义相同或者相近的错误码在代码中使用即可。</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #23292D;">错误码不能直接输出给用户作为提示信息使用。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #23292D;">堆栈（stack_trace）、错误信息(error_message)、错误码（error_code）、提示信息（user_tip）是一个有效关联并互相转义的和谐整体，但是请勿互相越俎代庖。</span></p></li><li data-list-text="8."><p class="s4" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">错误码之外的业务独特信息由 error_message 来承载，而不是让错误码本身涵盖过多具体业务属性。</span></p></li><li data-list-text="9."><p class="s4" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">在获取第三方服务错误码时，向上抛出允许本系统转义，由 C 转为 B，并且在错误信息上带上原有的第三方错误码。</span></p></li><li data-list-text="10."><p class="s5" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">错误码分为一级宏观错误码、二级宏观错误码、三级宏观错误码。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">在无法更加具体确定的错误场景中，可以直接使用一级宏观错误码，分别是：A0001（用户端错误）、</span></p><p class="s26" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">B0001（系统执行出错）、C0001（调用第三方服务出错）。</p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">调用第三方服务出错是一级，中间件错误是二级，消息服务出错是三级。</span></p></li><li data-list-text="11."><p class="s5" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">错误码的后三位编号与 HTTP 状态码没有任何关系。</span></p></li><li data-list-text="12."><p class="s5" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">错误码有利于不同文化背景的开发者进行交流与代码协作。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">英文单词形式的错误码不利于非英语母语国家（如阿拉伯语、希伯来语、俄罗斯语等）之间的开发者互相协作。</span></p></li><li data-list-text="13."><p class="s5" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">错误码即人性，感性认知+口口相传，使用纯数字来进行错误码编排不利于感性记忆和分类。</span></p></li></ol><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">数字是一个整体，每位数字的地位和含义是相同的。</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例：<span style=" color: #23292D;">一个五位数字 12345，第 1 位是错误等级，第 2 位是错误来源，345 是编号，人的大脑不会主动地拆开并分辨每位数字的不同含义。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark28">(二) </a><span class="s16">异常处理</span><a name="bookmark32">&zwnj;</a></p><ol id="l39"><li data-list-text="1."><p class="s25" style="padding-top: 16pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>Java 类库中定义的可以通过预检查方式规避的 <span style=" color: #333;">RuntimeException </span>异常不应该通过 <span style=" color: #333;">catch </span>的方式来处理，比如：<span style=" color: #333;">NullPointerException</span>，<span style=" color: #333;">IndexOutOfBoundsException </span>等等。<span class="s21">说明：</span><span class="s48">无法通过预检查的异常除外，比如，在解析字符串形式的数字时，可能存在数字格式错误，不得不 通过 </span><span class="s12">catch NumberFormatException </span><span class="s48">来实现。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">if (obj != null) {...}</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #23292D;">try { obj.method(); } catch (NullPointerException e) {…}</span></p></li><li data-list-text="2."><p class="s25" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>异常<span style=" color: #333;">捕获后</span>不要用来做流程控制，条件控制。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">异常设计的初衷是解决程序运行中的各种意外情况，且异常的处理效率比条件判断方式要低很多。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="3."><p class="s12" style="padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s3">【强制】</span>catch <span class="s25">时请分清稳定代码和非稳定代码，稳定代码指的是无论如何不会出错的代码。对于非稳定代码的 </span>catch <span class="s25">尽可能进行区分异常类型，再做对应的异常处理。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>对大段代码进行 <span style=" color: #333;">try</span>-<span style=" color: #333;">catch</span>，使程序无法根据不同的异常做出正确的应激反应，也不利于定位问题，这是一种不负责任的表现。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例：<span style=" color: #23292D;">用户注册的场景中，如果用户输入非法字符，或用户名称已存在，或用户输入密码过于简单，在程序上作出分门别类的判断，并提示给用户。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">捕获异常是为了处理它，不要捕获了却什么都不处理而抛弃之，如果不想处理它，请将该异常抛给它的调用者。最外层的业务使用者，必须处理异常，将其转化为用户可以理解的内容。</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">事务场景中，抛出异常被 catch 后，如果需要回滚，一定要注意手动回滚事务。</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">finally 块必须对资源对象、流对象进行关闭，有异常也要做 try-catch。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">如果 JDK7 及以上，可以使用 try-with-resources 方式。</span></p></li><li data-list-text="7."><p class="s25" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>不要在 <span style=" color: #333;">finally </span>块中使用 <span style=" color: #333;">return</span>。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">try 块中的 return 语句执行成功后，并不马上返回，而是继续执行 finally 块中的语句，如果此处存在 return 语句，则在此直接返回，无情丢弃掉try 块中的返回点。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：</p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">private int <span style=" color: #000;">x </span><span style=" color: #A67E58;">= </span><span style=" color: #976800;">0</span><span style=" color: #999;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s28" style="padding-left: 72pt;text-indent: -18pt;line-height: 85%;text-align: left;">public int <span style=" color: #DD4968;">checkReturn</span><span style=" color: #999;">() { </span>try <span style=" color: #999;">{</span></p><p class="s31" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;">// x 等于 1，此处不返回 <span style=" color: #07A;">return </span><span style=" color: #A67E58;">++</span><span style=" color: #000;">x</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">} <span style=" color: #07A;">finally </span>{</p><p class="s31" style="padding-left: 90pt;text-indent: 0pt;line-height: 84%;text-align: left;">// 返回的结果是 2 <span style=" color: #07A;">return </span><span style=" color: #A67E58;">++</span><span style=" color: #000;">x</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="8."><p class="s3" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">捕获异常与抛异常，必须是完全匹配，或者捕获异常是抛异常的父类。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">如果预期对方抛的是绣球，实际接到的是铅球，就会产生意外情况。</span></p></li><li data-list-text="9."><p class="s25" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在调用 <span class="s50">RPC</span>、二方包、或动态生成类的相关方法时，捕捉异常必须使用 <span class="s50">Throwable</span></p><p class="s25" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">类来进行拦截。</p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>通过反射机制来调用方法，如果找不到方法，抛出 <span class="s52">NoSuchMethodException</span>。什么情况会抛出 <span class="s52">NoSuchMethodError </span>呢？二方包在类冲突时，仲裁机制可能导致引入非预期的版本使类的方法签名不匹配，或者在字节码修改框架（比如：<span class="s52">ASM</span>）动态创建或修改类时，修改了相应的方法签名。这些情况，即使代码编译期是正确的，但在代码运行期时，会抛出 <span class="s52">NoSuchMethodError</span>。</p></li><li data-list-text="10."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>方法的返回值可以为 null，不强制返回空集合，或者空对象等，必须添加注释充分说明什么情况下会返回 <span class="s12">null </span>值。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">本手册明确防止 NPE 是调用者的责任。即使被调用方法返回空集合或者空对象，对调用者来说，也并非高枕无忧，必须考虑到远程调用失败、序列化失败、运行时异常等场景返回 null 的情况。</span></p></li><li data-list-text="11."><p class="s9" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>防止 <span class="s12">NPE</span>，是程序员的基本修养，注意 <span class="s12">NPE </span>产生的场景：</p><ol id="l40"><li data-list-text="1）"><p style="padding-left: 63pt;text-indent: -15pt;line-height: 110%;text-align: left;">返回类型为基本数据类型，return 包装数据类型的对象时，自动拆箱有可能产生 NPE。<span style=" color: #FF4500;">反例：</span>public int f() { return Integer 对象}， 如果为 null，自动解箱抛 NPE。</p></li><li data-list-text="2）"><p style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">数据库的查询结果可能为 null。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;line-height: 109%;text-align: left;">集合里的元素即使 isNotEmpty，取出的数据元素也可能为 null。 4） 远程调用返回对象时，一律要求进行空指针判断，防止 NPE。</p><ol id="l41"><li data-list-text="5）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">对于 Session 中获取的数据，建议进行 NPE 检查，避免空指针。</p></li><li data-list-text="6）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 109%;text-align: left;">级联调用 obj.getA().getB().getC()；一连串调用，易产生 NPE。<span style=" color: #009757;">正例：</span>使用 JDK8 的 Optional 类来防止 NPE 问题。</p></li></ol></li></ol></li><li data-list-text="12."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">定义时区分 unchecked / checked 异常，避免直接抛出 new RuntimeException()，更不允许抛出 Exception 或者 Throwable，应使用有业务含义的自定义异常。推荐业界已定义过的自定义异常，如：DAOException / ServiceException 等。</span></p></li><li data-list-text="13."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">对于公司外的 http/api 开放接口必须使用 errorCode；而应用内部推荐异常抛出；跨应用间 RPC 调用优先考虑使用 Result 方式，封装 isSuccess()方法、errorCode、 errorMessage；而应用内部直接抛出异常即可。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">关于 RPC 方法返回方式使用 Result 方式的理由：</span></p><ol id="l42"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 64pt;text-indent: -16pt;text-align: left;">使用抛异常返回方式，调用方如果没有捕获到就会产生运行时错误。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 109%;text-align: left;">如果不加栈信息，只是 new 自定义异常，加入自己的理解的 error message，对于调用端解决问题的帮助不会太多。如果加了栈信息，在频繁调用出错的情况下，数据序列化和传输的性能损耗也是问题。</p></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s63" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark29">(三) </a><span class="s16">日志规约</span><a name="bookmark33">&zwnj;</a></p><ol id="l43"><li data-list-text="1."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>应用中不可直接使用日志系统<span class="s12">（Log</span>4<span class="s12">j</span>、<span class="s12">Logback）</span>中的 <span class="s12">API</span>，而应依赖使用日志框架</p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;">（SLF4J、JCL--Jakarta Commons Logging）<span class="s64">中的 </span>API<span class="s64">，使用门面模式的日志框架，有利于维护和各个类的日志处理方式统一。</span></p><p class="s27" style="padding-left: 59pt;text-indent: -16pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">日志框架（SLF4J、JCL--Jakarta Commons Logging）的使用方式（推荐使用 SLF4J）使用 SLF4J：</span></p><p class="s29" style="padding-left: 59pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">import </span>org<span style=" color: #999;">.</span>slf4j<span style=" color: #999;">.</span>Logger<span style=" color: #999;">; </span><span style=" color: #07A;">import </span>org<span style=" color: #999;">.</span>slf4j<span style=" color: #999;">.</span>LoggerFactory<span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 59pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #07A;">private static final </span><span style=" color: #000;">Logger logger </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">LoggerFactory</span>.<span style=" color: #DD4968;">getLogger</span>(<span style=" color: #000;">Test</span>.<span style=" color: #07A;">class</span>);</p><p style="padding-left: 58pt;text-indent: 0pt;line-height: 15pt;text-align: left;">使用 JCL：</p><p class="s29" style="padding-left: 59pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #07A;">import </span>org<span style=" color: #999;">.</span>apache<span style=" color: #999;">.</span>commons<span style=" color: #999;">.</span>logging<span style=" color: #999;">.</span>Log<span style=" color: #999;">; </span><span style=" color: #07A;">import </span>org<span style=" color: #999;">.</span>apache<span style=" color: #999;">.</span>commons<span style=" color: #999;">.</span>logging<span style=" color: #999;">.</span>LogFactory<span style=" color: #999;">;</span></p><p class="s30" style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: left;"><span style=" color: #07A;">private static final </span><span style=" color: #000;">Log log </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">LogFactory</span>.<span style=" color: #DD4968;">getLog</span>(<span style=" color: #000;">Test</span>.<span style=" color: #07A;">class</span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="2."><p class="s3" style="padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">所有日志文件至少保存 15 天，因为有些异常具备以“周”为频次发生的特点。对于当天日志，以“应用名.log”来保存，保存在/home/admin/应用名/logs/目录下，过往日志格式为: {logname}.log.{保存日期}，日期格式：yyyy-MM-dd</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">以 aap 应用为例，日志保存在/home/admin/aapserver/logs/aap.log，历史日志名称为</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">aap.log.2016-08-01</p></li><li data-list-text="3."><p class="s3" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">根据国家法律，网络运行状态、网络安全事件、个人敏感信息操作等相关记录，留存的日志不少于六个月，并且进行网络多机备份。</span></p></li><li data-list-text="4."><p class="s9" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;line-height: 107%;text-align: left;"><span style=" color: #C00000;">【强制】</span>应用中的扩展日志<span class="s12">（</span>如打点、临时监控、访问日志等<span class="s12">）</span>命名方式： <span class="s12">appName_logType_logName.log。logType:日志类型，如 stats/monitor/access 等；logName:日志描述。这种命名的好处：通过文件名就可知道日志文件属于什么应用，什么类型，什么目的，也有利于归类查找。</span></p><p class="s27" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">推荐对日志进行分类，如将错误日志和业务日志分开存放，便于开发人员查看，也便于通过日志对系统进行及时监控。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：<span style=" color: #333;">mppserver 应用中单独监控时区转换异常，如：mppserver_monitor_timeZoneConvert.log</span></p></li><li data-list-text="5."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">在日志输出时，字符串变量之间的拼接使用占位符的方式。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>因为 <span class="s52">String </span>字符串的拼接会使用 <span class="s52">StringBuilder </span>的 <span class="s52">append()</span>方式，有一定的性能损耗。使用占位符仅是替换动作，可以有效提升性能。</p><p class="s66" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span class="s24">正例：</span><span style=" color: #000;">logger</span>.<span style=" color: #DD4968;">debug</span>(<span style=" color: #690;">&quot;Processing trade with id: {} and symbol: {}&quot;</span>, <span style=" color: #000;">id</span>, <span style=" color: #000;">symbol</span>);</p></li><li data-list-text="6."><p class="s51" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s3">【强制】</span><span class="s25">对于 </span>trace<span class="s50">/</span>debug<span class="s50">/</span>info <span class="s25">级别的日志输出，必须进行日志级别的开关判断。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span style=" color: #967B00;">说明：</span>虽然在 <span class="s52">debug(</span>参数<span class="s52">)</span>的方法体内第一行代码 <span class="s52">isDisabled(Level.DEBUG_INT)</span>为真时（<span class="s69">Slf4j </span>的常见实现 <span class="s69">Log4j </span>和 <span class="s69">Logback</span>），就直接 <span class="s52">return</span>，但是参数可能会进行字符串拼接运算。此外，如果 <span class="s52">debug(getName())</span>这种参数内有 <span class="s52">getName()</span>方法调用，无谓浪费方法调用的开销。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 如果判断为真，那么可以输出 trace 和 debug 级别的日志</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #07A;">if </span>(<span style=" color: #000;">logger</span>.<span style=" color: #DD4968;">isDebugEnabled</span>()) {</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">logger</span>.<span style=" color: #DD4968;">debug</span>(<span style=" color: #50A04F;">&quot;Current ID is: {} and name is: {}&quot;</span>, <span style=" color: #000;">id</span>, <span style=" color: #DD4968;">getName</span>());</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="7."><p class="s9" style="padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>避免重复打印日志，浪费磁盘空间，务必在日志配置文件中设置 <span class="s12">additivity</span>=<span class="s12">false</span>。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">&lt;logger name=&quot;com.taobao.dubbo.config&quot; additivity=&quot;false&quot;&gt;</span></p></li><li data-list-text="8."><p class="s3" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;">【强制】<span style=" color: #333;">生产环境禁止直接使用 System.out 或System.err 输出日志或使用</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">e.printStackTrace()打印异常堆栈。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">标准日志输出与标准错误输出文件每次 Jboss 重启时才滚动，如果大量输出送往这两个文件，容易造成文件大小超过操作系统大小限制。</span></p></li><li data-list-text="9."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>异常信息应该包括两类信息：案发现场信息和异常堆栈信息。如果不处理，那么通过关键字 <span class="s12">throws </span>往上抛出。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span class="s70">logger.error(&quot;inputParams:{} and errorMessage:{}&quot;, 各类参数或者对象 toString(), e.getMessage(), e);</span></p></li><li data-list-text="10."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">日志打印时禁止直接用 JSON 工具将对象转换成 String。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">如果对象里某些 get 方法被覆写，存在抛出异常的情况，则可能会因为打印日志而影响正常业务流程的执行。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">打印日志时仅打印出业务相关属性值或者调用其对象的 toString()方法。</span></p></li><li data-list-text="11."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #FFC000;">【推荐】</span>谨慎地记录日志。生产环境禁止输出 <span class="s12">debug </span>日志<span class="s12">；</span>有选择地输出 <span class="s12">info </span>日志<span class="s12">；</span>如果使用 <span class="s12">warn </span>来记录刚上线时的业务行为信息，一定要注意日志输出量的问题，避免把服务器磁盘撑爆，并记得及时删除这些观察日志。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">大量地输出无效日志，不利于系统性能提升，也不利于快速定位错误点。记录日志时请思考：这些日志真的有人看吗？看到这条日志你能做什么？能不能给问题排查带来好处？</span></p></li><li data-list-text="12."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">可以使用 warn 日志级别来记录用户输入参数错误的情况，避免用户投诉时，无所适从。如非必要，请不要在此场景打出 error 级别，避免频繁报警。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">注意日志输出的级别，error 级别只记录系统逻辑出错、异常或者重要的错误信息。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">尽量用英文来描述日志错误信息，如果日志中的错误信息用英文描述不清楚的话使用中文描述即可，否则容易产生歧义。</span></p></li></ol><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">国际化团队或海外部署的服务器由于字符集问题，使用全英文来注释和描述日志错误信息。</span></p><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark34">三、单元测试</a><a name="bookmark35">&zwnj;</a></p><ol id="l44"><li data-list-text="1."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>好的单元测试必须遵守 <span class="s12">AIR </span>原则。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">单元测试在线上运行时，感觉像空气（AIR）一样感觉不到，但在测试质量的保障上，却是非常关键的。好的单元测试宏观上来说，具有自动化、独立性、可重复执行的特点。</span></p><ul id="l45"><li data-list-text=""><p class="s42" style="padding-top: 7pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">A<span style=" color: #333;">：Automatic（自动化）</span></p></li><li data-list-text=""><p class="s42" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">I<span style=" color: #333;">：Independent（独立性）</span></p></li><li data-list-text=""><p class="s42" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">R<span style=" color: #333;">：Repeatable（可重复）</span></p></li></ul></li><li data-list-text="2."><p class="s9" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>单元测试应该是全自动执行的，并且非交互式的。测试用例通常是被定期执行的，执行过程必须完全自动化才有意义。输出结果需要人工检查的测试不是一个好的单元测试。单元测试中不准使用 <span class="s12">System.out </span>来进行人肉验证，必须使用 <span class="s12">assert </span>来验证。</p></li><li data-list-text="3."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">保持单元测试的独立性。为了保证单元测试稳定可靠且便于维护，单元测试用例之间决不能互相调用，也不能依赖执行的先后次序。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">反例：<span style=" color: #333;">method2 需要依赖 method1 的执行，将执行结果作为 method2 的输入。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">单元测试是可以重复执行的，不能受到外界环境的影响。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">单元测试通常会被放到持续集成中，每次有代码 check in 时单元测试都会被执行。如果单测对外部环境（网络、服务、中间件等）有依赖，容易导致持续集成机制的不可用。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：<span style=" color: #333;">为了不受外界环境影响，要求设计代码时就把 SUT 的依赖改成注入，在测试时用 spring 这样的 DI</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">框架注入一个本地（内存）实现或者 Mock 实现。</p></li><li data-list-text="5."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">对于单元测试，要保证测试粒度足够小，有助于精确定位问题。单测粒度至多是类级别，一般是方法级别。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">只有测试粒度小才能在出错时尽快定位到出错位置。单测不负责检查跨类或者跨系统的交互逻辑，那是集成测试的领域。</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">核心业务、核心应用、核心模块的增量代码确保单元测试通过。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">新增代码及时补充单元测试，如果新增代码影响了原有单元测试，请及时修正。</span></p></li><li data-list-text="7."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>单元测试代码必须写在如下工程目录：<span class="s12">src/test/java</span>，不允许写在业务代码目录下。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">源码编译时会跳过此目录，而单元测试框架默认是扫描此目录。</span></p></li><li data-list-text="8."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>单元测试的基本目标：语句覆盖率达到 <span class="s12">70%</span>；核心模块的语句覆盖率和分支覆盖率都</p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">要达到 <span class="s12">100%</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 108%;text-align: left;">说明：<span style=" color: #333;">在工程规约的应用分层中提到的 DAO 层，Manager 层，可重用度高的 Service，都应该进行单元测试。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="9."><p class="s9" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>编写单元测试代码遵守 <span class="s12">BCDE </span>原则，以保证被测试模块的交付质量。</p><ul id="l46"><li data-list-text=""><p class="s42" style="padding-top: 7pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">B<span style=" color: #333;">：Border，边界值测试，包括循环边界、特殊取值、特殊时间点、数据顺序等。</span></p></li><li data-list-text=""><p class="s42" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">C<span style=" color: #333;">：Correct，正确的输入，并得到预期的结果。</span></p></li><li data-list-text=""><p class="s42" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">D<span style=" color: #333;">：Design，与设计文档相结合，来编写单元测试。</span></p></li><li data-list-text=""><p class="s42" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">E<span style=" color: #333;">：Error，强制错误信息输入（如：非法数据、异常流程、业务允许外等），并得到预期的结果。</span></p></li></ul></li><li data-list-text="10."><p class="s4" style="padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">对于数据库相关的查询，更新，删除等操作，不能假设数据库里的数据是存在的，或者直接操作数据库把数据插入进去，请使用程序插入或者导入数据的方式来准备数据。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 108%;text-align: left;">反例：<span style=" color: #333;">删除某一行数据的单元测试，在数据库中，先直接手动增加一行作为删除目标，但是这一行新增数据并不符合业务插入规则，导致测试结果异常。</span></p></li><li data-list-text="11."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">和数据库相关的单元测试，可以设定自动回滚机制，不给数据库造成脏数据。或者对单元测试产生的数据有明确的前后缀标识。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">在阿里巴巴企业智能事业部的内部单元测试中，使用 </span><span class="s71">ENTERPRISE_INTELLIGENCE _UNIT_TEST_</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">的前缀来标识单元测试相关代码。</p></li><li data-list-text="12."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">对于不可测的代码在适当的时机做必要的重构，使代码变得可测，避免为了达到测试要求而书写不规范测试代码。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">在设计评审阶段，开发人员需要和测试人员一起确定单元测试范围，单元测试最好覆盖所有测试用例（UC）。</span></p></li><li data-list-text="14."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">单元测试作为一种质量保障手段，在项目提测前完成单元测试，不建议项目发布后补充单元测试用例。</span></p></li><li data-list-text="15."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">为了更方便地进行单元测试，业务代码应避免以下情况：</span></p><ul id="l47"><li data-list-text=""><p style="padding-top: 4pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">构造方法中做的事情过多。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">存在过多的全局变量和静态方法。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">存在过多的外部依赖。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">存在过多的条件语句。</p><p class="s27" style="padding-top: 5pt;padding-left: 46pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">多层条件语句建议使用卫语句、策略模式、状态模式等方式重构。</span></p></li></ul></li><li data-list-text="16."><p class="s5" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">不要对单元测试存在如下误解：</span></p><ul id="l48"><li data-list-text=""><p style="padding-top: 4pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">那是测试同学干的事情。本文是开发手册，凡是本文内容都是与开发同学强相关的。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">单元测试代码是多余的。系统的整体功能与各单元部件的测试正常与否是强相关的。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">单元测试代码不需要维护。一年半载后，那么单元测试几乎处于废弃状态。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">单元测试与线上故障没有辩证关系。好的单元测试能够最大限度地规避线上故障。</p></li></ul></li></ol><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark36">四、安全规约</a><a name="bookmark37">&zwnj;</a></p><ol id="l49"><li data-list-text="1."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">隶属于用户个人的页面或者功能必须进行权限控制校验。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">防止没有做水平权限校验就可随意访问、修改、删除别人的数据，比如查看他人的私信内容。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">用户敏感数据禁止直接展示，必须对展示数据进行脱敏。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">中国大陆个人手机号码显示：139****1219，隐藏中间 4 位，防止隐私泄露。</span></p></li><li data-list-text="3."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>用户输入的 <span class="s12">SQL </span>参数严格使用参数绑定或者 <span class="s12">METADATA </span>字段值限定，防止 <span class="s12">SQL </span>注入，禁止字符串拼接 <span class="s12">SQL </span>访问数据库。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">某系统签名大量被恶意修改，即是因为对于危险字符 # --没有进行转义，导致数据库更新时，where</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">后边的信息被注释掉，对全库进行更新。</p></li><li data-list-text="4."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">用户请求传入的任何参数必须做有效性验证。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">忽略参数校验可能导致：</span></p><ul id="l50"><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">page size 过大导致内存溢出</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">恶意 order by 导致数据库慢查询</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">缓存击穿</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">SSRF</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">任意重定向</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">SQL 注入，Shell 注入，反序列化注入</p></li><li data-list-text=""><p style="padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">正则输入源串拒绝服务 ReDoS</p><p style="padding-top: 5pt;padding-left: 43pt;text-indent: 0pt;line-height: 110%;text-align: left;">Java 代码用正则来验证客户端的输入，有些正则写法验证普通用户输入没有问题，但是如果攻击人员使用的是特殊构造的字符串来验证，有可能导致死循环的结果。</p></li></ul></li><li data-list-text="5."><p class="s9" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>禁止向 <span class="s12">HTML </span>页面输出未经安全过滤或未正确转义的用户数据。</p></li><li data-list-text="6."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>表单、<span class="s12">AJAX </span>提交必须执行 <span class="s12">CSRF </span>安全验证。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">CSRF(Cross-site request forgery)跨站请求伪造是一类常见编程漏洞。对于存在 CSRF 漏洞的应用/网站，攻击者可以事先构造好 URL，只要受害者用户一访问，后台便在用户不知情的情况下对数据库中用户参数进行相应修改。</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">URL 外部重定向传入的目标地址必须执行白名单过滤。</span></p></li><li data-list-text="8."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">在使用平台资源，譬如短信、邮件、电话、下单、支付，必须实现正确的防重放的机制，如数量限制、疲劳度控制、验证码校验，避免被滥刷而导致资损。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">如注册时发送验证码到手机，如果没有限制次数和频率，那么可以利用此功能骚扰到其它用户，并造成短信平台资源浪费。</span></p></li><li data-list-text="9."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">发贴、评论、发送即时消息等用户生成内容的场景必须实现防刷、文本内容违禁词过滤等风控策略。</span></p></li></ol><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark38">五、MySQL 数据库</a><a name="bookmark43">&zwnj;</a></p><p class="s16" style="padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark39">(一) 建表规约</a><a name="bookmark44">&zwnj;</a></p><ol id="l51"><li data-list-text="1."><p class="s25" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>表达是与否概念的字段，必须使用 <span style=" color: #333;">is_xxx </span>的方式命名，数据类型是 <span style=" color: #333;">unsigned tinyint</span></p><p class="s25" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">（1 表示是，0 表示否）。</p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;"><span style=" color: #967B00;">说明：</span>任何字段如果为非负数，必须是 <span style=" color: #333;">unsigned</span>。</p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span style=" color: #967B00;">注意：</span>POJO <span style=" color: #23292D;">类中的任何布尔类型的变量，都不要加 </span>is <span style=" color: #23292D;">前缀，所以，需要在&lt;</span>resultMap<span style=" color: #23292D;">&gt;设置从 </span>is_xxx <span style=" color: #23292D;">到 </span>Xxx <span style=" color: #23292D;">的映射关系。数据库表示是与否的值，使用 </span>tinyint <span style=" color: #23292D;">类型，坚持 </span>is_xxx <span style=" color: #23292D;">的命名方式是为了明确其取值含义与取值范围。</span></p><p class="s26" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;"><span style=" color: #009757;">正例：</span>表达逻辑删除的字段名 <span style=" color: #333;">is_deleted</span>，1 表示删除，0 表示未删除。</p></li><li data-list-text="2."><p class="s9" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>表名、字段名必须使用小写字母或数字<span class="s12">，</span>禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。<span class="s21">说明：</span><span class="s12">MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #009757;">正例：</span>aliyun_admin，rdc_config，level3_name<span style=" color: #FF4500;">反例：</span>AliyunAdmin，rdcConfig，level_3_name</p></li><li data-list-text="3."><p class="s3" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">表名不使用复数名词。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。</span></p></li><li data-list-text="4."><p class="s3" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。</span></p></li><li data-list-text="5."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>主键索引名为 <span class="s12">pk_</span>字段名；唯一索引名为 <span class="s12">uk</span>_字段名<span class="s12">；</span>普通索引名则为 <span class="s12">idx</span>_字段名。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">pk_ 即 primary key；uk_ 即 unique key；idx_ 即 index 的简称。</span></p></li><li data-list-text="6."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">小数类型为 decimal，禁止使用 float 和 double。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">在存储的时候，float 和 double 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数并分开存储。</span></p></li><li data-list-text="7."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>如果存储的字符串长度几乎相等，使用 <span class="s12">char </span>定长字符串类型。</p></li><li data-list-text="8."><p class="s12" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s3">【强制】</span>varchar <span class="s9">是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 </span>text<span class="s9">，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</span></p></li><li data-list-text="9."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">表必备三字段：id, create_time, update_time。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">其中 id 必为主键，类型为bigint unsigned、单表时自增、步长为 1。create_time, update_time</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: justify;">的类型均为 datetime 类型，前者现在时表示主动式创建，后者过去分词表示被动式更新。</p></li><li data-list-text="10."><p class="s4" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">表的命名最好是遵循“业务名称_表的作用”。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">alipay_task / force_project / trade_config</span></p></li><li data-list-text="11."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">库名与应用名称尽量一致。</span></p></li><li data-list-text="12."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。</span></p></li><li data-list-text="13."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：</span></p><ol id="l52"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">不是频繁修改的字段。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">不是唯一索引的字段。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 67pt;text-indent: -22pt;text-align: left;">不是 varchar 超长字段，更不能是text 字段。</p><p class="s24" style="padding-top: 1pt;padding-left: 43pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">各业务线经常冗余存储商品名称，避免查询时需要调用 IC 服务获取。</span></p></li></ol></li><li data-list-text="14."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。</span></p></li><li data-list-text="15."><p class="s5" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</span></p></li></ol><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">无符号值可以避免误存负数，且扩大了表示范围。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:60.925pt" cellspacing="0"><tr style="height:31pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD" bgcolor="#E4E4E4"><p class="s72" style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;">对象</p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD" bgcolor="#E4E4E4"><p class="s72" style="padding-top: 5pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">年龄区间</p></td><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD" bgcolor="#E4E4E4"><p class="s72" style="padding-top: 5pt;padding-left: 38pt;padding-right: 37pt;text-indent: 0pt;text-align: center;">类型</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD" bgcolor="#E4E4E4"><p class="s72" style="padding-top: 5pt;padding-left: 17pt;padding-right: 16pt;text-indent: 0pt;text-align: center;">字节</p></td><td style="width:151pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD" bgcolor="#E4E4E4"><p class="s72" style="padding-top: 5pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">表示范围</p></td></tr><tr style="height:31pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">人</p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">150 岁之内</p></td><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">tinyint unsigned</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;text-indent: 0pt;text-align: center;">1</p></td><td style="width:151pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无符号值：0 到 255</p></td></tr><tr style="height:30pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">龟</p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">数百岁</p></td><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">smallint unsigned</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;text-indent: 0pt;text-align: center;">2</p></td><td style="width:151pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无符号值：0 到 65535</p></td></tr><tr style="height:31pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">恐龙化石</p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">数千万年</p></td><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">int unsigned</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;text-indent: 0pt;text-align: center;">4</p></td><td style="width:151pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无符号值：0 到约 43 亿</p></td></tr><tr style="height:30pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">太阳</p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">约 50 亿年</p></td><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">bigint unsigned</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;text-indent: 0pt;text-align: center;">8</p></td><td style="width:151pt;border-top-style:solid;border-top-width:1pt;border-top-color:#DDDDDD;border-left-style:solid;border-left-width:1pt;border-left-color:#DDDDDD;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#DDDDDD;border-right-style:solid;border-right-width:1pt;border-right-color:#DDDDDD"><p class="s13" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无符号值：0 到约 10 的 19 次方</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark40">(二) 索引规约</a><a name="bookmark45">&zwnj;</a></p><ol id="l53"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</span></p></li><li data-list-text="2."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>超过三个表禁止 <span class="s12">join</span>。需要 <span class="s12">join </span>的字段，数据类型保持绝对一致<span class="s12">；</span>多表关联查询时，保证被关联的字段需要有索引。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">即使双表 join 也要注意表索引、SQL 性能。</span></p></li><li data-list-text="3."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在 <span class="s12">varchar </span>字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度。</p><p class="s27" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90%</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: justify;">以上，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度来确定。</p></li><li data-list-text="4."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。</span></p></li><li data-list-text="5."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">如果有 order by 的场景，请注意利用索引的有序性。order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">正例：<span style=" color: #333;">where a=? and b=? order by c; 索引：a_b_c</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">反例：<span style=" color: #333;">索引如果存在范围查询，那么索引有序性无法利用，如：WHERE a&gt;10 ORDER BY b; 索引 a_b 无法排序。</span></p></li><li data-list-text="6."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">利用覆盖索引来进行查询操作，避免回表。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明：<span style=" color: #333;">如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">正例：<span style=" color: #333;">能够建立索引的种类分为主键索引、唯一索引、普通索引三种，而覆盖索引只是一种查询的一种效果，用 explain 的结果，extra 列会出现：using index。</span></p></li><li data-list-text="7."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">利用延迟关联或者子查询优化超多分页场景。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回 N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL改写。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">正例：<span style=" color: #333;">先快速定位需要获取的 id 段，然后再关联：</span></p><p class="s43" style="padding-top: 2pt;padding-left: 69pt;text-indent: 0pt;text-align: justify;">SELECT t1.* FROM 表 1 as t1, (select id from 表 1 where 条件 LIMIT 100000,20 ) as t2 where t1.id=t2.id</p></li><li data-list-text="8."><p class="s12" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span class="s4">【推荐】</span>SQL <span class="s9">性能优化的目标：至少要达到 </span>range <span class="s9">级别，要求是 </span>ref <span class="s9">级别，如果可以是 </span>consts</p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">最好。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：</p><ol id="l54"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;line-height: 110%;text-align: left;">ref 指的是使用普通的索引（normal index）。 3） range 对索引进行范围检索。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：<span style=" color: #333;">explain 表的结果，type=index，索引物理文件全扫描，速度非常慢，这个 index 级别比较 range</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">还低，与全表扫描是小巫见大巫。</p></li></ol></li><li data-list-text="9."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">建组合索引的时候，区分度最高的在最左边。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">如果 where a=? and b=?，a 列的几乎接近于唯一值，那么只需要单建 idx_a 索引即可。</span></p><p class="s27" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如：where c&gt;? and d=?</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">那么即使 c 的区分度更高，也必须把d 放在索引的最前列，即建立组合索引 idx_d_c。</p></li><li data-list-text="10."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">防止因字段类型不同造成的隐式转换，导致索引失效。</span></p></li><li data-list-text="11."><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">创建索引时避免有如下极端误解：</span></p><ol id="l55"><li data-list-text="1）"><p style="padding-left: 69pt;text-indent: -22pt;text-align: left;">索引宁滥勿缺。认为一个查询就需要建一个索引。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">吝啬索引的创建。认为索引会消耗空间、严重拖慢记录的更新以及行的新增速度。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;">抵制惟一索引。认为惟一索引一律需要在应用层通过“先查后插”方式解决。</p></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark41">(三) SQL 语句</a><a name="bookmark46">&zwnj;</a></p><ol id="l56"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">不要使用 count(列名)或 count(常量)来替代 count(*)，count(*)是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">count(distinct col) 计算该列除NULL 之外的不重复行数，注意 count(distinct col1, col2) 如果其中一列全为 NULL，那么即使另一列有不同的值，也返回为 0。</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">当某一列的值全是 NULL 时，count(col)的返回结果为 0，但 sum(col)的返回结果为 NULL，因此使用 sum()时需注意 NPE 问题。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">可以使用如下方式来避免 sum 的 NPE 问题：SELECT IFNULL(SUM(column), 0) FROM table;</span></p></li><li data-list-text="4."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>使用 <span class="s62">ISNULL()</span>来判断是否为 <span class="s62">NULL </span>值。</p><p class="s35" style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #967B00;">说明：</span>NULL <span style=" color: #333;">与任何值的直接比较都为 </span>NULL<span style=" color: #00F;">。</span></p><ol id="l57"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;"><span style=" color: #00F;">NULL&lt;&gt;NULL </span>的返回结果是 <span style=" color: #000;">NULL</span>，而不是 <span style=" color: #C6244E;">false</span>。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: left;"><span style=" color: #00F;">NULL=NULL </span>的返回结果是 <span style=" color: #000;">NULL</span>，而不是 <span style=" color: #C6244E;">true</span>。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 69pt;text-indent: -22pt;text-align: justify;"><span style=" color: #00F;">NULL&lt;&gt;1 </span>的返回结果是 <span style=" color: #000;">NULL</span>，而不是 <span style=" color: #C6244E;">true</span>。</p><p class="s18" style="padding-top: 9pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">反例：<span style=" color: #333;">在 SQL 语句中，如果在 null 前换行，影响可读性。select * from table where column1 is null and column3 is not null; 而`ISNULL(column)`是一个整体，简洁易懂。从性能数据上分析，`ISNULL(column)`执行效率更快一些。</span></p></li></ol></li><li data-list-text="5."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>代码中写分页查询逻辑时，若 <span class="s12">count </span>为 0 应直接返回，避免执行后面的分页语句。</p></li><li data-list-text="6."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">不得使用外键与级联，一切外键概念必须在应用层解决。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">（概念解释）学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。</span></p></li><li data-list-text="8."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>数据订正（特别是删除或修改记录操作）时，要先 <span class="s12">select</span>，避免出现误删除，确认无误才能执行更新语句。</p></li><li data-list-text="9."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">对于数据库中表记录的查询和变更，只要涉及多个表，都需要在列名前加表的别名（或表名）进行限定。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">对多表进行查询记录、更新记录、删除记录时，如果对操作列没有限定表的别名（或表名），并且操作列在多个表中存在时，就会抛异常。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：<span style=" color: #333;">select t1.name from table_first as t1 , table_second as t2 where t1.id=t2.id;</span></p><p class="s18" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">反例：<span style=" color: #333;">在某业务中，由于多表关联查询语句没有加表的别名（或表名）的限制，正常运行两年后，最近在某个表中增加一个同名字段，在预发布环境做数据库变更后，线上查询语句出现出 1052 异常：Column &#39;name&#39; in field list is ambiguous。</span></p></li><li data-list-text="10."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">SQL 语句中表的别名前加 as，并且以 t1、t2、t3、...的顺序依次命名。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明：<span style=" color: #333;">1）别名可以是表的简称，或者是依照表在 SQL 语句中出现的顺序，以 t1、t2、t3 的方式命名。2）别名前加 as 使别名更容易识别。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: justify;">正例：<span style=" color: #333;">select t1.name from table_first as t1, table_second as t2 where t1.id=t2.id;</span></p></li><li data-list-text="11."><p class="s12" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s4">【推荐】</span>in <span class="s9">操作能避免则避免，若实在避免不了，需要仔细评估 </span>in <span class="s9">后边的集合元素数量，控制在 1000 个之内。</span></p></li><li data-list-text="12."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #76923B;">【参考】</span>因国际化需要，所有的字符存储与表示，均采用 <span class="s12">utf</span>8 字符集，那么字符计数方法需要注意。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：</p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">SELECT LENGTH(&quot;轻松工作&quot;)； 返回为 12</p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">SELECT CHARACTER_LENGTH(&quot;轻松工作&quot;)； 返回为 4</p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">如果需要存储表情，那么选择 utf8mb4 来进行存储，注意它与 utf8 编码的区别。</p></li><li data-list-text="13."><p class="s12" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span class="s5">【参考】</span>TRUNCATE TABLE <span class="s9">比 </span>DELETE <span class="s9">速度快，且使用的系统和事务日志资源少，但 </span>TRUNCATE</p></li></ol><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">无事务且不触发 <span class="s12">trigger</span>，有可能造成事故，故不建议在开发代码中使用此语句。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark42">(四) ORM 映射</a><a name="bookmark47">&zwnj;</a></p><ol id="l58"><li data-list-text="1."><p class="s3" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: justify;">【强制】<span style=" color: #333;">在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。</span><span class="s21">说明：</span><span class="s12">1）增加查询分析器解析成本。2）增减字段容易与 resultMap 配置不一致。3）无用字段增加网络消耗，尤其是 text 类型的字段。</span></p></li><li data-list-text="2."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【强制】<span style=" color: #333;">POJO 类的布尔属性不能加 is，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">参见定义 POJO 类以及数据库字段定义规定，在 sql.xml 增加映射，是必须的。</span></p></li><li data-list-text="3."><p class="s3" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">不要用 resultClass 当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义&lt;resultMap&gt;；反过来，每一个表也必然有一个&lt;resultMap&gt;与之对应。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">配置映射关系，使字段与 DO 类解耦，方便维护。</span></p></li><li data-list-text="4."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>sql.<span class="s12">xml </span>配置参数使用：#{}，#<span class="s12">param</span># 不要使用${} 此种方式容易出现 <span class="s12">SQL </span>注入。</p></li><li data-list-text="5."><p class="s12" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: left;"><span class="s3">【强制】</span>iBATIS <span class="s9">自带的 </span>queryForList(String statementName<span class="s9">,</span>int start<span class="s9">,</span>int size)<span class="s9">不推荐使用。 </span><span style=" color: #967B00;">说明：</span>其实现方式是在数据库取到 statementName 对应的 SQL 语句的所有记录，再通过 subList 取 start,size 的子集合。</p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s30" style="padding-top: 2pt;padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">Map</span>&lt;<span style=" color: #DD4968;">String</span>, <span style=" color: #DD4968;">Object</span>&gt; <span style=" color: #000;">map </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">HashMap</span><span style=" color: #A67E58;">&lt;&gt;</span>(16); <span style=" color: #000;">map</span>.<span style=" color: #DD4968;">put</span>(<span style=" color: #50A04F;">&quot;start&quot;</span>, <span style=" color: #000;">start</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">map</span>.<span style=" color: #DD4968;">put</span>(<span style=" color: #50A04F;">&quot;size&quot;</span>, <span style=" color: #000;">size</span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="6."><p class="s9" style="padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>不允许直接拿 <span class="s12">HashMap </span>与 <span class="s12">Hashtable </span>作为查询结果集的输出。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">反例：<span style=" color: #333;">某同学为避免写一个&lt;resultMap&gt;xxx&lt;/resultMap&gt;，直接使用 HashTable 来接收数据库返回结果，结果出现日常是把 bigint 转成 Long 值，而线上由于数据库版本不一样，解析成 BigInteger，导致线上问题。</span></p></li><li data-list-text="7."><p class="s3" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">更新数据表记录时，必须同时更新记录对应的 update_time 字段值为当前时间。</span></p></li><li data-list-text="8."><p class="s4" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">不要写一个大而全的数据更新接口。传入为 POJO 类，不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3; 这是不对的。执行 SQL 时，不要更新无改动的字段，一是易出错；二是效率低；三是增加 binlog 存储。</span></p></li><li data-list-text="9."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">@Transactional 事务不要滥用。事务会影响数据库的 QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。</span></p></li><li data-list-text="10."><p class="s5" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【参考】<span style=" color: #333;">&lt;isEqual&gt;中的 compareValue 是与属性值对比的常量，一般是数字，表示相等时带上此条件；&lt;isNotEmpty&gt;表示不为空且不为 null 时执行；&lt;isNotNull&gt;表示不为 null 值时执行。</span></p></li></ol><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark48">六、工程结构</a><a name="bookmark52">&zwnj;</a></p><p class="s16" style="padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark49">(一) 应用分层</a><a name="bookmark53">&zwnj;</a></p><ol id="l59"><li data-list-text="1."><p class="s4" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">根据业务架构实践，结合业界分层规范与流行技术框架分析，推荐分层结构如图所示，默认上层依赖于下层，箭头关系表示可直接依赖，如：开放 API 层可以依赖于 Web 层</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">（Controller 层），也可以直接依赖于 Service 层，依此类推：</p><p style="padding-left: 141pt;text-indent: 0pt;text-align: left;"><span><img width="336" height="308" alt="image" src="Image_002.jpg"/></span></p><ul id="l60"><li data-list-text=""><p style="padding-top: 6pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">开放 API 层：可直接封装 Service 接口暴露成 RPC 接口；通过 Web 封装成http 接口；网关控制层等。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 63pt;text-indent: -18pt;line-height: 110%;text-align: left;">终端显示层：各个端的模板渲染并执行显示的层。当前主要是 velocity 渲染，JS 渲染，JSP 渲染，移动端展示等。</p></li><li data-list-text=""><p style="padding-top: 3pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">Web 层：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">Service 层：相对具体的业务逻辑服务层。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">Manager 层：通用业务处理层，它有如下特征：</p><ol id="l61"><li data-list-text="1）"><p style="padding-top: 1pt;padding-left: 101pt;text-indent: -22pt;text-align: left;">对第三方平台封装的层，预处理返回结果及转化异常信息，适配上层接口。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 101pt;text-indent: -22pt;text-align: left;">对 Service 层通用能力的下沉，如缓存方案、中间件通用处理。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 101pt;text-indent: -22pt;text-align: left;">与 DAO 层交互，对多个 DAO 的组合复用。</p></li></ol></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">DAO 层：数据访问层，与底层 MySQL、Oracle、Hbase、OB 等进行数据交互。</p></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 63pt;text-indent: -18pt;line-height: 109%;text-align: left;">第三方服务：包括其它部门 RPC 服务接口，基础平台，其它公司的 HTTP 接口，如淘宝开放平台、支付宝付款服务、高德地图服务等。</p></li><li data-list-text=""><p style="padding-top: 3pt;padding-left: 63pt;text-indent: -18pt;text-align: left;">外部数据接口：外部（应用）数据存储服务提供的接口，多见于数据迁移场景中。</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li><li data-list-text="2."><p class="s12" style="padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s5">【参考】</span>（<span class="s9">分层异常处理规约</span>）<span class="s9">在 </span>DAO <span class="s9">层，产生的异常类型有很多，无法用细粒度的异常进 行 </span>catch<span class="s9">，使用 </span>catch(Exception e)<span class="s9">方式，并 </span>throw new DAOException(e)<span class="s9">，不需要打印日志，因为日志在 </span>Manager<span class="s9">/</span>Service <span class="s9">层一定需要捕获并打印到日志文件中去，如果同台服务器再打日志，</span></p><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">浪费性能和存储。在 <span class="s12">Service </span>层出现异常时，必须记录出错日志到磁盘，尽可能带上参数信息，相当于保护案发现场。<span class="s12">Manager </span>层与 <span class="s12">Service </span>同机部署，日志方式与 <span class="s12">DAO </span>层处理一致，如果是单独部署，则采用与 <span class="s12">Service </span>一致的处理方式。<span class="s12">Web </span>层绝不应该继续往上抛异常，因为已经处于顶层，如果意识到这个异常将导致页面无法正常渲染，那么就应该直接跳转到友好错误页面，尽量加上友好的错误提示信息。开放接口层要将异常处理成错误码和错误信息方式返回。</p></li><li data-list-text="3."><p class="s5" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">分层领域模型规约：</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="22" height="24" alt="image" src="Image_003.png"/></span></p><ul id="l62"><li data-list-text=""><p style="padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;text-align: left;">DO（Data Object）：此对象与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</p><p style="text-indent: 0pt;line-height: 18pt;text-align: left;">DTO</p><p style="text-indent: 0pt;text-align: left;"/></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 83pt;text-indent: -40pt;text-align: left;">（Data Transfer Object）：数据传输对象，Service 或 Manager 向外传输的对象。</p><p style="text-indent: 0pt;line-height: 18pt;text-align: left;">BO</p><p style="text-indent: 0pt;text-align: left;"/></li><li data-list-text=""><p style="padding-top: 5pt;padding-left: 75pt;text-indent: -33pt;text-align: left;">（Business Object）：业务对象，可以由 Service 层输出的封装业务逻辑的对象。</p><p style="text-indent: 0pt;line-height: 18pt;text-align: left;">Query</p><p style="text-indent: 0pt;text-align: left;"/></li><li data-list-text=""><p class="s73" style="padding-top: 5pt;padding-left: 60pt;text-indent: -18pt;line-height: 110%;text-align: left;">	<span class="p">：数据查询对象，各层接收上层的查询请求。注意超过 2 个参数的查询封装，禁止使用 Map 类来传输。</span></p></li><li data-list-text=""><p style="padding-top: 3pt;padding-left: 60pt;text-indent: -18pt;text-align: left;"><span class="s74" style=" background-color: #D9D9D9;">VO</span><span class="p">（View Object）：显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</span></p></li></ul></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark50">(二) 二方库依赖</a><a name="bookmark54">&zwnj;</a></p><ol id="l63"><li data-list-text="1."><p class="s9" style="padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>定义 <span class="s12">GAV </span>遵从以下规则：</p><ol id="l64"><li data-list-text="1）"><p class="s42" style="padding-left: 69pt;text-indent: -22pt;text-align: left;">G<span style=" color: #333;">roupID 格式：com.{公司/BU }.业务线 [.子业务线]，最多 4 级。</span></p><p style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;line-height: 110%;text-align: left;"><span style=" color: #967B00;">说明：</span>{公司/BU} 例如：alibaba/taobao/tmall/aliexpress 等 BU 一级；子业务线可选。<span style=" color: #009757;">正例：</span>com.taobao.jstorm <span style=" color: #000;">或 </span>com.alibaba.dubbo.register</p></li><li data-list-text="2）"><p style="padding-left: 53pt;text-indent: -5pt;line-height: 110%;text-align: left;"><span style=" color: #00F;">A</span>rtifactID 格式：产品线名-模块名。语义不重复不遗漏，先到中央仓库去查证一下。<span style=" color: #009757;">正例：</span>dubbo-client / fastjson-api / jstorm-tool</p></li><li data-list-text="3）"><p class="s42" style="padding-left: 69pt;text-indent: -22pt;line-height: 19pt;text-align: left;">V<span style=" color: #333;">ersion：详细规定参考下方。</span></p></li></ol></li><li data-list-text="2."><p class="s3" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">二方库版本号命名方式：主版本号.次版本号.修订号</span></p><ol id="l65"><li data-list-text="1）"><p style="padding-left: 64pt;text-indent: -16pt;text-align: left;">主版本号：产品方向改变，或者大规模 API 不兼容，或者架构不兼容升级。</p></li><li data-list-text="2）"><p style="padding-top: 1pt;padding-left: 67pt;text-indent: -19pt;text-align: left;">次版本号：保持相对兼容性，增加主要功能特性，影响范围极小的 API 不兼容修改。</p></li><li data-list-text="3）"><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 5pt;line-height: 110%;text-align: left;">修订号：保持完全兼容性，修复 BUG、新增次要功能特性等。<span style=" color: #967B00;">说明：</span>注意起始版本号必须为：<span style=" color: #00F;">1.0.0</span>，而不是 0.0.1。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：<span style=" color: #333;">仓库内某二方库版本号从 1.0.0.0 开始，一直默默“升级”成 1.0.0.64，完全失去版本的语义信息。</span></p></li></ol></li><li data-list-text="3."><p class="s9" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>线上应用不要依赖 <span class="s12">SNAPSHOT </span>版本<span class="s12">（</span>安全包除外<span class="s12">）</span>；正式发布的类库必须先去中央仓库进行查证，使 RELEASE 版本号有延续性，且版本号不允许覆盖升级。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">不依赖 SNAPSHOT 版本是保证应用发布的幂等性。另外，也可以加快编译时的打包构建。</span></p></li><li data-list-text="4."><p class="s25" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>二方库的新增或升级，保持除功能点之外的其它 <span class="s50">jar </span>包仲裁结果不变。如果有改变，必须明确评估和验证。</p><p class="s26" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: left;"><span style=" color: #967B00;">说明：</span>在升级时，进行 <span class="s52">dependency:resolve </span>前后信息比对，如果仲裁结果完全不一致，那么通过</p><p class="s52" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">dependency:tree <span class="s26">命令，找出差异点，进行</span>&lt;exclude&gt;<span class="s26">排除 </span>jar <span class="s26">包。</span></p></li><li data-list-text="5."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>二方库里可以定义枚举类型，参数可以使用枚举类型，但是接口返回值不允许使用枚举类型或者包含枚举类型的 <span class="s12">POJO </span>对象。</p></li><li data-list-text="6."><p class="s3" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【强制】<span style=" color: #333;">依赖于一个二方库群时，必须定义一个统一的版本变量，避免版本号不一致。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">依赖 springframework-core,-context,-beans，它们都是同一个版本，可以定义一个变量来保存版本：${spring.version}，定义依赖的时候，引用该版本。</span></p></li><li data-list-text="7."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>禁止在子项目的 <span class="s12">pom </span>依赖中出现相同的 <span class="s12">GroupId</span>，相同的 <span class="s12">ArtifactId</span>，但是不同的 <span class="s12">Version</span>。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">在本地调试时会使用各子项目指定的版本号，但是合并成一个 war，只能有一个版本号出现在最后的 lib 目录中。曾经出现过线下调试是正确的，发布到线上却出故障的先例。</span></p></li><li data-list-text="8."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #333;">底层基础技术框架、核心数据管理平台、或近硬件端系统谨慎引入第三方实现。</span></p></li><li data-list-text="9."><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>所有 <span class="s12">pom </span>文件中的依赖声明放在&lt;<span class="s12">dependencies</span>&gt;语句块中，所有版本仲裁放在</p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">&lt;<span class="s12">dependencyManagement</span>&gt;语句块中。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: justify;">说明：<span style=" color: #333;">&lt;dependencyManagement&gt;里只是声明版本，并不实现引入，因此子项目需要显式的声明依赖， version 和 scope 都读取自父 pom。而&lt;dependencies&gt;所有声明在主 pom 的&lt;dependencies&gt;里的依赖都会自动引入，并默认被所有的子项目继承。</span></p></li><li data-list-text="10."><p class="s4" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">二方库不要有配置项，最低限度不要再增加配置项。</span></p></li><li data-list-text="11."><p class="s4" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #333;">不要使用不稳定的工具包或者 Utils 类。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">不稳定指的是提供方无法做到向下兼容，在编译阶段正常，但在运行时产生异常，因此，尽量使用业界稳定的二方工具包。</span></p></li><li data-list-text="12."><p class="s5" style="padding-top: 5pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #333;">为避免应用二方库的依赖冲突问题，二方库发布者应当遵循以下原则：</span></p><ol id="l66"><li data-list-text="1）"><h2 style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">精简可控原则<span class="p">。移除一切不必要的 API 和依赖，只包含 Service API、必要的领域模型对象、Utils 类、常量、枚举等。如果依赖其它二方库，尽量是 provided 引入，让二方库使用者去依赖具体版本号；无 log具体实现，只依赖日志框架。</span></h2></li><li data-list-text="2）"><h2 style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">稳定可追溯原则<span class="p">。每个版本的变化应该被记录，二方库由谁维护，源码在哪里，都需要能方便查到。除非用户主动升级版本，否则公共二方库的行为不应该发生变化。</span></h2></li></ol></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark51">(三) 服务器</a><a name="bookmark55">&zwnj;</a></p><ol id="l67"><li data-list-text="1."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>高并发服务器建议调小 <span class="s12">TCP </span>协议的 <span class="s12">time</span>_<span class="s12">wait </span>超时时间。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">操作系统默认 240 秒后，才会关闭处于 time_wait 状态的连接，在高并发访问下，服务器端会因为处于 time_wait 的连接数太多，可能无法建立新的连接，所以需要在服务器上调小此等待值。</span></p><p class="s24" style="padding-top: 4pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">在 linux 服务器上请通过变更/etc/sysctl.conf 文件去修改该缺省值（秒）：</span></p><p style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">net.ipv4.tcp_fin_timeout = 30</p></li><li data-list-text="2."><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>调大服务器所支持的最大文件句柄数<span class="s12">（File Descriptor</span>，简写为 <span class="s12">fd）</span>。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">主流操作系统的设计是将 TCP/UDP 连接采用与文件一样的方式去管理，即一个连接对应于一个 fd。主流的linux 服务器默认所支持最大fd 数量为1024，当并发连接数很大时很容易因为fd 不足而出现“open too many files”错误，导致新的连接无法建立。建议将 linux 服务器所支持的最大句柄数调高数倍（与服务器的内存数量相关）。</span></p></li><li data-list-text="3."><p class="s25" style="padding-left: 42pt;text-indent: -18pt;line-height: 20pt;text-align: left;"><span style=" color: #FFC000;">【推荐】</span>给 <span class="s50">JVM </span>环境参数设置<span class="s50">-XX:+HeapDumpOnOutOfMemoryError </span>参数，让 <span class="s50">JVM </span>碰到 <span class="s50">OOM</span></p><p class="s25" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">场景时输出 <span class="s50">dump </span>信息。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span class="s52">OOM </span><span style=" color: #23292D;">的发生是有概率的，甚至相隔数月才出现一例，出错时的堆内信息对解决问题非常有帮助。</span></p></li><li data-list-text="4."><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #FFC000;">【推荐】</span>在线上生产环境，<span class="s12">JVM </span>的 <span class="s12">Xms </span>和 <span class="s12">Xmx </span>设置一样大小的内存容量，避免在 <span class="s12">GC </span>后调整堆大小带来的压力。</p></li><li data-list-text="5."><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #76923B;">【参考】</span>服务器内部重定向必须使用 <span class="s12">forward；</span>外部重定向地址必须使用 <span class="s12">URL </span>Broker 生成，否则因线上采用 HTTPS 协议而导致浏览器提示“不安全“。此外，还会带来 <span class="s12">URL </span>维护不一致的问题。</p></li></ol><p class="s15" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark56">七、设计规约</a><a name="bookmark57">&zwnj;</a></p><ol id="l68"><li data-list-text="1."><p class="s17" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span style=" color: #C00000;">【强制】</span>存储方案<span style=" color: #23292D;">和</span>底层数据结构<span style=" color: #23292D;">的设计获得评审一致通过，并沉淀成为文档。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #23292D;">有缺陷的底层数据结构容易导致系统风险上升，可扩展性下降，重构成本也会因历史数据迁移和系统平滑过渡而陡然增加，所以，存储方案和数据结构需要认真地进行设计和评审，生产环境提交执行后，需要进行 double check。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">正例：<span style=" color: #23292D;">评审内容包括存储介质选型、表结构设计能否满足技术方案、存取性能和存储空间能否满足业务发展、表或字</span><span style=" color: #333;">段之间的辩证关系、字段名称、字段类型、索引等；数据结构变更（如在原有表中新增字段）也需要进行评审通过后上线。</span></p></li><li data-list-text="2."><p class="s25" style="padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>在需求分析阶段，如果与系统交互的 User 超过<span style=" color: #00F;">一类</span>并且相关的 User Case 超过 <span style=" color: #00F;">5 个</span>，使用用例图来表达更加清晰的结构化需求。</p></li><li data-list-text="3."><p class="s25" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>如果某个业务对象的状态超过 <span style=" color: #00F;">3 个</span>，使用状态图来表达并且明确状态变化的各个触发条件。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #23292D;">状态图的核心是对象状态，首先明确对象有多少种状态，然后明确两两状态之间是否存在直接转换关系，再明确触发状态转换的条件是什么。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例：<span style=" color: #23292D;">淘宝订单状态有已下单、待付款、已付款、待发货、已发货、已收货等。比如已下单与已收货这两种状态之间是不可能有直接转换关系的。</span></p></li><li data-list-text="4."><p class="s25" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>如果系统中某个功能的调用链路上的涉及对象超过 <span style=" color: #00F;">3 个</span>，使用时序图来表达并且明确各调用环节的输入与输出。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">时序图反映了一系列对象间的交互与协作关系，清晰立体地反映系统的调用纵深链路。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="5."><p class="s25" style="padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>如果系统中模型类超过 <span style=" color: #00F;">5 个</span>，并且存在复杂的依赖关系，使用类图来表达并且明确类之间的关系。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">类图像建筑领域的施工图，如果搭平房，可能不需要，但如果建造蚂蚁 Z 空间大楼，肯定需要详细的施工图。</span></p></li><li data-list-text="6."><p class="s25" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span style=" color: #C00000;">【强制】</span>如果系统中超过 <span style=" color: #00F;">2 个</span>对象之间存在协作关系，并且需要表示复杂的处理流程，使用活动图来表示。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">活动图是流程图的扩展，增加了能够体现协作关系的对象泳道，支持表示并发等。</span></p></li><li data-list-text="7."><p class="s4" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">系统架构设计时明确以下目标：</span></p><ul id="l69"><li data-list-text=""><p class="s35" style="padding-top: 4pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">确定系统边界。确定系统在技术层面上的做与不做。</p></li><li data-list-text=""><p class="s35" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">确定系统内模块之间的关系。确定模块之间的依赖关系及模块的宏观输入与输出。</p></li><li data-list-text=""><p class="s35" style="padding-top: 5pt;padding-left: 78pt;text-indent: -18pt;line-height: 110%;text-align: left;">确定指导后续设计与演化的原则。使后续的子系统或模块设计在一个既定的框架内和技术方向上继续演化。</p></li><li data-list-text=""><p class="s35" style="padding-top: 4pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">确定非功能性需求。非功能性需求是指安全性、可用性、可扩展性等。</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li><li data-list-text="8."><p class="s4" style="padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: justify;">【推荐】<span style=" color: #23292D;">需求分析与系统设计在考虑主干功能的同时，需要充分评估异常流程与业务边界。</span><span class="s23">反例：</span><span class="s48">用户在淘宝付款过程中，银行扣款成功，发送给用户扣款成功短信，但是支付宝入款时由于断网演练产生异常，淘宝订单页面依然显示未付款，导致用户投诉。</span></p></li><li data-list-text="9."><p class="s4" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #23292D;">类在设计与实现时要符合单一原则。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">单一原则最易理解却是最难实现的一条规则，随着系统演进，很多时候，忘记了类设计的初衷。</span></p></li><li data-list-text="10."><p class="s4" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">谨慎使用继承的方式来进行扩展，优先使用聚合/组合的方式来实现。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">不得已使用继承的话，必须符合里氏代换原则，此原则说父类能够出现的地方子类一定能够出现，比如，“把钱交出来”，钱的子类美元、欧元、人民币等都可以出现。</span></p></li><li data-list-text="11."><p class="s4" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">系统设计阶段，根据依赖倒置原则，尽量依赖抽象类与接口，有利于扩展与维护。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">低层次模块依赖于高层次模块的抽象，方便系统间的解耦。</span></p></li><li data-list-text="12."><p class="s4" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【推荐】<span style=" color: #23292D;">系统设计阶段，注意对扩展开放，对修改闭合。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">极端情况下，交付的代码是不可修改的，同一业务域内的需求变化，通过模块或类的扩展来实现。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="13."><p class="s12" style="padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s4">【推荐】</span><span class="s25">系统设计阶段，共性业务或公共行为抽取出来公共模块、公共配置、公共类、公共方法等，在系统中不出现重复代码的情况，即 </span>DRY <span class="s75">原则（</span>Don<span class="s75">&#39;</span>t Repeat Yourself）<span class="s25">。</span></p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span style=" color: #967B00;">说明：</span><span style=" color: #23292D;">随着代码的重复次数不断增加，维护成本指数级上升。</span>随意复制和粘贴代码，必然会导致代码的重复，在维护代码时，需要修改所有的副本，容易遗漏。必要时抽取共性方法，或者抽象公共类，甚至是组件化。<span style=" color: #009757;">正例：</span>一个类中有多个 public 方法，都需要进行数行相同的参数校验操作，这个时候请抽取：</p><p style="padding-left: 79pt;text-indent: 0pt;line-height: 16pt;text-align: justify;">private boolean checkParam(DTO dto) {...}</p></li><li data-list-text="14."><p class="s4" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">【推荐】<span style=" color: #23292D;">避免如下误解：</span><span style=" color: #000;">敏捷开发 = 讲故事 + 编码 + 发布。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">敏捷开发是快速交付迭代可用的系统，省略多余的设计方案，摒弃传统的审批流程，但核心关键点上的必要设计和文档沉淀是需要的。</span></p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">反例：<span style=" color: #23292D;">某团队为了业务快速发展，敏捷成了产品经理催进度的借口，系统中均是勉强能运行但像面条一样的代码，可维护性和可扩展性极差，一年之后，不得不进行大规模重构，得不偿失。</span></p></li><li data-list-text="15."><p class="s5" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">设计文档的作用是明确需求、理顺逻辑、后期维护，次要目的用于指导编码。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">避免为了设计而设计，系统设计文档有助于后期的系统维护和重构，所以设计结果需要进行分类归档保存。</span></p></li><li data-list-text="16."><p class="s5" style="padding-top: 10pt;padding-left: 48pt;text-indent: -24pt;text-align: left;">【参考】<span style=" color: #23292D;">可扩展性的本质是找到系统的变化点，并隔离变化点。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #23292D;">世间众多设计模式其实就是一种设计模式即隔离变化点的模式。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #23292D;">极致扩展性的标志，就是需求的新增，不会在原有代码交付物上进行任何形式的修改。</span></p></li><li data-list-text="17."><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">设计的本质就是识别和表达系统难点。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #23292D;">识别和表达完全是两回事，很多人错误地认为识别到系统难点在哪里，表达只是自然而然的事情，但是大家在设计评审中经常出现语焉不详，甚至是词不达意的情况。准确地表达系统难点需要具备如下能力： 表达规则和表达工具的熟练性。抽象思维和总结能力的局限性。基础知识体系的完备性。深入浅出的生动表达力。</span></p></li><li data-list-text="18."><p class="s5" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">代码即文档的观点是错误的，清晰的代码只是文档的某个片断，而不是全部。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #23292D;">代码的深度调用，模块层面上的依赖关系网，业务场景逻辑，非功能性需求等问题是需要相应的文档来完整地呈现的。</span></p></li><li data-list-text="19."><p class="s5" style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">【参考】<span style=" color: #23292D;">在做无障碍产品设计时，需要考虑到：</span></p><ul id="l70"><li data-list-text=""><p class="s35" style="padding-top: 7pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">所有可交互的控件元素必须能被 tab 键聚焦，并且焦点顺序需符合自然操作逻辑。</p></li><li data-list-text=""><p class="s35" style="padding-top: 9pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">用于登录校验和请求拦截的验证码均需提供图形验证以外的其它方式。</p></li><li data-list-text=""><p class="s35" style="padding-top: 9pt;padding-left: 78pt;text-indent: -18pt;text-align: left;">自定义的控件类型需明确交互方式。</p></li></ul></li></ol><p class="s26" style="padding-top: 9pt;padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;"><span style=" color: #009757;">正例：</span>用户登<span style=" color: #000;">录</span>场景中，输入框的按钮都需要考虑 tab 键聚焦，符合自然逻辑的操作顺序如下，“输入用户名，输入密码，输入验证码，点击登录”，其中验证码实现语音验证方式。如果有自定义标签实现的控件设置控件类型可使用 role 属性。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark58"><span class="s76" style=" background-color: #FBFBFB;">附 1：版本历史</span></a><a name="bookmark59">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:12.275pt" cellspacing="0"><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">版本号</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">版本名</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">发布日期</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 168pt;padding-right: 166pt;text-indent: 0pt;text-align: center;">备注</p></td></tr><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 19pt;padding-right: 18pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2016.12.07</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">试读版本首次对外发布</p></td></tr><tr style="height:30pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">1.0.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">正式版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.02.09</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">阿里巴巴集团正式对外发布</p></td></tr><tr style="height:94pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.0.1</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.02.13</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;padding-right: 225pt;text-indent: 0pt;line-height: 128%;text-align: left;">1）修正 String[]的前后矛盾。 2）vm 修正成 velocity。</p><p class="s13" style="padding-left: 8pt;text-indent: 0pt;line-height: 16pt;text-align: left;">3）修正 countdown 描述错误。</p></td></tr><tr style="height:136pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.0.2</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.02.20</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l71"><li data-list-text="1）"><p class="s13" style="padding-top: 6pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">去除文底水印。</p></li><li data-list-text="2）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">数据类型中引用太阳系年龄问题。</p></li><li data-list-text="3）"><p class="s13" style="padding-top: 4pt;padding-left: 8pt;padding-right: 178pt;text-indent: 0pt;line-height: 127%;text-align: left;">修正关于异常和方法签名的部分描述。 4）修正 final 描述。</p></li></ol><p class="s13" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">5）去除 Comparator 部分描述。</p></td></tr><tr style="height:115pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.1.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.02.27</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l72"><li data-list-text="1）"><p class="s13" style="padding-top: 6pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">增加前言。</p></li><li data-list-text="2）"><p class="s13" style="padding-top: 4pt;padding-left: 8pt;padding-right: 197pt;text-indent: 0pt;line-height: 127%;text-align: left;">增加&lt;? extends T&gt;描述和说明。 3）增加版本历史。</p></li></ol><p class="s13" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">4）增加专有名词解释。</p></td></tr><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">1.1.1</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">--</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.03.31</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">修正页码总数和部分示例。</p></td></tr><tr style="height:158pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.2.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">完美版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.05.20</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l73"><li data-list-text="1）"><p class="s13" style="padding-top: 6pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">根据云栖社区的“聚能聊”活动反馈，对手册的页码、排版、描述进行修正。</p></li><li data-list-text="2）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">增加 final 的适用场景描述。</p></li><li data-list-text="3）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">增加关于锁的粒度的说明。</p></li><li data-list-text="4）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">增加“指定集合大小”的详细说明以及正反例。</p></li><li data-list-text="5）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">增加卫语句的示例代码。</p></li><li data-list-text="6）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">明确数据库表示删除概念的字段名为 is_deleted</p></li></ol></td></tr><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">1.3.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">终极版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.09.25</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;"><a href="https://github.com/alibaba/p3c" style=" color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">增加单元测试规约，阿里开源的 IDE 代码规约检测插件：</a><a href="https://github.com/alibaba/p3c" class="s78" target="_blank">点此下载</a></p></td></tr><tr style="height:30pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">1.3.1</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">纪念版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2017.11.30</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">修正部分描述；采用和 P3C 开源 IDE 检测插件相同的 Apache2.0 协议。</p></td></tr><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">1.4.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">详尽版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s77" style="padding-top: 6pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2018.05.20</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 6pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">增加设计规约大类，共 16 条。</p></td></tr></table><table style="border-collapse:collapse;margin-left:12.275pt" cellspacing="0"><tr style="height:31pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 5pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">版本号</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 5pt;padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">版本名</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 5pt;padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">发布日期</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 5pt;padding-left: 168pt;padding-right: 166pt;text-indent: 0pt;text-align: center;">备注</p></td></tr><tr style="height:158pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.5.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">华山版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2019.06.19</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l74"><li data-list-text="1）"><p class="s13" style="padding-top: 5pt;padding-left: 8pt;padding-right: 11pt;text-indent: 0pt;line-height: 127%;text-align: left;">鉴于本手册是社区开发者集体智慧的结晶，本版本移除阿里巴巴 Java 开发手册的限定词“阿里巴巴”。</p></li><li data-list-text="2）"><p class="s13" style="padding-left: 8pt;padding-right: 7pt;text-indent: 0pt;line-height: 127%;text-align: left;">新增 21 条新规约。比如，switch 的 NPE 问题、浮点数的比较、无泛型限制、锁的使用方式、判断表达式、日期格式等。</p></li><li data-list-text="3）"><p class="s13" style="padding-left: 23pt;text-indent: -14pt;text-align: left;">修改描述 112 处。比如，IFNULL 的判断、集合的 toArray、日志处理等。</p></li><li data-list-text="4）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">完善若干处示例。比如，命名示例、卫语句示例、enum 示例、finally 的 return</p></li></ol><p class="s13" style="padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">示例等。</p></td></tr><tr style="height:115pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.6.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">泰山版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s77" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2020.04.22</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l75"><li data-list-text="1）"><p class="s80" style="padding-top: 5pt;padding-left: 23pt;text-indent: -14pt;text-align: left;"><a href="#bookmark63" style=" color: #333; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">发布错误码统一解决方案，详细参考</a><a href="#bookmark63" class="s79">附表 </a><span style=" color: #00F; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 9pt;">3</span>。</p></li><li data-list-text="2）"><p class="s13" style="padding-top: 4pt;padding-left: 8pt;padding-right: 7pt;text-indent: 0pt;line-height: 128%;text-align: left;">新增 34 条新规约。比如，日期时间的闰年、闰月问题，三目运算的自动拆箱，SQL查询的表别名限定，Collectors 类的 toMap()方法使用注意等。</p></li><li data-list-text="3）"><p class="s13" style="padding-left: 23pt;text-indent: -14pt;text-align: left;">修改描述 90 处。比如，阻塞等待锁、建表的小数类型等。</p></li><li data-list-text="4）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">完善若干处示例。比如，ISNULL 的示例等。</p></li></ol></td></tr><tr style="height:157pt"><td style="width:49pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">1.7.0</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="padding-left: 12pt;padding-right: 11pt;text-indent: 0pt;text-align: center;">嵩山版</p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="padding-left: 3pt;padding-right: 2pt;text-indent: 0pt;text-align: center;">2020.08.03</p></td><td style="width:356pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><ol id="l76"><li data-list-text="1）"><p class="s13" style="padding-top: 5pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">新增前后端规约 14 条。</p></li><li data-list-text="2）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">新增禁止任何歧视性用语的约定。</p></li><li data-list-text="3）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">新增涉及敏感操作的情况下日志需要保存六个月的约定。</p></li><li data-list-text="4）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">修正 BigDecimal 类中关于 compareTo 和 equals 的等值比较。</p></li><li data-list-text="5）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">修正 HashMap 关于 1024 个元素扩容的次数。</p></li><li data-list-text="6）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">修正架构分层规范与相关说明。</p></li><li data-list-text="7）"><p class="s13" style="padding-top: 4pt;padding-left: 23pt;text-indent: -14pt;text-align: left;">修正泰山版中部分格式错误和描述错误。</p></li></ol></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark60"><span class="s76" style=" background-color: #FBFBFB;">附 2：专有名词解释</span></a><a name="bookmark61">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l77"><li data-list-text="1."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">POJO</span><span class="s9">（</span><span class="s12">Plain Ordinary Java Object</span><span class="s9">）: 在本规约中，POJO 专指只有 setter/getter/toString 的简单类，包括 DO/DTO/BO/VO 等。</span></p></li><li data-list-text="2."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">DO</span><span class="s9">（</span><span class="s12">Data Object</span><span class="s9">）：阿里巴巴专指数据库表一一对应的 POJO 类。此对象与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</span></p></li><li data-list-text="3."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">DTO</span><span class="s9">（</span><span class="s12">Data Transfer Object</span><span class="s9">）：数据传输对象，Service 或 Manager 向外传输的对象。</span></p></li><li data-list-text="4."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">BO</span><span class="s9">（</span><span class="s12">Business Object</span><span class="s9">）：业务对象，可以由 Service 层输出的封装业务逻辑的对象。</span></p></li><li data-list-text="5."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 22pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">Query</span><span class="s9">：数据查询对象，各层接收上层的查询请求。注意超过 2 个参数的查询封装，禁止使用</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">Map 类来传输。</p></li><li data-list-text="6."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">VO</span><span class="s9">（</span><span class="s12">View Object</span><span class="s9">）：显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</span></p></li><li data-list-text="7."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">AO</span><span class="s9">（</span><span class="s12">Application Object</span><span class="s9">）: 阿里巴巴专指Application Object，即在 Service 层上，极为贴近业务的复用代码。</span></p></li><li data-list-text="8."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">CAS</span><span class="s9">（</span><span class="s12">Compare And Swap</span><span class="s9">）：解决多线程并行情况下使用锁造成性能损耗的一种机制，这是硬件实现的原子操作。CAS 操作包含三个操作数：内存位置、预期原值和新值。如果内存位置的值与预期原值相匹配，那么处理器会自动将该位置值更新为新值。否则，处理器不做任何操作。</span></p></li><li data-list-text="9."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">GAV</span><span class="s9">（</span><span class="s12">GroupId、ArtifactId、Version</span><span class="s9">）: Maven 坐标，是用来唯一标识 jar 包。</span></p></li><li data-list-text="10."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">OOP</span><span class="s9">（</span><span class="s12">Object Oriented Programming</span><span class="s9">）: 本文泛指类、对象的编程处理方式。</span></p></li><li data-list-text="11."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">AQS</span><span class="s9">（</span><span class="s12">AbstractQueuedSynchronizer</span><span class="s9">）: 利用先进先出队列实现的底层同步工具类，它是很多上层同步实现类的基础，比如：ReentrantLock、CountDownLatch、Semaphore 等，它们通过继承 AQS 实现其模版方法，然后将 AQS 子类作为同步组件的内部类，通常命名为 Sync。</span></p></li><li data-list-text="12."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">ORM</span><span class="s9">（</span><span class="s12">Object Relation Mapping</span><span class="s9">）: 对象关系映射，对象领域模型与底层数据之间的转换，本文泛指 iBATIS, mybatis 等框架。</span></p></li><li data-list-text="13."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s81" style=" background-color: #D9D9D9;">NPE</span><span class="s9">（</span><span class="s12">java.lang.NullPointerException</span><span class="s9">）: 空指针异常。</span></p></li><li data-list-text="14."><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">OOM</span><span class="s9">（</span><span class="s12">Out Of Memory</span><span class="s9">）: 源于 java.lang.OutOfMemoryError，当 JVM 没有足够的内存来为对象分配空间并且垃圾回收器也无法回收空间时，系统出现的严重状况。</span></p></li><li data-list-text="15."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">一方库</span><span class="s9">: 本工程内部子项目模块依赖的库（jar 包）。</span></p></li><li data-list-text="16."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">二方库</span><span class="s9">: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库（jar 包）。</span></p></li><li data-list-text="17."><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s81" style=" background-color: #D9D9D9;">三方库</span><span class="s9">: 公司之外的开源库（jar 包）。</span></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark62"><span class="s76" style=" background-color: #FBFBFB;">附 3：错误码列表</span></a><a name="bookmark63">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">错误码</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 73pt;padding-right: 72pt;text-indent: 0pt;text-align: center;">中文描述</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#DFDFDF"><p class="s13" style="padding-top: 6pt;padding-left: 103pt;padding-right: 103pt;text-indent: 0pt;text-align: center;">说明</p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s82" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">00000</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">一切 ok</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">正确执行后的返回</p></td></tr><tr style="height:20pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s57" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0001</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户端错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">一级宏观错误码</p></td></tr><tr style="height:20pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s84" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0100</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户注册错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0101</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户未同意隐私协议</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0102</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">注册国家或地区受限</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0110</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户名校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0111</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户名已存在</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0112</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户名包含敏感词</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0113</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户名包含特殊字符</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0120</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">密码校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0121</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">密码长度不够</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0122</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">密码强度不够</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0130</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">校验码输入错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0131</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">短信校验码输入错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0132</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">邮件校验码输入错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0133</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">语音校验码输入错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0140</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户证件异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0141</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户证件类型未选择</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0142</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">大陆身份证编号校验非法</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0143</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">护照编号校验非法</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0144</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">军官证编号校验非法</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0150</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户基本信息校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0151</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">手机格式校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0152</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">地址格式校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0153</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">邮箱格式校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0200</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户登录异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0201</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户账户不存在</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0202</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户账户被冻结</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0203</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户账户已作废</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0210</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户密码错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0211</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户输入密码错误次数超限</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0220</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户身份校验失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0221</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户指纹识别失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0222</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户面容识别失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0223</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户未获得第三方登录授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0230</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户登录已过期</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0240</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户验证码错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0241</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户验证码尝试次数超限</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0300</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">访问权限异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0301</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">访问未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0302</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">正在授权中</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0303</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户授权申请被拒绝</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0310</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">因访问对象隐私设置被拦截</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0311</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">授权已过期</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0312</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无权限使用 API</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0320</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户访问被拦截</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0321</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">黑名单用户</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0322</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">账号被冻结</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0323</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">非法 IP 地址</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0324</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">网关访问受限</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0325</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">地域黑名单</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0330</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">服务已欠费</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0340</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户签名异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0341</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">RSA 签名错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0400</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户请求参数错误</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0401</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">包含非法恶意跳转链接</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0402</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">无效的用户输入</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0410</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求必填参数为空</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0411</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户订单号为空</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0412</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">订购数量为空</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0413</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">缺少时间戳参数</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0414</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">非法的时间戳参数</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0420</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求参数值超出允许的范围</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0421</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">参数格式不匹配</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0422</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">地址不在服务范围</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0423</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">时间不在服务范围</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0424</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">金额超出限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0425</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">数量超出限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0426</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求批量处理总个数超出限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0427</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求 JSON 解析失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0430</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户输入内容非法</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0431</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">包含违禁敏感词</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0432</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">图片包含违禁信息</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0433</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">文件侵犯版权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0440</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户操作异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0441</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户支付超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0442</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">确认订单超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0443</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">订单已关闭</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0500</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户请求服务异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0501</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求次数超出限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0502</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">请求并发数超出限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0503</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户操作请等待</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0504</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">WebSocket 连接异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0505</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">WebSocket 连接断开</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0506</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户重复请求</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0600</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户资源异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0601</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">账户余额不足</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0602</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户磁盘空间不足</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0603</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户内存空间不足</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0604</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户 OSS 容量不足</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0605</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户配额已用光</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">蚂蚁森林浇水数或每天抽奖数</p></td></tr><tr style="height:20pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0700</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户上传文件异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0701</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户上传文件类型不匹配</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0702</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户上传文件太大</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0703</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户上传图片太大</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0704</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户上传视频太大</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0705</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户上传压缩文件太大</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0800</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户当前版本异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0801</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户安装版本与系统不匹配</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0802</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户安装版本过低</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0803</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户安装版本过高</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0804</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户安装版本已过期</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0805</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户 API 请求版本不匹配</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0806</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户 API 请求版本过高</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0807</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户 API 请求版本过低</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A0900</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户隐私未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0901</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户隐私未签署</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0902</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户摄像头未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0903</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户相机未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0904</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户图片库未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0905</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户文件未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0906</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户位置信息未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A0907</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户通讯录未授权</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">A1000</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">用户设备异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A1001</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户相机异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A1002</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户麦克风异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A1003</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户听筒异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A1004</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户扬声器异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">A1005</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">用户 GPS 定位异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:475pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s57" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">B0001</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">系统执行出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">一级宏观错误码</p></td></tr><tr style="height:20pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">B0100</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">系统执行超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0101</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统订单处理超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">B0200</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">系统容灾功能被触发</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0210</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统限流</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0220</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统功能降级</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">B0300</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">系统资源异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0310</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统资源耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0311</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统磁盘空间耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0312</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统内存耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0313</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">文件句柄耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0314</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统连接池耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0315</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统线程池耗尽</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0320</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统资源访问异常</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">B0321</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">系统读取磁盘文件失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:475pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s57" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0001</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">调用第三方服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">一级宏观错误码</p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C0100</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">中间件服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0110</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">RPC 服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0111</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">RPC 服务未找到</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0112</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">RPC 服务未注册</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0113</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">接口不存在</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0120</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0121</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息投递出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0122</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息消费出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0123</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息订阅出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0124</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息分组未查到</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><table style="border-collapse:collapse;margin-left:34.65pt" cellspacing="0"><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0130</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">缓存服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0131</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">key 长度超过限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0132</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">value 长度超过限制</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0133</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">存储容量已满</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0134</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">不支持的数据格式</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0140</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">配置服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0150</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">网络资源服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0151</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">VPN 服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0152</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">CDN 服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0153</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">域名解析服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0154</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">网关服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C0200</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">第三方系统执行超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0210</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">RPC 执行超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0220</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">消息投递超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0230</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">缓存服务超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0240</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">配置服务超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0250</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">数据库服务超时</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C0300</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">数据库服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0311</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">表不存在</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0312</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">列不存在</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0321</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">多表关联中存在多个相同名称的列</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0331</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">数据库死锁</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0341</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">主键冲突</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C0400</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">第三方容灾系统被触发</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0401</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">第三方系统限流</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0402</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">第三方功能降级</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">C0500</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">通知服务出错</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:6pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">二级宏观错误码</p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0501</p></td><td style="width:184pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#FFFFFF;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">短信提醒服务失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:6pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0502</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-top-color:#FFFFFF;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">语音提醒服务失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">C0503</p></td><td style="width:184pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s83" style="padding-top: 6pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">邮件提醒服务失败</p></td><td style="width:227pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="696" height="1" alt="image" src="Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span><img width="697" height="1036" alt="image" src="Image_005.jpg"/></span></p></body></html>
