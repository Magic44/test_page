<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>附2：专有名词解释</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part31.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part33.htm">下一个 &gt;</a></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark60"><span class="s83" style=" background-color: #FBFBFB;">附 2：专有名词解释</span></a><a name="bookmark61">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s9">1. </span><span class="s88" style=" background-color: #D9D9D9;">POJO</span><span class="s9">（</span><span class="s12">Plain Ordinary Java Object</span><span class="s9">）: 在本规约中，POJO 专指只有 setter/getter/toString 的简单类，包括 DO/DTO/BO/VO 等。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s9">2. </span><span class="s88" style=" background-color: #D9D9D9;">DO</span><span class="s9">（</span><span class="s12">Data Object</span><span class="s9">）：阿里巴巴专指数据库表一一对应的 POJO 类。此对象与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</span></p><p style="padding-top: 3pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span class="s9">3. </span><span class="s88" style=" background-color: #D9D9D9;">DTO</span><span class="s9">（</span><span class="s12">Data Transfer Object</span><span class="s9">）：数据传输对象，Service 或 Manager 向外传输的对象。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span class="s9">4. </span><span class="s88" style=" background-color: #D9D9D9;">BO</span><span class="s9">（</span><span class="s12">Business Object</span><span class="s9">）：业务对象，可以由 Service 层输出的封装业务逻辑的对象。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;line-height: 22pt;text-align: left;"><span class="s9">5. </span><span class="s88" style=" background-color: #D9D9D9;">Query</span><span class="s9">：数据查询对象，各层接收上层的查询请求。注意超过 2 个参数的查询封装，禁止使用</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">Map 类来传输。</p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="s9">6. </span><span class="s88" style=" background-color: #D9D9D9;">VO</span><span class="s9">（</span><span class="s12">View Object</span><span class="s9">）：显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s9">7. </span><span class="s88" style=" background-color: #D9D9D9;">AO</span><span class="s9">（</span><span class="s12">Application Object</span><span class="s9">）: 阿里巴巴专指Application Object，即在 Service 层上，极为贴近业务的复用代码。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s9">8. </span><span class="s88" style=" background-color: #D9D9D9;">CAS</span><span class="s9">（</span><span class="s12">Compare And Swap</span><span class="s9">）：解决多线程并行情况下使用锁造成性能损耗的一种机制，这是硬件实现的原子操作。CAS 操作包含三个操作数：内存位置、预期原值和新值。如果内存位置的值与预期原值相匹配，那么处理器会自动将该位置值更新为新值。否则，处理器不做任何操作。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="s9">9. </span><span class="s88" style=" background-color: #D9D9D9;">GAV</span><span class="s9">（</span><span class="s12">GroupId、ArtifactId、Version</span><span class="s9">）: Maven 坐标，是用来唯一标识 jar 包。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="s9">10. </span><span class="s88" style=" background-color: #D9D9D9;">OOP</span><span class="s9">（</span><span class="s12">Object Oriented Programming</span><span class="s9">）: 本文泛指类、对象的编程处理方式。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s9">11. </span><span class="s88" style=" background-color: #D9D9D9;">AQS</span><span class="s9">（</span><span class="s12">AbstractQueuedSynchronizer</span><span class="s9">）: 利用先进先出队列实现的底层同步工具类，它是很多上层同步实现类的基础，比如：ReentrantLock、CountDownLatch、Semaphore 等，它们通过继承 AQS 实现其模版方法，然后将 AQS 子类作为同步组件的内部类，通常命名为 Sync。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;"><span class="s9">12. </span><span class="s88" style=" background-color: #D9D9D9;">ORM</span><span class="s9">（</span><span class="s12">Object Relation Mapping</span><span class="s9">）: 对象关系映射，对象领域模型与底层数据之间的转换，本文泛指 iBATIS, mybatis 等框架。</span></p><p style="padding-top: 3pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="s9">13. </span><span class="s88" style=" background-color: #D9D9D9;">NPE</span><span class="s9">（</span><span class="s12">java.lang.NullPointerException</span><span class="s9">）: 空指针异常。</span></p><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><span class="s9">14. </span><span class="s88" style=" background-color: #D9D9D9;">OOM</span><span class="s9">（</span><span class="s12">Out Of Memory</span><span class="s9">）: 源于 java.lang.OutOfMemoryError，当 JVM 没有足够的内存来为对象分配空间并且垃圾回收器也无法回收空间时，系统出现的严重状况。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span class="s9">15. </span><span class="s88" style=" background-color: #D9D9D9;">一方库</span><span class="s9">: 本工程内部子项目模块依赖的库（jar 包）。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span class="s9">16. </span><span class="s88" style=" background-color: #D9D9D9;">二方库</span><span class="s9">: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库（jar 包）。</span></p><p style="padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span class="s9">17. </span><span class="s88" style=" background-color: #D9D9D9;">三方库</span><span class="s9">: 公司之外的开源库（jar 包）。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part31.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part33.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
