<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>(十一) 其他</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part13.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part15.htm">下一个 &gt;</a></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark13">(十一) 其他</a><a name="bookmark25">&zwnj;</a></p><p class="s9" style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">1. <span style=" color: #C00000;">【强制】</span>在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">不要在方法体内定义：Pattern pattern = Pattern.compile(“规则”);</span></p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">2. <span style=" color: #C00000;">【强制】</span>避免用 Apache Beanutils 进行属性的 copy。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">Apache BeanUtils 性能较差，可以使用其他方案比如 Spring BeanUtils, Cglib BeanCopier，注意均是浅拷贝。</span></p><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">3. <span style=" color: #C00000;">【强制】</span><span class="s12">velocity </span>调用 <span class="s12">POJO </span>类的属性时，直接使用属性名取值即可，模板引擎会自动按规范调用 <span class="s12">POJO </span>的 <span class="s12">getXxx()</span>，如果是 <span class="s12">boolean </span>基本数据类型变量<span class="s12">（boolean </span>命名不需要加 <span class="s12">is </span>前缀<span class="s12">）</span>，会自动调用 <span class="s12">isXxx()</span>方法。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">注意如果是 Boolean 包装类对象，优先调用 getXxx()的方法。</span></p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">4. <span style=" color: #C00000;">【强制】</span>后台输送给页面的变量必须加<span class="s12">$!{var}</span>——中间的感叹号。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">如果 var 等于 null 或者不存在，那么${var}会直接显示在页面上。</span></p><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">5. <span style=" color: #C00000;">【强制】</span>注意 <span class="s12">Math</span>.<span class="s12">random() </span>这个方法返回是 <span class="s12">double </span>类型，注意取值的范围 0≤<span class="s12">x</span>&lt;1<span class="s12">（</span>能够取到<span style=" color: #00F;">零</span>值，注意除零异常<span class="s12">）</span>，如果想获取整数类型的随机数，不要将 <span class="s12">x </span>放大 10 的若干倍然后取整，直接使用 <span class="s12">Random </span>对象的 <span class="s64">nextInt </span><span style=" color: #000;">或者 </span><span class="s64">nextLong </span>方法。</p><p class="s9" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">6. <span style=" color: #FFC000;">【推荐】</span>不要在视图模板中加入任何复杂的逻辑。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: justify;">说明：<span style=" color: #333;">根据 MVC 理论，视图的职责是展示，不要抢模型和控制器的活。</span></p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">7. <span style=" color: #FFC000;">【推荐】</span>任何数据结构的构造或初始化，都应指定大小，避免数据结构无限增长吃光内存。</p><p class="s9" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">8. <span style=" color: #FFC000;">【推荐】</span>及时清理不再使用的代码段或配置信息。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">对于垃圾代码或过时配置，坚决清理干净，避免程序过度臃肿，代码冗余。</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例：<span style=" color: #333;">对于暂时被注释掉，后续可能恢复使用的代码片断，在注释代码上方，统一规定使用三个斜杠(///)来说明注释掉代码的理由。如：</span></p><p class="s28" style="padding-top: 5pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">public static void <span style=" color: #DD4968;">hello</span><span style=" color: #999;">() {</span></p><p class="s31" style="padding-top: 4pt;padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">/// 业务方通知活动暂停</p><p class="s31" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;">// Business business = new Business();</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #6F8090;">// business.active(); </span><span style=" color: #000;">System</span>.<span style=" color: #000;">out</span>.<span style=" color: #DD4968;">println</span>(<span style=" color: #50A04F;">&quot;it&#39;s finished&quot;</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part13.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part15.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
