<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>(九) 注释规约</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part11.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part13.htm">下一个 &gt;</a></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark11">(九) 注释规约</a><a name="bookmark23">&zwnj;</a></p><p class="s9" style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 22pt;text-align: left;">1. <span style=" color: #C00000;">【强制】</span>类、类属性、类方法的注释必须使用 Javadoc 规范，使用/**内容*/格式，不得使用</p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">// xxx 方式。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">在 IDE 编辑窗口中，Javadoc 方式会提示相关注释，生成 Javadoc 可以正确输出相应注释；在 IDE</span></p><p style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;text-align: left;">中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率。</p><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">2. <span style=" color: #C00000;">【强制】</span>所有的抽象方法<span class="s12">（</span>包括接口中的方法<span class="s12">）</span>必须要用 <span class="s12">Javadoc </span>注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">对子类的实现要求，或者调用注意事项，请一并说明。</span></p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">3. <span style=" color: #C00000;">【强制】</span>所有的类都必须添加创建者和创建日期。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">在设置模板时，注意 IDEA 的@author 为`${USER}`，而 eclipse 的@author 为`${user}`，大小写有区别，而日期的设置统一为 yyyy/MM/dd 的格式</span><span style=" color: #333;">。</span></p><p class="s24" style="padding-left: 43pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s31" style="padding-top: 3pt;padding-left: 51pt;text-indent: 0pt;text-align: left;">/**</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 59pt;text-indent: 0pt;text-align: left;">* @author yangguanbao</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 59pt;text-indent: 0pt;text-align: left;">* @date 2016/10/31</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 59pt;text-indent: 0pt;text-align: left;">*/</p><p class="s9" style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">4. <span style=" color: #C00000;">【强制】</span>方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释，注意与代码对齐。</p><p class="s9" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">5. <span style=" color: #C00000;">【强制】</span>所有的枚举类型字段必须要有注释，说明每个数据项的用途。</p><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">6. <span style=" color: #FFC000;">【推荐】</span>与其“半吊子”英文来注释，不如用中文注释把问题说清楚。专有名词与关键字保持英文原文即可。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">反例：<span style=" color: #333;">“TCP 连接超时”解释成“传输控制协议连接超时”，理解反而费脑筋。</span></p><p class="s9" style="padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">7. <span style=" color: #FFC000;">【推荐】</span>代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑等的修改。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">代码与注释更新不同步，就像路网与导航软件更新不同步一样，如果导航软件严重滞后，就失去了导航的意义。</span></p><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">8. <span style=" color: #FFC000;">【推荐】</span>在类中删除未使用的任何字段、方法、内部类；在方法中删除未使用的任何参数声明与内部变量。</p><p class="s9" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">9. <span style=" color: #76923B;">【参考】</span>谨慎注释掉代码。在上方详细说明，而不是简单地注释掉。如果无用，则删除。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #333;">代码被注释掉有两种可能性：1）后续会恢复此段代码逻辑。2）永久不用。前者如果没有备注信息，难以知晓注释动机。后者建议直接删掉即可，假如需要查阅历史代码，登录代码仓库即可。</span></p><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">10. <span style=" color: #76923B;">【参考】</span>对于注释的要求：第一、能够准确反映设计思想和代码逻辑<span class="s12">；</span>第二、能够描述业务含义，使别的程序员能够迅速了解到代码背后的信息。完全没有注释的大段代码对于阅读者形同天书，注释是给自己看的，即使隔很长时间，也能清晰理解当时的思路<span class="s12">；</span>注释也是给继任者看的，使其能够快速接替自己的工作。</p><p class="s9" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: justify;">11. <span style=" color: #76923B;">【参考】</span>好的命名、代码结构是自解释的，注释力求精简准确、表达到位。避免出现注释的一个极端：过多过滥的注释，代码的逻辑一旦修改，修改注释又是相当大的负担。</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s30" style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #6F8090;">// put elephant into fridge </span><span style=" color: #DD4968;">put</span>(<span style=" color: #000;">elephant</span>, <span style=" color: #000;">fridge</span>);</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">方法名 put，加上两个有意义的变量名 elephant 和fridge，已经说明了这是在干什么，语义清晰的代码不需要额外的注释。</p><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">12. <span style=" color: #76923B;">【参考】</span>特殊注释标记，请注明标记人与标记时间。注意及时处理这些标记，通过标记扫描，经常清理此类标记。线上故障有时候就是来源于这些标记处的代码。</p><p style="padding-left: 47pt;text-indent: 0pt;text-align: left;">1） 待办事宜（<span style=" color: #00F;">TODO</span>）:（标记人，标记时间，[预计处理时间]）</p><p style="padding-top: 1pt;padding-left: 74pt;text-indent: -16pt;line-height: 110%;text-align: left;">表示需要实现，但目前还未实现的功能。这实际上是一个 Javadoc 的标签，目前的 Javadoc 还没有实现，但已经被广泛使用。只能应用于类，接口和方法（因为它是一个 Javadoc 标签）。</p><p style="padding-left: 47pt;text-indent: 0pt;line-height: 19pt;text-align: left;">2） 错误，不能工作（<span style=" color: #00F;">FIXME</span>）:（标记人，标记时间，[预计处理时间]）</p><p style="padding-top: 1pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">在注释中用 FIXME 标记某代码是错误的，而且不能工作，需要及时纠正的情况。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part11.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part13.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
