<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>(二) 常量定义</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part4.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part6.htm">下一个 &gt;</a></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark4">(二) 常量定义</a><a name="bookmark16">&zwnj;</a></p><p class="s9" style="padding-left: 24pt;text-indent: 0pt;line-height: 19pt;text-align: left;">1. <span style=" color: #C00000;">【强制】</span>不允许任何魔法值<span class="s12">（</span>即未经预先定义的常量<span class="s12">）</span>直接出现在代码中。</p><p class="s18" style="padding-left: 47pt;text-indent: 0pt;line-height: 15pt;text-align: left;">反例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">// 本例中，开发者 A 定义了缓存的 key，然后开发者 B 使用缓存时少了下划线，即 key 是&quot;Id#taobao&quot;+tradeId，导致出现故障</p><p class="s29" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;">String key <span style=" color: #A67E58;">= </span><span style=" color: #50A04F;">&quot;Id#taobao_&quot; </span><span style=" color: #A67E58;">+ </span>tradeId<span style=" color: #999;">; </span>cache<span style=" color: #999;">.</span><span style=" color: #DD4968;">put</span><span style=" color: #999;">(</span>key<span style=" color: #999;">, </span>value<span style=" color: #999;">);</span></p><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">2. <span style=" color: #C00000;">【强制】</span>在 long 或者Long 赋值时，数值后使用大写字母 L，不能是小写字母 l，小写容易跟数字混淆，造成误解。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">Long a = 2l; 写的是数字的 21，还是Long 型的 2？</span></p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">3. <span style=" color: #FFC000;">【推荐】</span>不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。</p><p style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span style=" color: #967B00;">说明：</span>大而全的常量类，杂乱无章，使用查找功能才能定位到修改的常量，不利于理解，也不利于维护。<span style=" color: #009757;">正例：</span>缓存相关常量放在类 CacheConsts 下；系统配置相关常量放在类 SystemConfigConsts 下。</p><p class="s9" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">4. <span style=" color: #FFC000;">【推荐】</span>常量的复用层次有五层：跨应用共享常量、应用内共享常量、子工程内共享常量、包内共享常量、类内共享常量。</p><p style="padding-left: 47pt;text-indent: 0pt;text-align: left;">1） 跨应用共享常量：放置在二方库中，通常是 client.jar 中的 constant 目录下。</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">2） 应用内共享常量：放置在一方库中，通常是子模块中的 constant 目录下。</p><p class="s18" style="padding-top: 1pt;padding-left: 63pt;text-indent: -15pt;line-height: 110%;text-align: left;">反例：<span style=" color: #333;">易懂变量也要统一定义成应用内共享常量，两位工程师在两个类中分别定义了“YES”的变量：类 A 中：public static final String YES = &quot;yes&quot;;</span></p><p style="padding-left: 63pt;text-indent: 0pt;line-height: 110%;text-align: left;">类 B 中：public static final String YES = &quot;y&quot;;   A.YES.equals(B.YES)，预期是 true，但实际返回为 false，导致线上问题。</p><p style="padding-left: 47pt;text-indent: 0pt;line-height: 19pt;text-align: left;">3） 子工程内部共享常量：即在当前子工程的 constant 目录下。</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">4） 包内共享常量：即在当前包下单独的 constant 目录下。</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">5） 类内共享常量：直接在类内部 private static final 定义。</p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">5. <span style=" color: #FFC000;">【推荐】</span><span style=" color: #23292D;">如果变量值仅在一个固定范围内变化用 enum 类型来定义。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">说明：<span style=" color: #23292D;">如果存在名称之外的延伸属性应使用 enum 类型，下面正例中的数字就是延伸信息，表示一年中的第几个季节。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">正例：</p><p class="s28" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">public enum <span style=" color: #000;">SeasonEnum </span><span style=" color: #999;">{</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span style=" color: #DD4968;">SPRING</span>(<span style=" color: #990054;">1</span>), <span style=" color: #DD4968;">SUMMER</span>(<span style=" color: #990054;">2</span>), <span style=" color: #DD4968;">AUTUMN</span>(<span style=" color: #990054;">3</span>), <span style=" color: #DD4968;">WINTER</span>(<span style=" color: #990054;">4</span>);</p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 85%;text-align: left;"><span style=" color: #07A;">private int </span><span style=" color: #000;">seq</span>; <span style=" color: #DD4968;">SeasonEnum</span>(<span style=" color: #07A;">int </span><span style=" color: #000;">seq</span>) {</p><p class="s29" style="padding-top: 2pt;padding-left: 90pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">this</span><span style=" color: #999;">.</span>seq <span style=" color: #A67E58;">= </span>seq<span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p class="s28" style="padding-left: 90pt;text-indent: -18pt;line-height: 84%;text-align: left;">public int <span style=" color: #DD4968;">getSeq</span><span style=" color: #999;">() { </span>return <span style=" color: #000;">seq</span><span style=" color: #999;">;</span></p><p class="s30" style="padding-left: 72pt;text-indent: 0pt;line-height: 13pt;text-align: left;">}</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part4.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part6.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
