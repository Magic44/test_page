<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>(五) 日期时间</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part7.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part9.htm">下一个 &gt;</a></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark7">(五) 日期时间</a><a name="bookmark19">&zwnj;</a></p><p class="s2" style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">1. <span style=" color: #C00000;">【强制】</span><span style=" color: #333;">日期格式化时，传入 pattern 中表示年份统一使用小写的 y。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: justify;">说明：<span style=" color: #333;">日期格式化时，yyyy 表示当天所在的年，而大写的 YYYY 代表是 week in which year（JDK7 之后引入的概念），意思是当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，返回的 YYYY就是下一年。</span></p><p class="s24" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">正例：<span style=" color: #333;">表示日期和时间的格式如下所示：</span></p><p class="s29" style="padding-top: 3pt;padding-left: 78pt;text-indent: 0pt;text-align: left;">new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">2. <span style=" color: #C00000;">【强制】</span><span style=" color: #333;">在日期格式中分清楚大写的 M 和小写的 m，大写的 H 和小写的 h 分别指代的意义。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">日期格式中的这两对字母表意如下：</span></p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">1） 表示月份是大写的 M；</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">2） 表示分钟则是小写的 m；</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">3） 24 小时制的是大写的H；</p><p style="padding-top: 1pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">4） 12 小时制的则是小写的 h。</p><p class="s2" style="padding-top: 12pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: left;">3. <span style=" color: #C00000;">【强制】</span><span style=" color: #333;">获取当前毫秒数：System.currentTimeMillis(); 而不是 new Date().getTime()。 </span><span class="s21">说明：</span><span class="s12">如果想获取更加精确的纳秒级时间值，使用 System.nanoTime 的方式。在 JDK8 中，针对统计时间等场景，推荐使用 Instant 类。</span></p><p class="s2" style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">4. <span style=" color: #C00000;">【强制】</span><span style=" color: #333;">不允许在程序任何地方中使用：1）java.sql.Date。 2）java.sql.Time。 3）java.sql.Timestamp。</span></p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;line-height: 109%;text-align: left;">说明：<span style=" color: #333;">第 1 个不记录时间，getHours()抛出异常；第 2 个不记录日期，getYear()抛出异常；第 3 个在构造方法 super((time/1000)*1000)，在 Timestamp 属性 fastTime 和 nanos 分别存储秒和纳秒信息。</span></p><p class="s18" style="padding-top: 7pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">反例： <span style=" color: #333;">java.util.Date.after(Date)进行时间比较时，当入参是 java.sql.Timestamp 时，会触发 JDK BUG(JDK9 已修复)，可能导致比较时的意外结果。</span></p><p class="s2" style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">5. <span style=" color: #C00000;">【强制】</span><span style=" color: #333;">不要在程序中写死一年为 365 天，避免在公历闰年时出现日期转换错误或程序逻辑错误。</span></p><p class="s24" style="padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">正例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 获取今年的天数</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">int </span><span style=" color: #000;">daysOfThisYear </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">LocalDate</span>.<span style=" color: #DD4968;">now</span>().<span style=" color: #DD4968;">lengthOfYear</span>();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 获取指定某年的天数</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">LocalDate</span>.<span style=" color: #DD4968;">of</span>(<span style=" color: #990054;">2011</span>, <span style=" color: #990054;">1</span>, <span style=" color: #990054;">1</span>).<span style=" color: #DD4968;">lengthOfYear</span>();</p><p class="s18" style="padding-left: 42pt;text-indent: 0pt;line-height: 19pt;text-align: left;">反例：</p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 第一种情况：在闰年 366 天时，出现数组越界异常</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #07A;">int</span>[] <span style=" color: #000;">dayArray </span><span style=" color: #A67E58;">= </span><span style=" color: #07A;">new </span><span style=" color: #000;">int</span>[<span style=" color: #990054;">365</span>];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;">// 第二种情况：一年有效期的会员制，今年 1 月 26 日注册，硬编码 365 返回的却是 1 月 25 日</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 84%;text-align: left;"><span style=" color: #000;">Calendar calendar </span><span style=" color: #A67E58;">= </span><span style=" color: #000;">Calendar</span>.<span style=" color: #DD4968;">getInstance</span>(); <span style=" color: #000;">calendar</span>.<span style=" color: #DD4968;">set</span>(<span style=" color: #990054;">2020</span>, <span style=" color: #990054;">1</span>, <span style=" color: #990054;">26</span>);</p><p class="s30" style="padding-left: 54pt;text-indent: 0pt;line-height: 15pt;text-align: left;"><span style=" color: #000;">calendar</span>.<span style=" color: #DD4968;">add</span>(<span style=" color: #000;">Calendar</span>.<span style=" color: #000;">DATE</span>, <span style=" color: #990054;">365</span>);</p><p class="s2" style="padding-top: 9pt;padding-left: 24pt;text-indent: 0pt;line-height: 22pt;text-align: left;">6. <span style=" color: #FFC000;">【推荐】</span><span style=" color: #333;">避免公历闰年 2 月问题。闰年的 2 月份有 29 天，一年后的那一天不可能是 2 月 29</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">日。</p><p class="s2" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;line-height: 22pt;text-align: left;">7. <span style=" color: #FFC000;">【推荐】</span><span style=" color: #333;">使用枚举值来指代月份。如果使用数字，注意 Date，Calendar 等日期相关类的月份</span></p><p class="s9" style="padding-left: 42pt;text-indent: 0pt;line-height: 22pt;text-align: left;">month 取值在 0-11 之间。</p><p class="s27" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">说明：<span style=" color: #333;">参考 JDK 原生注释，Month value is 0-based. e.g., 0 for January.</span></p><p class="s24" style="padding-top: 1pt;padding-left: 42pt;text-indent: 0pt;line-height: 110%;text-align: left;">正例： <span style=" color: #333;">Calendar.JANUARY，Calendar.FEBRUARY，Calendar.MARCH 等来指代相应月份来进行传参或比较。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part7.htm">&lt; 上一个</a><span> | </span><a href="../阿里云嵩山版Java开发手册.html">内容</a><span> | </span><a href="part9.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
